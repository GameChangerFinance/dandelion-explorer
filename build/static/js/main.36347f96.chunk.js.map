{"version":3,"sources":["resources/progress.gif","components/Auth.js","components/HistoryPane.tsx","components/DbPicker.tsx","components/DbSchema.js","components/LeftPane.tsx","components/LoginDialog.tsx","components/Help.js","components/FeatureDiscoveryPrompt/injectStyle.js","components/FeatureDiscoveryPrompt/Circles.js","components/FeatureDiscoveryPrompt/FeatureDiscoveryPrompt.js","components/Navigation.js","components/SubmitButton.tsx","components/Downloads.js","components/NewRow.js","components/EditCard.js","components/DataTable.js","components/RightPaneChips.js","components/RightPane.js","components/App.tsx","data/constants.ts","index.js","utils/library.ts"],"names":["module","exports","lib","require","Auth","dbIndex","name","isLoggedIn","userEmail","userPassword","jwtToken","jwtTokenExpiry","this","_fromLocalStorage","isAuthenticated","_loginPostRequest","then","resp","newEmail","newPassword","_toLocalStorage","softLogout","Date","now","test","newDbIndex","loginUrl","getDbConfig","axios","post","email","pass","rawResp","data","_setStatusTokenExpiry","token","tokenExpiry","console","error","status","expiry","JSON","stringify","_","HistoryPane","props","changeDisplayIndexDebounce","timer","localHistoryArray","parse","localStorage","getItem","state","newHistoryItem","displayIndex","historyArray","deleteHistoryDialogVisibilityStyles","styleSheet","hide","snackBarVisibility","snackBarMessage","debounce","value","setState","closeDrawer","bind","showDeleteHistoryDialog","deleteHistory","newProps","undefined","inArray","arrayvar","slice","push","setItem","e","moveArrayElementFromTo","elementPositionInArray","length","index","url","rules","changeTable","extractTableNameFromURL","changeRules","tableName","insertSuccess","tableNameRegExp","exec","replace","shareUrl","window","location","origin","encodeURIComponent","insertToClipboard","setTimeout","str","document","oncopy","event","clipboardData","setData","preventDefault","copySuccess","execCommand","closeHistoryPane","getRaw","rawTableName","tableRename","getTableConfig","displayName","condition","depth","rulesArray","Array","join","i","potentialName","subGroupRules","recursiveRulesExtraction","ii","newDisplayIndex","historyPanelItemsList","style","list","List","dense","subheader","ListSubheader","subheaderBackgroundColour","IconButton","onClick","float","aria-label","height","Button","variant","margin","background","amber","Divider","reverse","map","item","indexOf","substring","classNames","ListItem","button","key","onMouseEnter","changeDisplayIndex","handleHistoryItemClick","Tooltip","id","title","placement","ListItemIcon","noStyleButton","handleLinkIconClick","ListItemText","primary","rule","displayStr","columnName","rawOperator","niceOperator","translateOperatorToHuman","columnRename","getColumnConfig","currRuleIndexInRules","secondary","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","ContentProps","message","action","color","close","Drawer","anchor","historyPaneVisibility","tabIndex","role","Component","root","width","listFull","border","fill","display","DbPicker","handleClickListItem","anchorEl","currentTarget","handleMenuItemClick","changeDbIndex","handleRequestClose","databases","databasesMapped","getValueFromConfig","obj","aria-haspopup","aria-controls","Menu","option","MenuItem","selected","DbSchema","mounted","handleSearchClose","searchTerm","searchResults","changeSearchTerm","table","dbSchema","dbFkSchema","dbPkInfo","primaryKeysAvailable","tables","getDbSchema","cancelAll","changeColumns","updateVisibleColumns","handleTableClick","searchTablesColumnsFK","column","fkSearchResults","find","fk","table_name","column_name","filter","foreign_table","foreign_column","prettifiedStr","forEach","result","dict","tablesColumnsSearchTerm","tablesSearchTerm","columnsSearchTerm","rawSearchTerm","toLowerCase","match","term","searchTables","searchColumns","addForeignKeyResults","tableSearchResults","splitTerm","splitTermResults","splitTermResultsWithRename","uniq","flattenDeep","matchingColumns","currentTableColumns","compact","columns","flatten","updatedSearchResults","keys","fk_result","preparedHeaders","Authorization","get","headers","response","parseDbSchema","catch","pkAvailable","changeDbPkInfo","changeDbSchemaDefinitions","definitions","dbTables","parseTableColumns","properties","rawColProperties","isColumnInDefaultView","clickedTable","skipCheck","hoverTable","updateVisibleColumnsOnHover","tableColumnElements","primaryBackgroundFill","primaryColoured","textOverflow","overflow","stopPropagation","handleTableOpenClick","createColumnElement","Collapse","in","timeout","component","visibility","referencedResults","isForeignKey","referencedResultsText","fkResults","hasForeignKey","fkText","handleColumnClick","Chip","maxWidth","label","columnVisibility","visibleColumns","changeVisibleColumns","searchTermTrucated","chipClasses","onDelete","subheaderBackground","createTableElement","marginLeft","indigo","borderRadius","marginTop","marginBottom","LeftPane","rootClasses","leftPaneVisibility","rootHide","opacity","transition","lowBottomPadding","paddingBottom","LoginDialog","password","onChangeHandler","handleLoginClick","setUserEmailPassword","handleLoginDialogCloseClick","target","Dialog","aria-labelledby","DialogTitle","dbName","DialogContent","DialogContentText","TextField","autoFocus","required","type","onChange","fullWidth","DialogActions","Help","Slide","direction","tool","fullScreen","handleHelpToggle","TransitionComponent","AppBar","appBar","Toolbar","Typography","flex","src","position","centered","marginRight","injectStyle","styleElement","createElement","head","appendChild","sheet","insertRule","cssRules","Circles","pos","top","right","bottom","left","handleResize","onResize","innerWidth","handleClick","node","contains","getComponentPosition","vw","devicePixelRatio","drawTextAboveCenter","innerHeight","drawTextLeftOfCenter","minimalDistanceToViewport","backgroundColor","circleSize","outerCircleSize","Math","min","textBoxPaddingAtCircle","textBoxWidth","zIndex","circles","subtractFromTopPos","pointerEvents","pulseInnerCircle","transformOrigin","animation","transform","pulseOuterCircle","outerCircle","textBox","fontFamily","paddingLeft","customPaddingLeft","paddingRight","fontSize","content","getBoundingClientRect","addEventListener","findDOMNode","element","updateInterval","setInterval","removeEventListener","clearInterval","styles","getStyles","ref","description","FeatureDiscoveryPrompt","portal","body","renderCircle","unmountComponentAtNode","nextProps","render","child","React","Children","only","children","cloneElement","Navigation","handleLoginButtonClick","handleLogoutClick","loginDialogOpen","isHelpOpen","isSearchBarFdpOpen","isLoginFdpOpen","changeSearchTermDebounce","publicDBStatus","dbTitle","searchBarFdpOpenStyles","minWidth","pink","toggleLeftPane","dbTitleFlex","searchBarFlex","placeholder","onKeyPress","onFocus","searchBar","InputProps","startAdornment","InputAdornment","autoComplete","autoCorrect","autoCapitalize","spellCheck","rightIconsFlex","toggleHistoryPane","floatRight","padding","floatRightPadded","SubmitButton","buttonClass","success","successButton","errorButton","wrapper","Fab","getRules","loading","CircularProgress","size","progress","green","red","json2csv","js2xmlparser","Downloads","handleFileFormatChange","fileFormat","createFileName","fileNameCustom","columnChosen","dataFull","delimiterChoice","tableHeader","batchDownloadCheckBox","copyUniqueValuesOnlyToggle","reRunQuery","fileNameAuto","copyLoading","copyResult","batchSize","batchDownloadLowerNum","batchDownloadUpperNum","handleDelimiterChange","handlebatchDownloadCheckBox","handleCopyUniqueValuesOnlyToggle","handleLeftButtonClickRangeDownload","handleRightButtonClickRangeDownload","handleTableHeaderToggle","handleFileNameChange","handleCopyOutputClick","handleDownloadClick","handleCopyClick","handleResetClick","fileName","mimeType","download","dataFullStatus","delimiter","fields","header","downloadFile","err","seqColumn","identifySeqColumnInStateColumns","seq","parseInt","range","totalRows","trunc","newValue","output","uniqueValues","Set","add","values","valueToCopy","String","copyTableAsJSON","copyTableAsXML","submitSuccess","submitError","submitLoading","dataFullURL","fetchOutput","downloadTableWithDelimiter","downloadTableAsJSON","downloadTableAsXML","downloadTableAsFASTA","Range","Accept","Prefer","requestId","Paper","elevation","topMargin","cardcardMarginLeftTop","FormControl","RadioGroup","FormControlLabel","control","Radio","disabled","textField","cardMarginLeft","inlineTextField","hidden","inlineTextFieldSpan","Checkbox","checked","FormGroup","inlineTextField1","isNaN","handlebatchDownloadChange","inlineTextField3","cardcardMarginBottomRight","alt","linearProgressClass","inlineTextField2","cardMarginLeftRightTop","paddingTop","cardMarginLeftTop","textFieldCopyOutput","ResponsiveDialog","handleClose","handleNewRowClick","handleReset","clearTimeout","qbFiltersTemp","qbFilters","inputVals","submitButtonLabel","handleInput","dataType","inputValues","handleSubmit","input","Object","newRowURL","postReqBody","rawValue","Number","Boolean","commitToChangeLog","insertNewRow","getElementById","scrollIntoView","allColumns","primaryKeys","newRow","primaryKey","postReqToChangeLog","toISOString","tableDisplayName","paperError","paperMarginTopLeft","paperMarginLeft","code","details","paperMarginTop","cardMarginTopBottom","default_value","withMobileDialog","EditCard","featureEnabled","changesMade","rowsStrikedOut","removeButtonLabel","newRowDialogOpen","handleFeatureEnabledSwitch","handleSubmitClick","handleRemoveAllClick","deleteTableChanges","newState","clear","submitChanges","changeEditFeatureEnabled","stringified","ListItemAvatar","Avatar","listItems","change","changeCount","oldValue","markForDeletion","errorResp","errorAvatar","primaryKeyStringify","ListItemSecondaryAction","deleteChange","Switch","secondaryAvatar","createChangeLogList","amberAvatar","NewRow","CheckboxTable","checkboxHOC","ReactTable","DataTable","toggleAll","editFeatureChangesMade","keysChanged","toggleSelection","shift","row","changedRowPk","changedRowPkStr","tablePrimaryKeys","currentChanges","isSelected","includes","dbPrimaryKeys","editFeatureEnabled","renderEditableCell","addPkAsId","originalData","pkValues","_id","newChanges","tempChanges","columnsChanged","columnsChangeCount","noRestore","originalValue","dataLength","rowToDeleteIndex","splice","changeTimeStamp","tableChanged","columnChanged","notes","userName","changeLogURL","changeLogPostReqBody","currentColumnChanges","keyChanged","deleteRow","primaryKeyAsUrlParam","patch","setChangeError","delete","oldRow","needle","cellInfo","borderBottom","contentEditable","suppressContentEditableWarning","onBlur","changedRowIndex","changedColumnName","oldCellValue","newCellValue","innerHTML","dangerouslySetInnerHTML","__html","_data","_row","entries","serializedValue","isArray","parsedColumns","columnEditability","columnWidthDefault","columnWidth","columnMinWidth","columnMaxWidth","Header","accessor","show","headerStyle","fontWeight","Cell","checkboxProps","selectType","getTrProps","s","r","original","textDecoration","defaultPageSize","className","pageSizeOptions","previousText","nextText","noDataText","cardGroups","Grid","container","spacing","sm","md","headerClass","flexGrow","RightPaneChips","rows","rowLimit","maxRows","tip","tip2","title2","tip3","isTip1FdpOpen","isTip2FdpOpen","isTip3FdpOpen","rowCountChipLabel","grey","onMouseLeave","chip","increaseRowLimit","justifyContent","flexWrap","defaultRules","getQBRules","axiosCancel","debug","RightPane","rawData","handleSubmitButtonClick","$","refs","queryBuilder","toString","buildURLFromRules","pseudoEvent","handleRowLimitChange","rulesFromHistoryPane","exactRowCount","exactCount","handleGetExactRowCountToggle","handleSubmitButtonClickCancelQuery","filters","getQBFilters","dbSchemaDefinitions","checkIfRulesColumnsAreInStateTableColumns","plugins","constructor","DEFAULTS","operators","getQBOperators","lang","getQBLang","rebuildQueryBuilder","initializeQueryBuilder","cancel","newRules","columnNames","subGroupColumns","recursiveColumnNameExtraction","rawRules","columnsInNewQBRules","arrNoDup","allRulesColumnsInColumnsArray","notPrefix","select","notPrefixLocal","containsWildCards","leftBracket","rightBracket","containsSpecialChars","translateOperatorToPostgrest","firstCondition","firstRules","addToHistory","skipFullCount","responseRows","newLimit","tableDescription","hideClass","leftMarginClass","rootInvisibleLeft","paperClasses","middlePaperSection","CardHeader","handleCopyUrlToClipboard","textAlign","alignItems","rowLimitTextField","auth","Layout","logout","parsedURL","parseURL","rulesFromURL","db","href","dbExecResults","tableExecResults","query","queryExecResults","decodeURIComponent","rowLimitExecResults","exactCountExecResults","urlRules","newIndex","setDb","getUserDetails","newTerm","newTable","newDefinitions","pkInfo","newColumns","newUrl","newVisibleColumns","setCredentials","app","ReactDOM","appState","stateChange","assign","initialState","urlLocation","pathname","file","config","dbConfig","tableConfig","getColumnConfigGlobal","allGlobalColumnConfigs","columnRules","defaultColumns","empty","regex","nb_inputs","multiple","apply_to","allSupportedQBFilters","numericQBFilters","stringQBFilters","booleanQBFilters","plain_strings_query_builder","pgRestType","value_separator","validation","operator","translateOperatorTojQB","isJsonString","searchForArrayInArray","array","j","targetArray","indexFrom","indexTo","targetElement","magicIncrement","abs","visitPage","getKeysFromJSON","val","sub_key","arr","temp","ret","k"],"mappings":"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","file":"static/js/main.36347f96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/progress.be1288ea.gif\";","import axios from \"axios\";\n\nlet lib = require(\"../utils/library.ts\");\n\nexport default class Auth {\n  name = null;\n  isLoggedIn = false;\n  userEmail = null;\n  userPassword = null;\n  jwtToken = null;\n  jwtTokenExpiry = null;\n\n  constructor(dbIndex) {\n    this.dbIndex = dbIndex;\n    this._fromLocalStorage();\n  }\n\n  async getUserDetails() {\n    // Returns an object with info about the currently logged in user\n    if (!this.isAuthenticated()) {\n      await this._loginPostRequest().then(resp => {\n        return resp;\n      });\n    }\n    return {\n      isLoggedIn: this.isLoggedIn,\n      jwtToken: this.jwtToken,\n      name: this.name || this.userEmail || \"Unknown\"\n    };\n  }\n\n  setCredentials(newEmail, newPassword) {\n    this.userEmail = newEmail;\n    this.userPassword = newPassword;\n\n    this._toLocalStorage();\n  }\n\n  logout() {\n    // Get rid of the user credentials\n    this.userEmail = null;\n    this.userPassword = null;\n    this.softLogout();\n    this._toLocalStorage();\n  }\n\n  // Does not delete the email + pass\n  softLogout() {\n    this.name = null;\n    this.isLoggedIn = false;\n    this.jwtToken = null;\n    this.jwtTokenExpiry = null;\n  }\n\n  isAuthenticated() {\n    // Return true iff user is authenticated and jwt is still valid\n    let emailRegEx = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // From http://emailregex.com/\n\n    if (\n      this.jwtTokenExpiry > Date.now() &&\n      emailRegEx.test(this.userEmail) &&\n      this.userPassword &&\n      this.userPassword !== \"\"\n    ) {\n      return true;\n    }\n  }\n\n  setDb(newDbIndex) {\n    this.softLogout();\n    this.dbIndex = newDbIndex;\n  }\n\n  async _loginPostRequest() {\n    if (this.userEmail && this.userPassword) {\n      let loginUrl = lib.getDbConfig(this.dbIndex, \"url\") + \"/rpc/login\";\n\n      // Makes the HTTP request to obtain JWT token + jwtTokenExpiry + user details\n      try {\n        let rawResp = await axios.post(loginUrl, {\n          email: this.userEmail,\n          pass: this.userPassword\n        });\n        let data = rawResp.data[0];\n        this._setStatusTokenExpiry(true, data.token, data.tokenExpiry);\n\n        return data;\n      } catch (e) {\n        this._setStatusTokenExpiry(false, null, 0);\n        console.error(e);\n      }\n    }\n  }\n\n  // Used to set the relevant parts of this class\n  _setStatusTokenExpiry(status, token, expiry) {\n    this.isLoggedIn = status;\n    this.jwtToken = token;\n    this.jwtTokenExpiry = expiry >= 0 ? expiry : Date.now() + 60 * 60 * 1000;\n    this._toLocalStorage();\n  }\n\n  _toLocalStorage() {\n    //localStorage.setItem(\"name\", this.name);\n  }\n\n  _fromLocalStorage() {\n    //this.name = localStorage.getItem(\"name\");\n  }\n\n  toString() {\n    return JSON.stringify({\n      name: this.name,\n      isLoggedIn: this.isLoggedIn,\n      userEmail: this.userEmail,\n      userPassword: this.userPassword,\n      jwtToken: this.jwtToken,\n      jwtTokenExpiry: this.jwtTokenExpiry\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Divider } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport amber from '@material-ui/core/colors/amber';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport LinkIcon from '@material-ui/icons/Link';\n\n\nlet _ = require(\"lodash\");\nlet lib = require(\"../utils/library.ts\");\nlet displayLengthCutoff = 50;\n\ninterface HistoryPaneProps {\n  dbIndex: number;\n  historyPaneVisibility: boolean;\n  newHistoryItem: any;\n\n  closeHistoryPane: Function;\n  changeTable: Function;\n  changeRules: Function;\n  publicDBStatus: Function;\n}\n\ninterface HistoryPaneState {\n  newHistoryItem: any;\n  displayIndex: number;\n  historyArray: Array<any>;\n  deleteHistoryDialogVisibilityStyles: any;\n  snackBarVisibility: boolean;\n  snackBarMessage: string;\n}\n\nexport default class HistoryPane extends Component<\n  HistoryPaneProps,\n  HistoryPaneState\n> {\n  changeDisplayIndexDebounce: Function;\n  timer: any;\n\n  constructor(props: HistoryPaneProps) {\n    super(props);\n\n    let localHistoryArray: any = JSON.parse(\n      localStorage.getItem(\"localHistory\") || \"[]\"\n    );\n    localHistoryArray =\n      JSON.stringify(localHistoryArray) === \"[]\" ? null : localHistoryArray;\n\n    // historyArray will have the latest URL at the end ... i.e. 0 position is the earliest query, and the highest position index is the latest query...\n    // TODO: Need to make historyArray db specific!!!\n    this.state = {\n      newHistoryItem: this.props.newHistoryItem,\n      displayIndex: -1,\n      historyArray: localHistoryArray ? localHistoryArray : [],\n      deleteHistoryDialogVisibilityStyles: styleSheet.hide,\n      snackBarVisibility: false,\n      snackBarMessage: \"Unknown error occured\",\n    };\n    this.changeDisplayIndexDebounce = _.debounce(\n      (value: number) => this.setState({ displayIndex: value }),\n      300\n    );\n\n    this.closeDrawer = this.closeDrawer.bind(this);\n    this.showDeleteHistoryDialog = this.showDeleteHistoryDialog.bind(this);\n    this.deleteHistory = this.deleteHistory.bind(this);\n  }\n\n  // Keeps track of the incoming queries in an array\n  componentWillReceiveProps(newProps: HistoryPaneProps) {\n    // If the incoming newHistoryItem isn't already the current state.newHistoryItem AND it actually exists THEN\n    if (\n      this.state.newHistoryItem !== newProps.newHistoryItem &&\n      newProps.newHistoryItem !== [] &&\n      newProps.newHistoryItem !== undefined &&\n      newProps.newHistoryItem !== null &&\n      newProps.newHistoryItem\n    ) {\n      // Check if the new item already exists in the historyArray\n      if (\n        lib.inArray(newProps.newHistoryItem, this.state.historyArray) === false\n      ) {\n        // doesn't exist, so insert it at highestIndex+1 position (i.e. 0th index is oldest)\n        var arrayvar = this.state.historyArray.slice();\n        arrayvar.push(newProps.newHistoryItem);\n\n        this.setState(\n          {\n            newHistoryItem: newProps.newHistoryItem,\n            historyArray: arrayvar,\n          },\n          () => {\n            try {\n              localStorage.setItem(\n                \"localHistory\",\n                JSON.stringify(this.state.historyArray)\n              );\n            } catch (e) {\n              console.error(e);\n            }\n          }\n        );\n      } else {\n        // already exists, move it to \"top\" (which in this case is the highest index...)\n        this.setState(\n          {\n            newHistoryItem: newProps.newHistoryItem,\n            historyArray: lib.moveArrayElementFromTo(\n              this.state.historyArray,\n              lib.elementPositionInArray(\n                newProps.newHistoryItem,\n                this.state.historyArray\n              ),\n              this.state.historyArray.length - 1\n            ),\n          },\n          () => {\n            try {\n              localStorage.setItem(\n                \"localHistory\",\n                JSON.stringify(this.state.historyArray)\n              );\n            } catch (e) {\n              console.error(e);\n            }\n          }\n        );\n      }\n    }\n  }\n\n  // Loads the History Item in the Query Builder\n  handleHistoryItemClick(index: number) {\n    let url = this.state.historyArray[index][0];\n    let rules = this.state.historyArray[index][1];\n\n    this.props.changeTable(this.extractTableNameFromURL(url, true));\n    this.props.changeRules(rules);\n  }\n\n  // Inserts shareable URL to clipboard\n  handleLinkIconClick(index: number) {\n    let error = false,\n      insertSuccess = false;\n\n    let url = this.state.historyArray[index][0];\n    let rules = this.state.historyArray[index][1];\n\n    // Extract the table name from URL\n    let tableRx = /\\/\\w+/g;\n    let tableName;\n    let tableNameRegExp = tableRx.exec(\n      url.replace(lib.getDbConfig(this.props.dbIndex, \"url\"), \"\")\n    );\n    if (tableNameRegExp) {\n      tableName = tableNameRegExp[0].replace(/\\//g, \"\");\n    } else {\n      tableName = null;\n      error = true;\n    }\n\n    // Create the URL needed for sharing\n    let shareUrl = \"\";\n    if (!error) {\n      shareUrl =\n        window.location.origin +\n        \"/queryBuilder/db/\" +\n        this.props.dbIndex +\n        \"/table/\" +\n        tableName;\n      if (rules !== null) {\n        shareUrl += \"?query=\" + encodeURIComponent(JSON.stringify(rules));\n      }\n\n      // Insert to clipboard\n      insertSuccess = this.insertToClipboard(shareUrl);\n    }\n\n    // if no errors, show a successfully inserted message to user...\n    if (!error && insertSuccess) {\n      this.setState(\n        {\n          snackBarVisibility: true,\n          snackBarMessage: \"Link copied!\",\n        },\n        () => {\n          this.timer = setTimeout(() => {\n            this.setState({\n              snackBarVisibility: false,\n              snackBarMessage: \"Unknown error\",\n            });\n          }, 2500);\n        }\n      );\n    }\n  }\n\n  insertToClipboard(str: string) {\n    //based on https://stackoverflow.com/a/12693636\n    document.oncopy = function (event) {\n      if (event && event.clipboardData) {\n        event.clipboardData.setData(\"Text\", str);\n        event.preventDefault();\n      }\n    };\n    let copySuccess = document.execCommand(\"Copy\");\n    document.oncopy = null;\n    return copySuccess;\n  }\n\n  closeDrawer() {\n    this.props.closeHistoryPane();\n  }\n\n  extractTableNameFromURL(url: string, getRaw = false) {\n    let rawTableName = url\n      .replace(lib.getDbConfig(this.props.dbIndex, \"url\"), \"\")\n      .replace(/\\?.*/, \"\")\n      .replace(/\\s/g, \"\")\n      .replace(\"/\", \"\");\n\n    if (getRaw) {\n      return rawTableName;\n    }\n\n    let tableRename = lib.getTableConfig(\n      this.props.dbIndex,\n      rawTableName,\n      \"rename\"\n    );\n    let displayName = tableRename ? tableRename : rawTableName;\n\n    return displayName;\n  }\n\n  cleanUpRules(url: string) {\n    return url\n      .replace(lib.getDbConfig(this.props.dbIndex, \"url\"), \"\")\n      .replace(/.*\\?/, \"\")\n      .replace(/&/g, \"\\n\")\n      .replace(/,/g, \",\\n\")\n      .replace(/limit=\\d*/g, \"\");\n  }\n\n  recursiveRulesExtraction(rules: any, condition: any, depth = 0) {\n    let rulesArray: Array<any> = [];\n    if (rules.length > 1) {\n      rulesArray = [[Array(depth).join(\"\\t\") + condition]];\n    }\n    for (let i = 0; i < rules.length; i++) {\n      let potentialName = rules[i][\"field\"];\n      if (potentialName !== null && potentialName !== undefined) {\n        rulesArray.push([\n          Array(depth + 1).join(\"\\t\") + potentialName,\n          rules[i][\"operator\"],\n          rules[i][\"value\"],\n        ]);\n      } else {\n        // Check if it's a GROUP by looking for \"condition\" key\n        if (rules[i][\"condition\"] === \"AND\" || rules[i][\"condition\"] === \"OR\") {\n          let subGroupRules = this.recursiveRulesExtraction(\n            rules[i][\"rules\"],\n            rules[i][\"condition\"],\n            depth + 1\n          );\n          for (let ii = 0; ii < subGroupRules.length; ii++) {\n            if (subGroupRules[ii] !== null && subGroupRules[ii] !== undefined) {\n              rulesArray.push(subGroupRules[ii]);\n            }\n          }\n        }\n      }\n    }\n    return rulesArray;\n  }\n\n  changeDisplayIndex(newDisplayIndex: number) {\n    this.changeDisplayIndexDebounce(newDisplayIndex);\n  }\n\n  showDeleteHistoryDialog() {\n    if (this.state.deleteHistoryDialogVisibilityStyles === null) {\n      this.setState({\n        deleteHistoryDialogVisibilityStyles: styleSheet.hide,\n      });\n    } else {\n      this.setState({\n        deleteHistoryDialogVisibilityStyles: null,\n      });\n    }\n  }\n\n  deleteHistory() {\n    this.setState({ historyArray: [] }, () => {\n      try {\n        localStorage.setItem(\"localHistory\", \"[]\");\n      } catch (e) {\n        console.error(e);\n      }\n    });\n    this.showDeleteHistoryDialog();\n  }\n\n  render() {\n    const historyPanelItemsList = (\n      <div style={styleSheet.list}>\n        <List\n          dense\n          subheader={\n            <ListSubheader style={styleSheet.subheaderBackgroundColour}>\n              Query History\n              <IconButton\n                onClick={this.closeDrawer}\n                style={{ float: \"right\" }}\n                aria-label=\"Close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <IconButton\n                onClick={this.showDeleteHistoryDialog}\n                style={{ float: \"right\" }}\n                aria-label=\"Delete\"\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListSubheader>\n          }\n        >\n          {/* Delete History Button and Dialog */}\n          <div\n            style={{\n              ...this.state.deleteHistoryDialogVisibilityStyles,\n              ...{ height: \"100px\", float: \"right\" },\n            }}\n          >\n            <ListSubheader>Delete history?</ListSubheader>\n            <Button\n              onClick={this.deleteHistory}\n              variant=\"contained\"\n              style={{ margin: \"5px\" }}\n            >\n              Yes\n            </Button>\n            <Button\n              onClick={this.showDeleteHistoryDialog}\n              variant=\"contained\"\n              style={{ margin: \"5px\", background: amber[500] }}\n            >\n              No\n            </Button>\n          </div>\n\n          <Divider />\n\n          {/* History Items List */}\n          {this.state.historyArray\n            .slice(0)\n            .reverse()\n            .map((item) => {\n              // Item[0] is the URL\n              // Item[1] are the rules?\n\n              // Display the current item iff it belongs to currently active db\n              if (\n                item[0].indexOf(lib.getDbConfig(this.props.dbIndex, \"url\")) >= 0\n              ) {\n                let tableName = this.extractTableNameFromURL(item[0]);\n                if (tableName.length > displayLengthCutoff) {\n                  tableName =\n                    tableName.substring(0, displayLengthCutoff) + \"...\";\n                }\n\n                // If there are rules are present, then display it with limited number of rows for rules\n                if (item[0] && item[1]) {\n                  let rules = this.recursiveRulesExtraction(\n                    item[1][\"rules\"],\n                    item[1][\"condition\"],\n                    0\n                  );\n                  let index = lib.elementPositionInArray(\n                    item,\n                    this.state.historyArray\n                  );\n\n                  // When user hovers over a history item, show rest of the lines\n                  let classNames = styleSheet.hide;\n                  if (this.state.displayIndex === index) {\n                    classNames = null;\n                  }\n\n                  return (\n                    <ListItem\n                      button\n                      key={index}\n                      onMouseEnter={this.changeDisplayIndex.bind(this, index)}\n                      onClick={this.handleHistoryItemClick.bind(this, index)}\n                    >\n                      {/* Clicking on this edit button should load the history item in the Query Builder */}\n                      <Tooltip\n                        id=\"tooltip-bottom\"\n                        title={\"Copy shareable link\"}\n                        placement=\"bottom\"\n                      >\n                        <ListItemIcon\n                          style={styleSheet.noStyleButton}\n                          onClick={this.handleLinkIconClick.bind(this, index)}\n                        >\n                          <LinkIcon />\n                        </ListItemIcon>\n                      </Tooltip>\n\n                      {/* Nicely formatted history item */}\n                      <>\n                        <ListItemText primary={tableName} />\n                        {rules.map((rule) => {\n                          let displayStr = \"\";\n                          let columnName = \"\";\n                          let displayName = \"\";\n                          let rawOperator = \"\";\n                          let niceOperator = \"\";\n                          for (let i = 0; i < rule.length; i++) {\n                            displayStr += \" \" + rule[i] + \" \";\n                            // if there are more than 1 rules (i.e. it's not AND/OR only) then extract column name\n                            if (i === 1) {\n                              columnName = rule[0].replace(/\\s/g, \"\");\n                              rawOperator = rule[1].replace(/\\s/g, \"\");\n                              niceOperator = lib.translateOperatorToHuman(\n                                rawOperator\n                              );\n                            }\n                          }\n\n                          // find column's rename rules from config\n                          if (columnName) {\n                            let columnRename = lib.getColumnConfig(\n                              this.props.dbIndex,\n                              this.extractTableNameFromURL(item[0], true),\n                              columnName,\n                              \"rename\"\n                            );\n                            displayName = columnRename\n                              ? columnRename\n                              : columnName;\n                          }\n\n                          displayStr = displayStr\n                            .replace(columnName, displayName)\n                            .replace(rawOperator, niceOperator)\n                            .replace(/\\t/g, \" . . \");\n                          let currRuleIndexInRules = lib.elementPositionInArray(\n                            rule,\n                            rules\n                          );\n\n                          if (displayStr.length > displayLengthCutoff) {\n                            displayStr =\n                              displayStr.substring(0, displayLengthCutoff) +\n                              \"...\";\n                          }\n\n                          return (\n                            <ListItemText\n                              secondary={displayStr}\n                              key={index + rule}\n                              style={\n                                currRuleIndexInRules > 3 ? classNames : null\n                              }\n                            />\n                          );\n                        })}\n                      </>\n                    </ListItem>\n                  );\n                } else {\n                  // If only table name is present, then display just a table name\n                  let index = lib.elementPositionInArray(\n                    item,\n                    this.state.historyArray\n                  );\n\n                  return (\n                    <ListItem\n                      button\n                      key={index}\n                      onMouseEnter={this.changeDisplayIndex.bind(this, index)}\n                      onClick={this.handleHistoryItemClick.bind(this, index)}\n                    >\n                      <Tooltip\n                        id=\"tooltip-bottom\"\n                        title={\"Copy shareable link\"}\n                        placement=\"bottom\"\n                      >\n                        <ListItemIcon\n                          style={styleSheet.noStyleButton}\n                          onClick={this.handleLinkIconClick.bind(this, index)}\n                        >\n                          <LinkIcon />\n                        </ListItemIcon>\n                      </Tooltip>\n\n                      <>\n                        <ListItemText primary={tableName} />\n                        <ListItemText\n                          secondary={\"Get random rows...\"}\n                          key={index + tableName}\n                        />\n                      </>\n                    </ListItem>\n                  );\n                }\n              } else {\n                return null;\n              }\n            })}\n        </List>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n          open={this.state.snackBarVisibility}\n          onClose={() => {\n            this.setState({ snackBarVisibility: false });\n          }}\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\n          message={<span id=\"message-id\">{this.state.snackBarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"secondary\"\n              style={styleSheet.close}\n              onClick={() => {\n                this.setState({ snackBarVisibility: false });\n              }}\n            >\n              {\" \"}\n              <CloseIcon />{\" \"}\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n\n    return (\n      <Drawer\n        anchor=\"right\"\n        open={this.props.historyPaneVisibility}\n        onClose={this.closeDrawer}\n      >\n        <div tabIndex={0} role=\"button\">\n          {historyPanelItemsList}\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nconst styleSheet: any = {\n  root: {\n    width: \"30%\",\n    height: \"100%\",\n    float: \"right\",\n  },\n  list: {\n    width: 400,\n  },\n  listFull: {\n    width: \"auto\",\n  },\n  noStyleButton: {\n    border: \"none\",\n    fill: amber[700],\n  },\n  subheaderBackgroundColour: {\n    background: amber[500],\n  },\n  hide: {\n    display: \"none\",\n  },\n};\n","import React, { Component } from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nlet lib = require(\"../utils/library.ts\");\n\ninterface IDbPickerProps {\n  changeDbIndex: Function;\n  dbIndex: number;\n}\n\ninterface IDbPickerState {\n  anchorEl: Maybe<HTMLElement>;\n  open: boolean;\n  databases: Array<string>;\n}\n\nexport default class DbPicker extends Component<\n  IDbPickerProps,\n  IDbPickerState\n> {\n  constructor(props: IDbPickerProps) {\n    super(props);\n    this.state = {\n      anchorEl: undefined,\n      open: false,\n      databases: []\n    };\n  }\n\n  handleClickListItem = (event: any) => {\n    this.setState({ open: true, anchorEl: event.currentTarget });\n  };\n\n  handleMenuItemClick = (event: any, index: number) => {\n    this.setState({ open: false });\n    this.props.changeDbIndex(index);\n  };\n\n  handleRequestClose = () => {\n    this.setState({ open: false });\n  };\n\n  // get a list of databases in the config.json\n  componentDidMount() {\n    let databasesMapped: Array<string> = [];\n    lib\n      .getValueFromConfig(\"databases\")\n      .map(\n        (obj: any, index: number) =>\n          (databasesMapped[index] = obj.title || \"Untitled database\")\n      );\n    this.setState({\n      databases: databasesMapped\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <List>\n          <ListItem\n            button\n            aria-haspopup=\"true\"\n            aria-controls=\"lock-menu\"\n            aria-label=\"Database\"\n            onClick={this.handleClickListItem}\n          >\n            <ListItemText\n              primary=\"Database\"\n              secondary={this.state.databases[this.props.dbIndex]}\n            />\n          </ListItem>\n        </List>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={this.state.anchorEl}\n          open={this.state.open}\n          onClose={this.handleRequestClose}\n        >\n          {this.state.databases.map((option: any, index: number) => (\n            <MenuItem\n              key={option}\n              selected={index === this.props.dbIndex}\n              onClick={event => this.handleMenuItemClick(event, index)}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Menu>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport FolderIconOpen from \"@material-ui/icons/FolderOpen\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\n\nimport indigo from \"@material-ui/core/colors/indigo\";\n\nlet _ = require(\"lodash\");\nlet lib = require(\"../utils/library.ts\");\n\nexport default class DbSchema extends Component {\n\t// Set true in DidMount, and false in WillUnmount\n\t// Used to ensure that getDbSchema does not setState when component is unmounted\n\tmounted = false;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttable: props.table,\n\t\t\tdbSchema: null,\n\t\t\tdbFkSchema: null,\n\t\t\tdbPkInfo: null,\n\t\t\tprimaryKeysAvailable: false,\n\t\t\ttables: [],\n\t\t\tsnackBarVisibility: false,\n\t\t\tsnackBarMessage: \"Unknown error occured\",\n\t\t\tsearchTerm: \"\"\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mounted = true;\n\t\t// Save the database schema to state for future access\n\t\tlet url = lib.getDbConfig(this.props.dbIndex, \"url\");\n\t\tif (url) {\n\t\t\tthis.getDbSchema(url);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\taxios.cancelAll();\n\t\tthis.mounted = false;\n\t}\n\n\tcomponentWillReceiveProps(newProps) {\n\t\t// If the database was changed, re do the whole view and update parent components too\n\t\tif (this.props.dbIndex !== newProps.dbIndex) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\ttable: \"\",\n\t\t\t\t\tdbSchema: null,\n\t\t\t\t\tdbFkSchema: null,\n\t\t\t\t\ttables: []\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tthis.props.changeTable(\"\");\n\t\t\t\t\tthis.props.changeColumns(this.state[\"\"]);\n\t\t\t\t\tthis.getDbSchema(null);\n\t\t\t\t\tthis.updateVisibleColumns();\n\t\t\t\t\tthis.handleSearchClose();\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (this.state.table !== newProps.table) {\n\t\t\tthis.setState({\n\t\t\t\ttable: newProps.table\n\t\t\t});\n\t\t\tthis.handleTableClick(newProps.table);\n\t\t} else if (this.state.searchTerm !== newProps.searchTerm) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tsearchTerm: newProps.searchTerm\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsearchResults: this.searchTablesColumnsFK()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (this.props.token !== newProps.token) {\n\t\t\tthis.getDbSchema(\n\t\t\t\tlib.getDbConfig(this.props.dbIndex, \"url\"),\n\t\t\t\tnewProps.token\n\t\t\t);\n\t\t}\n\t}\n\n\t// Returns the list of foreign keys given a table, column\n\thasForeignKey(table, column) {\n\t\tlet fkSearchResults = {};\n\t\t// Retrieve a list of foreign keys given a table using the /rpc/foreign_keys endpoint\n\t\t// If the search result column has a foreign key, add that table+FK_column to the saerch result\n\n\t\t// Finds a foreign key\n\t\tfkSearchResults = _.find(this.state.dbFkSchema, function (fk) {\n\t\t\treturn fk.table_name === table && fk.column_name === column;\n\t\t});\n\n\t\tif (\n\t\t\tfkSearchResults === {} ||\n\t\t\tfkSearchResults === null ||\n\t\t\tfkSearchResults === undefined\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn fkSearchResults;\n\t}\n\n\t// Returns the list of foreign keys referencing to the table, column\n\tisForeignKey(table, column) {\n\t\tlet fkSearchResults = {};\n\t\t// Retrieve a list of foreign keys given a table using the /rpc/foreign_keys endpoint\n\t\t// If the search result column has a foreign key, add that table+FK_column to the saerch result\n\n\t\t// Finds a foreign key\n\t\tfkSearchResults = _.filter(this.state.dbFkSchema, function (fk) {\n\t\t\treturn fk.foreign_table === table && fk.foreign_column === column;\n\t\t});\n\n\t\tif (\n\t\t\tfkSearchResults === {} ||\n\t\t\tfkSearchResults === null ||\n\t\t\tfkSearchResults === undefined\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\tlet prettifiedStr = \"\";\n\t\t_.forEach(fkSearchResults, function (result) {\n\t\t\tprettifiedStr +=\n\t\t\t\tresult[\"table_name\"] + \".\" + result[\"column_name\"] + \", \";\n\t\t});\n\n\t\tif (prettifiedStr !== \"\") {\n\t\t\tprettifiedStr = prettifiedStr.replace(/,\\s$/g, \"\");\n\t\t}\n\n\t\treturn prettifiedStr;\n\t}\n\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// Search Methods\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\t// Combines results of this.searchColumns() and this.searchTables() into a dict/JSON object\n\tsearchTablesColumnsFK() {\n\t\tlet dict = {};\n\n\t\t// Separate search terms for the table and column searches\n    /*\n\t\tannotations\n\t\tannotations domain\n\t\tdomain annotations\n\t\tannotations[table] domain[table]\n\t\tannotations[table] domain[column]\n\t\tannotations[column] domain[column]\n\t\tannotations[table] id[column]\n\t\tannotations domain[table] description[column]\n\t\tannotations domain[tables] description[column]\n\t\t\"domain annotations\"[table]\n\t\t\"domain annotations\"[table] description[column]\n\t\t\"domain annotations\"[table] \"go id\"[column]\n\n\t\tThese get split and separated based on the table or column value supplied in square brackets.\n\t\tUltimately, the ones without a table/column specific tag are combined with table or column search terms and passed to the correct method...\n\t\t*/\n\n\t\tlet tablesColumnsSearchTerm = \"\";\n\t\tlet tablesSearchTerm = \"\";\n\t\tlet columnsSearchTerm = \"\";\n\n\t\tlet rawSearchTerm = this.state.searchTerm\n\t\t\t.toLowerCase()\n\t\t\t.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g); // Splits on all sapces that are not contained within double quotes\n\n\t\t_.forEach(rawSearchTerm, term => {\n\t\t\tif (term) {\n\t\t\t\tif (term.indexOf(\"[table]\") > -1 || term.indexOf(\"[tables]\") > -1) {\n\t\t\t\t\ttablesSearchTerm +=\n\t\t\t\t\t\t\" \" + term.replace(\"[table]\", \"\").replace(\"[tables]\", \"\");\n\t\t\t\t} else if (\n\t\t\t\t\tterm.indexOf(\"[column]\") > -1 ||\n\t\t\t\t\tterm.indexOf(\"[columns]\") > -1\n\t\t\t\t) {\n\t\t\t\t\tcolumnsSearchTerm +=\n\t\t\t\t\t\t\" \" + term.replace(\"[column]\", \"\").replace(\"[columns]\", \"\");\n\t\t\t\t} else {\n\t\t\t\t\ttablesColumnsSearchTerm += \" \" + term;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Search tables\n\t\tif (tablesColumnsSearchTerm || tablesSearchTerm) {\n\t\t\t_.forEach(\n\t\t\t\tthis.searchTables(tablesColumnsSearchTerm + tablesSearchTerm),\n\t\t\t\ttable => {\n\t\t\t\t\tdict[table] = [];\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Seach columns\n\t\tif (tablesColumnsSearchTerm || columnsSearchTerm) {\n\t\t\t_.forEach(\n\t\t\t\tthis.searchColumns(tablesColumnsSearchTerm + columnsSearchTerm),\n\t\t\t\tresult => {\n\t\t\t\t\tdict[result[0]] = result[1];\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Search foreign keys IFF enabled in config explicitly\n\t\tif (\n\t\t\tlib.getDbConfig(this.props.dbIndex, \"foreignKeySearch\") === true &&\n\t\t\tthis.state.dbFkSchema !== undefined &&\n\t\t\tthis.state.dbFkSchema !== null\n\t\t) {\n\t\t\treturn this.addForeignKeyResults(dict);\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n\n\t// Returns a list of tables matching state.saerchTerm from the current tables' raw and rename names\n\tsearchTables(searchTerm) {\n\t\tlet tableSearchResults = [];\n\t\tsearchTerm = searchTerm.toLowerCase().match(/(?:[^\\s\"]+|\"[^\"]*\")+/g); // Splits on all sapces that are not contained within double quotes\n\n\t\tfor (let i = 0; i < searchTerm.length; i++) {\n\t\t\tlet splitTerm = searchTerm[i].replace(/\"/g, \"\"); // remove all quotes from the search term\n\t\t\tif (splitTerm !== \"\") {\n\t\t\t\t// First search the raw table names as returned by API\n\t\t\t\tlet splitTermResults = this.state.tables.filter(\n\t\t\t\t\ttable => table.toLowerCase().indexOf(splitTerm) > -1\n\t\t\t\t);\n\n\t\t\t\t// Next search the config file renames\n\t\t\t\tlet splitTermResultsWithRename = this.state.tables.filter(table => {\n\t\t\t\t\tlet tableRename = lib.getTableConfig(\n\t\t\t\t\t\tthis.props.dbIndex,\n\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\"rename\"\n\t\t\t\t\t);\n\t\t\t\t\tlet displayName = tableRename ? tableRename : table;\n\t\t\t\t\treturn displayName.toLowerCase().indexOf(splitTerm) > -1;\n\t\t\t\t});\n\n\t\t\t\t// Keep track of the matching tables\n\t\t\t\ttableSearchResults.push(splitTermResults);\n\t\t\t\ttableSearchResults.push(splitTermResultsWithRename);\n\t\t\t}\n\t\t}\n\t\treturn _.uniq(_.flattenDeep(tableSearchResults));\n\t}\n\n\t// Returns a list of tables that have columns matching state.saerchTerm from the tables' raw and rename column names\n\tsearchColumns(searchTerm) {\n\t\tlet tableSearchResults = [];\n\t\tsearchTerm = searchTerm.toLowerCase().match(/(?:[^\\s\"]+|\"[^\"]*\")+/g); // Splits on all sapces that are not contained within double quotes\n\n\t\tfor (let i = 0; i < searchTerm.length; i++) {\n\t\t\tlet splitTerm = searchTerm[i].replace(/\"/g, \"\"); // remove all quotes from the search term\n\t\t\tif (splitTerm !== \"\") {\n\t\t\t\ttableSearchResults.push(\n\t\t\t\t\tthis.state.tables.map(table => {\n\t\t\t\t\t\tlet matchingColumns = [];\n\t\t\t\t\t\tlet currentTableColumns = this.state[table];\n\n\t\t\t\t\t\t// First search raw table column names\n\t\t\t\t\t\tlet splitTermResults = _.compact(\n\t\t\t\t\t\t\tcurrentTableColumns.filter(\n\t\t\t\t\t\t\t\tcolumn => column.toLowerCase().indexOf(splitTerm) > -1\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Next search the column renames from config.json\n\t\t\t\t\t\tlet splitTermResultsWithRename = _.compact(\n\t\t\t\t\t\t\tcurrentTableColumns.filter(column => {\n\t\t\t\t\t\t\t\tlet columnRename = lib.getColumnConfig(\n\t\t\t\t\t\t\t\t\tthis.props.dbIndex,\n\t\t\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\t\t\t\t\"rename\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tlet displayName = columnRename ? columnRename : column;\n\t\t\t\t\t\t\t\treturn displayName.toLowerCase().indexOf(splitTerm) > -1;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Keep track of matching column names\n\t\t\t\t\t\tmatchingColumns.push(splitTermResults);\n\t\t\t\t\t\tmatchingColumns.push(splitTermResultsWithRename);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsplitTermResults.length > 0 ||\n\t\t\t\t\t\t\tsplitTermResultsWithRename.length > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\t\t{ columns: _.uniq(_.flattenDeep(matchingColumns)) }\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn _.uniq(_.compact(_.flatten(tableSearchResults)));\n\t}\n\n\taddForeignKeyResults(searchResults) {\n\t\tlet updatedSearchResults = searchResults;\n\t\t// Retrieve a list of foreign keys given a table using the /rpc/foreign_keys endpoint\n\t\t// If the search result column has a foreign key, add that table+FK_column to the saerch result\n\n\t\t_.keys(searchResults).forEach(table => {\n\t\t\tif (\n\t\t\t\ttable !== undefined &&\n\t\t\t\tsearchResults[table] !== undefined &&\n\t\t\t\tsearchResults[table][\"columns\"] !== undefined\n\t\t\t) {\n\t\t\t\t_.forEach(searchResults[table][\"columns\"], column => {\n\t\t\t\t\tlet fk_result = _.find(this.state.dbFkSchema, function (fk) {\n\t\t\t\t\t\treturn fk.table_name === table && fk.column_name === column;\n\t\t\t\t\t});\n\t\t\t\t\tif (fk_result !== undefined) {\n\t\t\t\t\t\tupdatedSearchResults[table][\"foreign_keys\"] = {};\n\t\t\t\t\t\tupdatedSearchResults[table][\"foreign_keys\"][column] = {\n\t\t\t\t\t\t\tforeign_table: fk_result.foreign_table,\n\t\t\t\t\t\t\tforeign_column: fk_result.foreign_column\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// add the FK as a normal search result too (until a good way to indicate FK is figured out)\n\t\t\t\t\t\t// TODO: Indicate FK result clearly ... so user knows why the fk_result.foreign_table shows up even though there isn't any obvious match (potential)\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table] &&\n\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table][\"columns\"]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// fk_result.foreign_table and columns elements exist for the FK ... just ensure the column is part of columns element\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t_.find(\n\t\t\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table][\"columns\"],\n\t\t\t\t\t\t\t\t\tfk_result.foreign_column\n\t\t\t\t\t\t\t\t) === -1\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// column not found, insert it\n\t\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table][\n\t\t\t\t\t\t\t\t\t\"columns\"\n\t\t\t\t\t\t\t\t] = updatedSearchResults[fk_result.foreign_table][\n\t\t\t\t\t\t\t\t\t\"columns\"\n\t\t\t\t\t\t\t\t].push(fk_result.foreign_column);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table] &&\n\t\t\t\t\t\t\t(updatedSearchResults[fk_result.foreign_table][\"columns\"] ===\n\t\t\t\t\t\t\t\tnull ||\n\t\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table][\"columns\"] ===\n\t\t\t\t\t\t\t\tundefined)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// fk_result.foreign_table exists but no columns defined for it\n\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table][\n\t\t\t\t\t\t\t\t\"columns\"\n\t\t\t\t\t\t\t] = updatedSearchResults[fk_result.foreign_table][\"columns\"].push(\n\t\t\t\t\t\t\t\tfk_result.foreign_column\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// fk_result.foreign_table does not exist, and columns also doesn't.... obv\n\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table] = {};\n\t\t\t\t\t\t\tupdatedSearchResults[fk_result.foreign_table][\"columns\"] = [\n\t\t\t\t\t\t\t\tfk_result.foreign_column\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn updatedSearchResults;\n\t}\n\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// HTTP Methods\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\t// Returns a list of tables from URL\n\tgetDbSchema(url = lib.getDbConfig(this.props.dbIndex, \"url\"), token = null) {\n\t\tif (!url) {\n\t\t\turl = lib.getDbConfig(this.props.dbIndex, \"url\");\n\t\t}\n\n\t\tlet preparedHeaders = {};\n\t\tif (token) {\n\t\t\tpreparedHeaders = { Authorization: \"Bearer \" + token };\n\t\t}\n\n\t\taxios\n\t\t\t.get(url + \"/\", { headers: preparedHeaders })\n\t\t\t.then(response => {\n\t\t\t\t// Save the raw resp + parse tables and columns...\n\t\t\t\tif (this.mounted) {\n\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdbSchema: response.data\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.parseDbSchema(response.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t// Show error in top-right Snack-Bar\n\t\t\t\tif (this.mounted) {\n\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsnackBarVisibility: true,\n\t\t\t\t\t\t\tsnackBarMessage: \"Database does not exist.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tsnackBarVisibility: false,\n\t\t\t\t\t\t\t\t\tsnackBarMessage: \"Unknown error\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t// Get FK info IFF enabled in config explicitly\n\t\tif (lib.getDbConfig(this.props.dbIndex, \"foreignKeySearch\") === true) {\n\t\t\taxios\n\t\t\t\t.get(url + \"/rpc/foreign_keys\", { headers: preparedHeaders })\n\t\t\t\t.then(response => {\n\t\t\t\t\t// Save the raw resp + parse tables and columns...\n\t\t\t\t\tif (this.mounted) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdbFkSchema: response.data\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\t// Show error in top-right Snack-Bar\n\t\t\t\t\tif (this.mounted) {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsnackBarVisibility: true,\n\t\t\t\t\t\t\t\tsnackBarMessage:\n\t\t\t\t\t\t\t\t\t\"Foreign keys function does not exist in database.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tsnackBarVisibility: false,\n\t\t\t\t\t\t\t\t\t\tsnackBarMessage: \"Unknown error\"\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\t// Get PK info IFF enabled in config explicitly by the primaryKeyFunction boolean value\n\t\tif (\n\t\t\tlib.getDbConfig(this.props.dbIndex, \"primaryKeyFunction\") === true &&\n\t\t\ttoken !== null\n\t\t) {\n\t\t\taxios\n\t\t\t\t.get(url + \"/rpc/primary_keys\", { headers: preparedHeaders })\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (this.mounted) {\n\t\t\t\t\t\tlet pkAvailable =\n\t\t\t\t\t\t\tJSON.stringify(response.data[0][\"primary_keys\"]) !== \"[]\";\n\t\t\t\t\t\t// Save the raw resp + parse tables and columns...\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdbPkInfo: response.data[0][\"primary_keys\"],\n\t\t\t\t\t\t\t\tprimaryKeysAvailable: pkAvailable\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tif (pkAvailable) {\n\t\t\t\t\t\t\t\t\tthis.props.changeDbPkInfo(response.data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tif (this.mounted) {\n\t\t\t\t\t\t// Show error in top-right Snack-Bar\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsnackBarVisibility: true,\n\t\t\t\t\t\t\t\tsnackBarMessage:\n\t\t\t\t\t\t\t\t\t\"Primary keys function does not exist in database.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tsnackBarVisibility: false,\n\t\t\t\t\t\t\t\t\t\tsnackBarMessage: \"Unknown error\"\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t}\n\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// Parsing Methods\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\t// From the JSON resp, extract the names of db TABLES and update state\n\tparseDbSchema(data = this.state.dbSchema) {\n\t\t// update the db schema in the right panel\n\t\tthis.props.changeDbSchemaDefinitions(data.definitions);\n\n\t\tlet dbTables = [];\n\t\tfor (let i in data.definitions) {\n\t\t\tif (lib.getTableConfig(this.props.dbIndex, i, \"visible\") !== false) {\n\t\t\t\tdbTables.push(i);\n\t\t\t\tthis.parseTableColumns(data.definitions[i].properties, i);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\ttables: dbTables\n\t\t});\n\n\t\t// Load first table if no table is selected AND if there is no info available about pre-selected table\n\t\tif (dbTables.join() === \"\") {\n\t\t\tthis.props.changeTable(\"\");\n\t\t} else if (\n\t\t\tdbTables[0] !== undefined &&\n\t\t\tdbTables[0] !== null &&\n\t\t\tdbTables[0] !== \"\" &&\n\t\t\tthis.state.table === \"\"\n\t\t) {\n\t\t\tif (dbTables[0] === \"change_log\") {\n\t\t\t\tthis.handleTableClick(dbTables[1]);\n\t\t\t} else {\n\t\t\t\tthis.handleTableClick(dbTables[0]);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.handleTableClick(this.state.table, true);\n\t\t}\n\t}\n\n\t// From JSON resp, extract the names of table columns and update state\n\tparseTableColumns(rawColProperties, table) {\n\t\tlet columns = [];\n\n\t\tfor (let i in rawColProperties) {\n\t\t\t// I = COLUMN in TABLE\n\t\t\tif (\n\t\t\t\tlib.getColumnConfig(this.props.dbIndex, table, i, \"visible\") !== false\n\t\t\t) {\n\t\t\t\t// list of columns for TABLE\n\t\t\t\tcolumns.push(i);\n\n\t\t\t\tlet columnDefaultVisibility = lib.isColumnInDefaultView(\n\t\t\t\t\tthis.props.dbIndex,\n\t\t\t\t\ttable,\n\t\t\t\t\ti\n\t\t\t\t);\n\n\t\t\t\t// Each COLUMN's visibility stored in state\n\t\t\t\tif (columnDefaultVisibility === false) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t[table + i + \"Visibility\"]: \"hide\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Save state\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\t[table]: columns\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tif (table === this.state.table) {\n\t\t\t\t\tthis.props.changeTable(this.state.table);\n\t\t\t\t\tthis.props.changeColumns(this.state[this.state.table]);\n\t\t\t\t\tthis.updateVisibleColumns();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// Handle click methods\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\t// Show/hide table based on last visibility\n\thandleTableOpenClick(clickedTable, skipCheck = false) {\n\t\t// skipCheck prevents table schema collapse when leftPane toggles\n\t\tif (this.state.hoverTable !== clickedTable || skipCheck) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\thoverTable: clickedTable\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.updateVisibleColumnsOnHover();\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\thoverTable: \"\"\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.updateVisibleColumnsOnHover();\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t// Set CLICKEDTABLE in state as TABLE\n\thandleTableClick(clickedTable, skipCheck = false) {\n\t\t// skipCheck prevents table schema collapse when leftPane toggles\n\t\tif (this.state.table !== clickedTable || skipCheck) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\ttable: clickedTable\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.changeTable(clickedTable);\n\t\t\t\t\tthis.props.changeColumns(this.state[clickedTable]);\n\t\t\t\t\tthis.updateVisibleColumns();\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\ttable: \"\"\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.changeTable(\"\");\n\t\t\t\t\tthis.props.changeColumns([]);\n\t\t\t\t\tthis.updateVisibleColumns();\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t// Make a column visible or invisible on click\n\thandleColumnClick(column, table) {\n\t\tif (this.state[table + column + \"Visibility\"] === \"hide\") {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\t[table + column + \"Visibility\"]: \"\"\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.updateVisibleColumns();\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\t[table + column + \"Visibility\"]: \"hide\"\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.updateVisibleColumns();\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// Create HTML Elements\n\t////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\tcreateTableElement(tableName) {\n\t\tconst truncTextStyle = {\n\t\t\ttextOverflow: \"clip\",\n\t\t\toverflow: \"hidden\",\n\t\t\twidth: \"29%\",\n\t\t\theight: 20\n\t\t};\n\n\t\tlet tableRename = lib.getTableConfig(\n\t\t\tthis.props.dbIndex,\n\t\t\ttableName,\n\t\t\t\"rename\"\n\t\t);\n\t\tlet displayName = tableRename ? tableRename : tableName;\n\n\t\tlet tableColumnElements = [];\n\n\t\t// Update visibility of tables according to the search results, if a search term is entered\n\t\tlet classNames = styleSheet.hide;\n\t\tif (this.state.searchTerm === \"\") {\n\t\t\tclassNames = null;\n\t\t} else if (\n\t\t\tthis.state.searchResults &&\n\t\t\tthis.state.searchResults[tableName] !== undefined &&\n\t\t\tthis.state.searchResults[tableName] !== null\n\t\t) {\n\t\t\tclassNames = null;\n\t\t}\n\n\t\t// First push the table itself\n\t\ttableColumnElements.push(\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tkey={this.props.dbIndex + tableName}\n\t\t\t\tid={tableName}\n\t\t\t\tstyle={\n\t\t\t\t\tclassNames ||\n\t\t\t\t\t(this.state.table === tableName\n\t\t\t\t\t\t? styleSheet.primaryBackgroundFill\n\t\t\t\t\t\t: null)\n\t\t\t\t}\n\t\t\t\ttitle={displayName}\n\t\t\t\tonClick={event => this.handleTableClick(tableName)}\n\t\t\t>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t{this.state.table === tableName ? (\n\t\t\t\t\t\t<FolderIconOpen style={styleSheet.primaryColoured} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<FolderIcon />\n\t\t\t\t\t\t)}\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText primary={displayName} style={truncTextStyle} />\n\t\t\t\t<ListItemIcon\n\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tthis.handleTableOpenClick(tableName);\n\t\t\t\t\t}}\n\t\t\t\t\ttitle=\"Show columns without loading in Query Builder.\"\n\t\t\t\t>\n\t\t\t\t\t{this.state.hoverTable === tableName ? (\n\t\t\t\t\t\tthis.state.table === tableName ? (\n\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ClearIcon style={styleSheet.primaryColoured} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t) : this.state.table === tableName ? (\n\t\t\t\t\t\t<div />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<KeyboardArrowDownIcon />\n\t\t\t\t\t\t\t)}\n\t\t\t\t</ListItemIcon>\n\t\t\t</ListItem>\n\t\t);\n\n\t\t// Now push each column as hidden until state.table equals table tableName...\n\t\tif (tableName !== \"phylogenetic_tree\") {\n\t\t\tlet currentTableColumns = [];\n\t\t\tfor (let i in this.state[tableName]) {\n\t\t\t\tlet columnName = this.state[tableName][i];\n\t\t\t\tcurrentTableColumns.push(\n\t\t\t\t\tthis.createColumnElement(columnName, tableName)\n\t\t\t\t);\n\t\t\t}\n\t\t\ttableColumnElements.push(\n\t\t\t\t<Collapse\n\t\t\t\t\tin={\n\t\t\t\t\t\tthis.state.table === tableName ||\n\t\t\t\t\t\tthis.state.hoverTable === tableName\n\t\t\t\t\t}\n\t\t\t\t\ttimeout=\"auto\"\n\t\t\t\t\tkey={this.props.dbIndex + tableName + \"collspsibleCols\"}\n\t\t\t\t>\n\t\t\t\t\t<List component=\"div\" key={this.props.dbIndex + tableName + \"cols\"}>\n\t\t\t\t\t\t{currentTableColumns}\n\t\t\t\t\t</List>\n\t\t\t\t</Collapse>\n\t\t\t);\n\t\t} else {\n\t\t\ttableColumnElements.push(\n\t\t\t\t<ListItem\n\t\t\t\t\tbutton\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t\"Administrator has hidden the columns ... can work with them in query builder\"\n\t\t\t\t\t}\n\t\t\t\t\tkey={\"hiddenColsOf\" + tableName + this.props.dbIndex}\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tthis.state.table !== tableName &&\n\t\t\t\t\t\t\tthis.state.hoverTable !== tableName\n\t\t\t\t\t\t\t? { ...styleSheet.column, ...styleSheet.hide }\n\t\t\t\t\t\t\t: styleSheet.column\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<VisibilityOffIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText secondary={\"*Too many Columns...*\"} />\n\t\t\t\t</ListItem>\n\t\t\t);\n\t\t}\n\n\t\treturn tableColumnElements;\n\t}\n\n\tcreateColumnElement(columnName, table) {\n\t\tlet columnRename = lib.getColumnConfig(\n\t\t\tthis.props.dbIndex,\n\t\t\ttable,\n\t\t\tcolumnName,\n\t\t\t\"rename\"\n\t\t);\n\t\tlet displayName = columnRename ? columnRename : columnName;\n\n\t\tlet visibility =\n\t\t\tthis.state[table + columnName + \"Visibility\"] === \"hide\" ? false : true;\n\n\t\t// If TABLE is equal to STATE.TABLE (displayed table), show the column element\n\t\tlet classNames = styleSheet.column;\n\n\t\t// Specifically hide columns if they do not belong to current search results\n\t\tif (\n\t\t\tthis.state.searchTerm !== \"\" &&\n\t\t\tthis.state.searchResults &&\n\t\t\t(this.state.searchResults[table] === undefined ||\n\t\t\t\tthis.state.searchResults[table] === null)\n\t\t) {\n\t\t\tclassNames = { ...styleSheet.column, ...styleSheet.hide };\n\t\t\treturn null;\n\t\t}\n\n\t\tlet referencedResults = this.isForeignKey(table, columnName);\n\t\tlet referencedResultsText = \"Ref. by \" + referencedResults;\n\t\tlet fkResults = this.hasForeignKey(table, columnName);\n\t\tlet fkText =\n\t\t\t\"FK to \" + fkResults.foreign_table + \".\" + fkResults.foreign_column;\n\n\t\tif (fkText.length > 15) {\n\t\t\tfkText = fkText.substring(0, 15) + \"...\";\n\t\t}\n\t\tif (referencedResultsText.length > 15) {\n\t\t\treferencedResultsText = referencedResultsText.substring(0, 15) + \"...\";\n\t\t}\n\n\t\treturn (\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tkey={columnName + table + this.props.dbIndex}\n\t\t\t\tid={columnName}\n\t\t\t\ttitle={displayName}\n\t\t\t\tstyle={classNames}\n\t\t\t\tonClick={event => this.handleColumnClick(columnName, table)}\n\t\t\t>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t{visibility ? (\n\t\t\t\t\t\t<VisibilityIcon style={styleSheet.primaryColoured} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<VisibilityOffIcon />\n\t\t\t\t\t\t)}\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText secondary={displayName} />\n\t\t\t\t{fkResults === false ? null : (\n\t\t\t\t\t<Chip\n\t\t\t\t\t\tstyle={{ maxWidth: 175 }}\n\t\t\t\t\t\tlabel={fkText}\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\"Foreign Key to \" +\n\t\t\t\t\t\t\tfkResults.foreign_table +\n\t\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\t\tfkResults.foreign_column\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{referencedResults === \"\" ? null : (\n\t\t\t\t\t<Chip\n\t\t\t\t\t\tstyle={{ maxWidth: 175 }}\n\t\t\t\t\t\tlabel={referencedResultsText}\n\t\t\t\t\t\ttitle={\"Referenced by \" + referencedResults}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListItem>\n\t\t);\n\t}\n\n\thandleRequestClose = () => {\n\t\tthis.setState({ snackBarVisibility: false });\n\t};\n\n\thandleSearchClose = () => {\n\t\tthis.setState({ searchTerm: \"\", searchResults: {} });\n\t\tthis.props.changeSearchTerm(\"\");\n\t};\n\n\tupdateVisibleColumns() {\n\t\tlet columns = this.state[this.state.table];\n\t\tlet columnVisibility = {};\n\t\tlet visibleColumns = [];\n\n\t\tif (columns !== undefined) {\n\t\t\tfor (let i = 0; i < columns.length; i++) {\n\t\t\t\tlet visibility =\n\t\t\t\t\tthis.state[this.state.table + columns[i] + \"Visibility\"] === \"hide\"\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: true;\n\t\t\t\tcolumnVisibility[columns[i]] = visibility;\n\t\t\t\tif (visibility) {\n\t\t\t\t\tvisibleColumns.push(columns[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.props.changeVisibleColumns(visibleColumns);\n    /*this.setState({\n\t\t\t[this.state.table + \"visibleColumns\"]: visibleColumns\n\t\t}, () => {\n\t\t\tthis.props.changeVisibleColumns(this.state[this.state.table + \"visibleColumns\"]);\n\t\t});*/\n\t}\n\n\tupdateVisibleColumnsOnHover() {\n\t\tlet columns = this.state[this.state.hoverTable];\n\t\tlet columnVisibility = {};\n\t\tlet visibleColumns = [];\n\n\t\tif (columns !== undefined) {\n\t\t\tfor (let i = 0; i < columns.length; i++) {\n\t\t\t\tlet visibility =\n\t\t\t\t\tthis.state[this.state.hoverTable + columns[i] + \"Visibility\"] ===\n\t\t\t\t\t\t\"hide\"\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: true;\n\t\t\t\tcolumnVisibility[columns[i]] = visibility;\n\t\t\t\tif (visibility) {\n\t\t\t\t\tvisibleColumns.push(columns[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tlet searchTermTrucated = this.state.searchTerm;\n\t\tif (searchTermTrucated.length > 34) {\n\t\t\tsearchTermTrucated = searchTermTrucated.substring(0, 34);\n\t\t\tsearchTermTrucated += \" ...\";\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.state.searchTerm !== \"\" ? (\n\t\t\t\t\t<Chip\n\t\t\t\t\t\tlabel={\"Searching: \" + searchTermTrucated}\n\t\t\t\t\t\tstyle={styleSheet.chipClasses}\n\t\t\t\t\t\tonDelete={this.handleSearchClose}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n\t\t\t\t\topen={this.state.snackBarVisibility}\n\t\t\t\t\tonClose={this.handleRequestClose}\n\t\t\t\t\tContentProps={{ \"aria-describedby\": \"message-id\" }}\n\t\t\t\t\tmessage={<span id=\"message-id\">{this.state.snackBarMessage}</span>}\n\t\t\t\t\taction={[\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tkey=\"close\"\n\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tstyle={styleSheet.close}\n\t\t\t\t\t\t\tonClick={this.handleRequestClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t<CloseIcon />{\" \"}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t{this.state.tables.join(\"\") !== \"\" && (\n\t\t\t\t\t<List\n\t\t\t\t\t\tsubheader={\n\t\t\t\t\t\t\t<ListSubheader\n\t\t\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\t\t\tstyle={styleSheet.subheaderBackground}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tTables and Columns\n              </ListSubheader>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.tables.map(table => {\n\t\t\t\t\t\t\t// For each table, push TABLE + COLUMN elements\n\t\t\t\t\t\t\treturn this.createTableElement(table);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</List>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst styleSheet = {\n\tcolumn: {\n\t\tmarginLeft: 20\n\t},\n\thide: {\n\t\tdisplay: \"none\"\n\t},\n\tclose: {\n\t\twidth: 5 * 4,\n\t\theight: 5 * 4\n\t},\n\tprimaryColoured: {\n\t\tfill: indigo[400]\n\t},\n\tprimaryBackgroundFill: {\n\t\tbackground: indigo[100],\n\t\tmarginLeft: 1 + \"%\",\n\t\tborderRadius: 5\n\t},\n\tchipClasses: {\n\t\tmargin: 5,\n\t\tmarginTop: 10,\n\t\tmarginBottom: 0\n\t},\n\tsubheaderBackground: {\n\t\tbackground: \"white\"\n\t}\n};\n","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\n\nimport DbPicker from './DbPicker';\nimport DbSchema from './DbSchema.js';\n\n\ninterface ILeftPaneProps {\n  leftPaneVisibility: boolean;\n  dbIndex: number;\n\n  changeSearchTerm: Function;\n  changeDbIndex: Function;\n  changeTable: Function;\n  changeColumns: Function;\n  changeDbSchemaDefinitions: Function;\n  changeDbPkInfo: Function;\n  changeVisibleColumns: Function;\n  publicDBStatus: Function;\n}\n\ninterface ILeftPaneState {}\n\nexport const LeftPane: React.FunctionComponent<ILeftPaneProps> = props => {\n  let rootClasses =\n    props.leftPaneVisibility === true ? styleSheet.root : styleSheet.rootHide;\n\n  return (\n    <div style={{ ...rootClasses }}>\n      <DbPicker {...props} />\n      <Divider />\n      <DbSchema {...props} />\n    </div>\n  );\n};\n\nconst styleSheet: any = {\n  root: {\n    width: \"29%\",\n    height: \"100%\",\n    float: \"left\",\n    opacity: 1,\n    visibility: \"visible\",\n    transition: \"width 0.25s, visibility 0.2s, opacity 0.12s\"\n  },\n  rootHide: {\n    width: \"0%\",\n    height: \"100%\",\n    float: \"left\",\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"width 0.25s, visibility 0.2s, opacity 0.12s\"\n  },\n  column: {\n    marginLeft: 27\n  },\n  lowBottomPadding: {\n    paddingBottom: 0\n  }\n};\n","import React, { Component } from 'react';\n\nimport { Divider } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\n\ninterface ILoginDialogProps {\n  dbName: string;\n  open: boolean;\n\n  setUserEmailPassword: Function;\n  handleLoginDialogCloseClick: React.ReactEventHandler<{}>;\n}\ninterface ILoginDialogState {\n  email: Nullable<string>;\n  password: Nullable<string>;\n  [x: number]: any;\n}\n\nexport default class LoginDialog extends Component<\n  ILoginDialogProps,\n  ILoginDialogState\n> {\n  constructor(props: ILoginDialogProps) {\n    super(props);\n    this.state = {\n      email: null,\n      password: null\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n  }\n\n  handleLoginClick(e: any) {\n    if (this.state.email && this.state.password) {\n      this.props.setUserEmailPassword(this.state.email, this.state.password);\n      this.props.handleLoginDialogCloseClick(e);\n    }\n  }\n\n  onChangeHandler(e: any) {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open || false}\n        onClose={this.props.handleLoginDialogCloseClick}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Dandelion Explorer {this.props.dbName ? \" - \" + this.props.dbName : \"\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Provide your credentials for this database, it may allow you more\n            privileges.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            onChange={this.onChangeHandler}\n            fullWidth\n          />\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={this.onChangeHandler}\n            fullWidth\n          />\n        </DialogContent>\n        <Divider />\n        <DialogActions>\n          <Button\n            onClick={this.props.handleLoginDialogCloseClick}\n            color=\"default\"\n          >\n            Cancel\n          </Button>\n          <Button onClick={this.handleLoginClick} color=\"secondary\">\n            Login\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Dialog,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Slide,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nexport default class Help extends Component {\n  transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n  render() {\n    const tool = this.props.tool;\n    return (\n      <Dialog\n        fullScreen\n        open={this.props.open}\n        onClose={this.props.handleHelpToggle}\n        TransitionComponent={this.transition}\n      >\n        <AppBar style={styleSheet.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"default\"\n              onClick={this.props.handleHelpToggle}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"title\" color=\"default\" style={styleSheet.flex}>\n              {tool.label}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <iframe style={{ height: \"100%\" }} src={tool.url}>\n        </iframe>\n        {/* <img\n          src={require(\"../resources/mr_clippy.jpeg\")}\n          alt=\"Help section not available yet\"\n          width={400}\n          style={styleSheet.centered}\n        /> */}\n      </Dialog>\n    );\n  }\n}\n\nconst styleSheet = {\n  appBar: {\n    position: \"relative\",\n    color: \"black\",\n    background: amber[600],\n  },\n  flex: {\n    flex: 1,\n  },\n  centered: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 20,\n  },\n};\n","const injectStyle = (style) => {\n    const styleElement = document.createElement('style')\n    let styleSheet = null\n\n    document.head.appendChild(styleElement)\n\n    styleSheet = styleElement.sheet\n\n    styleSheet.insertRule(style, styleSheet.cssRules.length)\n}\n\nexport default injectStyle","import React, { Component } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport injectStyle from \"./injectStyle\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default class Circles extends Component {\n  constructor(props) {\n    super(props);\n    injectStyle(`\n    @keyframes innerPulse {\n      0%      { transform: scale(1.0); }    \n      100%    { transform: scale(1.1); }\n    }`);\n\n    injectStyle(`\n    @keyframes outerPulse {\n      0%      { transform: scale(1.0); opacity: 0.9 }    \n      100%    { transform: scale(2.0); opacity: 0.0 }\n    }`);\n    this.state = {\n      pos: {\n        top: 1,\n        right: 1,\n        bottom: 1,\n        left: 1,\n        width: 1,\n      },\n    };\n    this.handleResize = () => {\n      this.onResize(window.innerWidth);\n    };\n    this.handleClick = (e) => {\n      if (!this.node.contains(e.target)) {\n        this.props.onClose();\n      }\n    };\n  }\n\n  onResize() {\n    this.getComponentPosition();\n    const vw = window.innerWidth * window.devicePixelRatio;\n    const vh = window.innerHeight * window.devicePixelRatio;\n    const drawTextAboveCenter = vh / 2 / this.state.pos.top < 1.0;\n    const drawTextLeftOfCenter = vw / 2 / this.state.pos.top > 1.0;\n    //Todo: check the other side\n    const minimalDistanceToViewport =\n      vw - (this.state.pos.left + this.state.pos.width / 2);\n    this.setState({\n      drawTextAboveCenter,\n      drawTextLeftOfCenter,\n      minimalDistanceToViewport,\n    });\n  }\n\n  getStyles() {\n    const { backgroundColor } = this.props;\n    const {\n      pos,\n      open,\n      drawTextAboveCenter,\n      minimalDistanceToViewport,\n    } = this.state;\n    //const { pos, open, drawTextAboveCenter, drawTextLeftOfCenter, minimalDistanceToViewport } = this.state\n    const circleSize = pos.width + 40;\n    const outerCircleSize = Math.min(window.innerWidth, 900);\n    const textBoxHeight = 100;\n    const textBoxPaddingAtCircle = 900 * (1 / outerCircleSize) * 50;\n    const textBoxPadding = 20;\n    const textBoxWidth =\n      outerCircleSize / 2 +\n      Math.min(minimalDistanceToViewport, outerCircleSize / 2) -\n      (textBoxPaddingAtCircle + textBoxPadding);\n\n    return {\n      root: {\n        zIndex: 1000,\n      },\n      circles: {\n        position: \"absolute\",\n        top: pos.top - (this.props.subtractFromTopPos || 20),\n        left: pos.left - 20,\n        opacity: open ? 1 : 0,\n        pointerEvents: open ? \"inherit\" : \"none\",\n      },\n      pulseInnerCircle: {\n        position: \"absolute\",\n        transformOrigin: \"center center\",\n        height: `${circleSize}px`,\n        width: `${circleSize}px`,\n        borderRadius: \"50%\",\n        backgroundColor: \"white\",\n        animation: open\n          ? \"innerPulse 872ms 1.2s cubic-bezier(0.4, 0, 0.2, 1) alternate infinite\"\n          : null,\n        transform: open ? \"scale(1)\" : \"scale(0)\",\n        transition: \"transform 225ms cubic-bezier(0.4, 0, 0.2, 1)\",\n      },\n      pulseOuterCircle: {\n        position: \"absolute\",\n        transformOrigin: \"center center\",\n        height: `${circleSize}px`,\n        width: `${circleSize}px`,\n        borderRadius: \"50%\",\n        backgroundColor: \"white\",\n        opacity: 0,\n        animation: open\n          ? \"outerPulse 1744ms 1.2s cubic-bezier(0.4, 0, 0.2, 1) infinite\"\n          : null,\n      },\n      outerCircle: {\n        position: \"absolute\",\n        transformOrigin: \"center center\",\n        transform: open ? \"scale(1.0)\" : \"scale(0.8)\",\n        transition:\n          \"transform 225ms cubic-bezier(0.4, 0, 0.2, 1), opacity 225ms cubic-bezier(0.4, 0, 0.2, 1)\",\n        marginTop: `-${outerCircleSize / 2 - circleSize / 2}px`,\n        marginLeft: `-${outerCircleSize / 2 - circleSize / 2}px`,\n        height: `${outerCircleSize}px`,\n        width: `${outerCircleSize}px`,\n        borderRadius: \"50%\",\n        backgroundColor,\n        opacity: open ? this.props.opacity : 0,\n      },\n      textBox: {\n        fontFamily: \"Roboto\",\n        position: \"relative\",\n        zIndex: 25000,\n        paddingLeft:\n          textBoxPaddingAtCircle * (this.props.customPaddingLeft || 1),\n        paddingRight: textBoxPadding,\n        width: textBoxWidth ? textBoxWidth : 0,\n        height: textBoxHeight,\n        marginTop: drawTextAboveCenter\n          ? outerCircleSize / 2 - circleSize / 2 - textBoxHeight - 20\n          : outerCircleSize / 2 + circleSize / 2 + 20,\n        //marginLeft: drawTextLeftOfCenter ? (outerCircleSize / 2) + (circleSize / 2) : (outerCircleSize / 2) - (circleSize / 2) - textBoxHeight,\n        color: \"white\",\n        fontSize: \"16pt\",\n      },\n    };\n  }\n\n  close() {\n    if (this.content != null) {\n      this.setState({ pos: this.content.getBoundingClientRect(), open: false });\n    }\n  }\n\n  open() {\n    if (this.content != null) {\n      this.handleResize();\n      this.setState({ pos: this.content.getBoundingClientRect(), open: true });\n    }\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n    window.addEventListener(\"scroll\", this.handleResize);\n    window.addEventListener(\"mousedown\", this.handleClick, false);\n    this.content = findDOMNode(this.props.element);\n    this.setState({ pos: this.content.getBoundingClientRect() });\n    this.updateInterval = setInterval(() => {\n      this.getComponentPosition();\n    }, 50);\n  }\n\n  getComponentPosition() {\n    if (this.state.open) {\n      const pos = this.content.getBoundingClientRect();\n      if (pos.top !== this.state.pos.top || pos.left !== this.state.pos.left) {\n        this.setState({ pos });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n    window.removeEventListener(\"scroll\", this.handleResize);\n    window.removeEventListener(\"mousedown\", this.handleClick, false);\n    clearInterval(this.updateInterval);\n    this.content = null;\n  }\n\n  render() {\n    const styles = this.getStyles();\n\n    return (\n      <div ref={(node) => (this.node = node)} style={styles.root}>\n        <div style={styles.circles}>\n          <div style={styles.outerCircle}>\n            <div style={styles.textBox}>\n              <Typography variant=\"h6\" style={{ color: \"white\" }}>\n                {this.props.title}\n              </Typography>\n              <br />\n              <Typography variant=\"body1\" style={{ color: \"white\" }}>\n                {this.props.description}\n              </Typography>\n            </div>\n          </div>\n          <div style={styles.pulseInnerCircle} />\n          <div style={styles.pulseOuterCircle} />\n        </div>\n      </div>\n    );\n  }\n}\n\nCircles.propTypes = {\n  /** Fired when the the prompt is visible and clicked. */\n  onClose: PropTypes.func.isRequired,\n  /** Override the inline-styles of the circles element. */\n  style: PropTypes.object,\n  /** Defines the title text **/\n  title: PropTypes.string.isRequired,\n  /** Defines the description text **/\n  description: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\nimport Circles from \"./Circles\";\n\n/**\n * Adapted from https://github.com/TeamWertarbyte/material-ui-feature-discovery-prompt.\n * Modifications made to allow for multiple FDP components in a single page application.\n */\n\n/**\n * Material design feature discovery prompt\n * @see [Feature discovery](https://material.io/guidelines/growth-communications/feature-discovery.html#feature-discovery-design)\n */\nexport default class FeatureDiscoveryPrompt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pos: {\n        top: 1,\n        right: 1,\n        bottom: 1,\n        left: 1,\n        width: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.portal = document.createElement(\"div\");\n    document.body.appendChild(this.portal);\n    this.portal.style.position = \"fixed\";\n    this.portal.style.zIndex = 1;\n    this.portal.style.top = 0;\n    this.portal.style.left = 0;\n    this.renderCircle();\n  }\n\n  componentWillUnmount() {\n    unmountComponentAtNode(this.portal);\n    this.portal = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.circles !== null && this.circles !== undefined) {\n      if (nextProps.open && !this.props.open) {\n        this.circles.open();\n      } else if (!nextProps.open && this.props.open) {\n        this.circles.close();\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.renderCircle();\n  }\n\n  renderCircle() {\n    if (this.circles == null) {\n      const { backgroundColor, description, onClose, title } = this.props;\n\n      render(\n        <Circles\n          backgroundColor={backgroundColor}\n          description={description}\n          element={this}\n          onClose={onClose}\n          {...this.props}\n          ref={ref => {\n            this.circles = ref;\n          }}\n          title={title}\n        />,\n        this.portal\n      );\n    }\n  }\n\n  render() {\n    const child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: {\n        ...child.props.style,\n        position:\n          child.props.style != null &&\n          child.props.style.position != null &&\n          child.props.style.position !== \"static\"\n            ? child.props.style.position\n            : \"relative\",\n        zIndex: this.props.open ? 2 : 1\n      }\n    });\n  }\n}\n\nFeatureDiscoveryPrompt.propTypes = {\n  /** Defines if the prompt is visible. */\n  open: PropTypes.bool.isRequired,\n  /** Defines opacity of the circle. */\n  opacity: PropTypes.number,\n  /** Defines offset of the central circle in the y-direction. */\n  subtractFromTopPos: PropTypes.number,\n  /** Defines left padding for the textbox. */\n  customPaddingLeft: PropTypes.number,\n  /** Fired when the the prompt is visible and clicked. */\n  onClose: PropTypes.func.isRequired,\n  /** The node which will be featured. */\n  children: PropTypes.node.isRequired,\n  /** Override the inline-styles of the circles element. */\n  style: PropTypes.object,\n  /** Defines the title text **/\n  title: PropTypes.string.isRequired,\n  /** Defines the description text **/\n  description: PropTypes.string.isRequired\n};\n","import React, { Component } from \"react\";\n\nimport LoginDialog from \"./LoginDialog\";\nimport Help from \"./Help.js\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport HelpIcon from \"@material-ui/icons/HelpOutline\";\nimport CodeIcon from '@material-ui/icons/Code';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\n\nimport FeatureDiscoveryPrompt from \"./FeatureDiscoveryPrompt/FeatureDiscoveryPrompt\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport pink from \"@material-ui/core/colors/pink\";\n\nimport Button from \"@material-ui/core/Button\";\n\nlet _ = require(\"lodash\");\nlet lib = require(\"../utils/library.ts\");\n\n//join: predicted genes, protein seqs\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSearchBarFdpOpen: false,\n      isLoginFdpOpen: null,\n      loginDialogOpen: false,\n      isHelpOpen: false,\n    };\n    this.changeSearchTermDebounce = _.debounce((value) => {\n      this.props.changeSearchTerm(value);\n      this.setState({\n        isSearchBarFdpOpen: true,\n      });\n    }, 350);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (\n      (newProps.publicDBStatus === \"private\" ||\n        newProps.publicDBStatus === \"read\") &&\n      !newProps.isLoggedIn\n    ) {\n      if (this.state.isLoginFdpOpen === null) {\n        this.setState({\n          isLoginFdpOpen: true,\n        });\n      }\n    }\n  }\n\n  changeSearchTerm(e) {\n    /*if (e && ((e.key && e.key === 'Enter') || !e.target.value)) {\n      this.props.changeSearchTerm(e.target.value);\n    }*/\n    this.changeSearchTermDebounce(e.target.value);\n  }\n\n  handleLoginButtonClick = () => {\n    if (this.props.isLoggedIn) {\n      // logout the user\n      this.props.handleLogoutClick();\n    } else {\n      this.setState({\n        loginDialogOpen: !this.state.loginDialogOpen,\n      });\n    }\n  };\n\n  handleLoginDialogCloseClick = () => {\n    this.setState({\n      loginDialogOpen: false,\n    });\n  };\n\n  handleHelpToggle = (e) => {\n    this.setState({\n      isHelpOpen: !this.state.isHelpOpen,\n    });\n  };\n\n  render() {\n    let dbTitle =\n      lib.getDbConfig(this.props.dbIndex, \"title\") || \"Untitled database\";\n    let tool = lib.getDbConfig(this.props.dbIndex, \"tool\");\n\n    let searchBarFdpOpenStyles = null;\n    if (this.state.isSearchBarFdpOpen) {\n      searchBarFdpOpenStyles = {\n        backgroundColor: \"white\",\n        border: \"1px solid grey\",\n        width: 325 + \"px\",\n        minWidth: \"inherit\",\n      };\n    } else {\n      searchBarFdpOpenStyles = {\n        backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n        border: \"none\",\n        width: 45 + \"%\",\n        maxWidth: 525 + \"px\",\n        minWidth: 325 + \"px\",\n      };\n    }\n\n    // Set a short window title\n    document.title = dbTitle\n      .replace(\"Database\", \"db\")\n      .replace(\"database\", \"db\");\n\n    return (\n      <>\n        <AppBar position=\"absolute\">\n          <Toolbar>\n            <FeatureDiscoveryPrompt\n              onClose={() => this.setState({ isSearchBarFdpOpen: false })}\n              open={\n                !this.props.leftPaneVisibility &&\n                this.props.table === \"\" &&\n                !this.state.isSearchBarFdpOpen\n              }\n              backgroundColor={pink[500]}\n              title=\"Welcome to Dandelion Explorer!\"\n              customPaddingLeft={8.5}\n              subtractFromTopPos={0}\n              opacity={0.95}\n              description=\"Choose a table to query from the database schema.\"\n            >\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Menu\"\n                onClick={this.props.toggleLeftPane.bind(this)}\n              >\n                <MenuIcon />\n              </IconButton>\n            </FeatureDiscoveryPrompt>\n\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              style={styleSheet.dbTitleFlex}\n            >\n              Dandelion Explorer{/* {dbTitle} */}\n            </Typography>\n\n            <div style={styleSheet.searchBarFlex}>\n              <FeatureDiscoveryPrompt\n                onClose={() => this.setState({ isSearchBarFdpOpen: false })}\n                open={this.state.isSearchBarFdpOpen}\n                backgroundColor={indigo[500]}\n                title=\"Search Tables and Columns\"\n                customPaddingLeft={2}\n                subtractFromTopPos={200}\n                opacity={0.95}\n                description=\"Can also tag each term with '[table]' or '[column]'. For example, people[table] firstname[column].\"\n              >\n                <TextField\n                  id=\"search\"\n                  placeholder=\"Search\"\n                  onKeyPress={this.changeSearchTerm.bind(this)}\n                  onChange={this.changeSearchTerm.bind(this)}\n                  onFocus={this.changeSearchTerm.bind(this)}\n                  type=\"search\"\n                  style={{ ...styleSheet.searchBar, ...searchBarFdpOpenStyles }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon\n                          style={\n                            this.state.isSearchBarFdpOpen\n                              ? { fill: \"rgba(0,0,0,0.5)\" }\n                              : { fill: \"rgba(255,255,255,0.75)\" }\n                          }\n                        />\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"off\"\n                  autoCorrect=\"off\"\n                  autoCapitalize=\"off\"\n                  spellCheck=\"false\"\n                />\n              </FeatureDiscoveryPrompt>\n            </div>\n            <IconButton\n              style={styleSheet.rightIconsFlex}\n              color=\"inherit\"\n              aria-label=\"History\"\n              onClick={this.props.toggleHistoryPane.bind(this)}\n              title=\"Query history\"\n            >\n              <HistoryIcon style={styleSheet.floatRight} />\n            </IconButton>\n            <IconButton\n              style={styleSheet.rightIconsFlex}\n              color=\"inherit\"\n              aria-label=\"Help\"\n              onClick={this.handleHelpToggle}\n              title={tool.label}\n            >\n              <HelpIcon style={styleSheet.floatRight} />\n              {/* <SettingsEthernetIcon style={styleSheet.floatRight} /> */}\n\n            </IconButton>\n            {/* <FeatureDiscoveryPrompt\n              onClose={() => {\n                this.setState({ isLoginFdpOpen: false });\n              }}\n              open={\n                (!this.props.isLoggedIn &&\n                  this.state.isLoginFdpOpen &&\n                  !this.state.isSearchBarFdpOpen &&\n                  !(\n                    !this.props.leftPaneVisibility &&\n                    this.props.table === \"\" &&\n                    !this.state.isSearchBarFdpOpen\n                  )) ||\n                false\n              }\n              backgroundColor={pink[500]}\n              title={\"Private Database\"}\n              subtractFromTopPos={50}\n              opacity={0.95}\n              description=\"Provide your credentials for full access.\"\n            >\n              <Button\n                onClick={() => {\n                  this.handleLoginButtonClick();\n                }}\n                color=\"default\"\n                variant=\"contained\"\n                style={styleSheet.rightIconsFlex}\n              >\n                {this.props.isLoggedIn ? \"Logout\" : \"Login\"}\n              </Button>\n            </FeatureDiscoveryPrompt> */}\n          </Toolbar>\n          <LoginDialog\n            dbName={dbTitle.replace(\"Database\", \"db\").replace(\"database\", \"db\")}\n            setUserEmailPassword={this.props.setUserEmailPassword}\n            open={this.state.loginDialogOpen}\n            handleLoginDialogCloseClick={this.handleLoginDialogCloseClick}\n          />\n          <Help\n            open={this.state.isHelpOpen}\n            handleHelpToggle={this.handleHelpToggle}\n            tool={tool}\n          />\n        </AppBar>\n      </>\n    );\n  }\n}\n\nconst styleSheet = {\n  dbTitleFlex: {\n    flex: 0.3,\n  },\n  searchBarFlex: {\n    flex: 0.6,\n    display: \"block\",\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 0,\n  },\n  searchBar: {\n    marginLeft: 5,\n    marginRight: 5,\n    background: \"white\",\n    padding: 10,\n    paddingBottom: 5,\n    borderRadius: 3,\n    float: \"right\",\n    transition: \"all 0.2s\",\n  },\n  rightIconsFlex: {\n    flex: 0.05,\n    display: \"block\",\n  },\n  floatRight: {\n    float: \"right\",\n  },\n  floatRightPadded: {\n    float: \"right\",\n    marginRight: 5,\n  },\n  button: {\n    margin: 15,\n  },\n};\n","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport Fab from '@material-ui/core/Fab';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\ninterface ISubmitButtonProps {\n  loading: boolean;\n  success: boolean;\n  error: boolean;\n\n  getRules: React.EventHandler<any>;\n}\n\nexport const SubmitButton: React.FunctionComponent<\n  ISubmitButtonProps\n> = props => {\n  let buttonClass = null;\n  if (props.success) {\n    buttonClass = { ...styleSheet.successButton };\n  }\n  if (props.success && props.error) {\n    buttonClass = { ...styleSheet.errorButton };\n  }\n\n  return (\n    <div style={styleSheet.wrapper}>\n      <Fab color=\"secondary\" style={buttonClass} onClick={props.getRules}>\n        {props.success ? (\n          props.error ? (\n            <CloseIcon />\n          ) : (\n            <CheckIcon />\n          )\n        ) : (\n          <ArrowForwardIcon />\n        )}\n      </Fab>\n      {props.loading && (\n        <CircularProgress size={68} style={styleSheet.progress} />\n      )}\n    </div>\n  );\n};\n\nconst styleSheet: any = {\n  wrapper: {\n    marginRight: \"5%\",\n    position: \"relative\"\n  },\n  successButton: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700]\n    }\n  },\n  errorButton: {\n    backgroundColor: red[500],\n    \"&:hover\": {\n      backgroundColor: red[700]\n    }\n  },\n  progress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 5\n  }\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n//import worker_script from './WebWorker';\n//var myWorker = new Worker(worker_script);\n\nconst timeout = 2000;\nconst maxRowsInDownload = 2500000;\n\nlet lib = require(\"../utils/library.ts\");\nlet json2csv = require(\"json2csv\");\nvar js2xmlparser = require(\"js2xmlparser\");\n\nexport default class Downloads extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      table: props.table,\n      columns: props.columns,\n      data: [],\n      dataFull: [],\n      url: props.url,\n      fileFormat: \"delimited\",\n      delimiterChoice: \",\",\n      columnChosen: 0,\n      tableHeader: true,\n      batchDownloadCheckBox: false,\n      copyUniqueValuesOnlyToggle: false,\n      fileNameCustom: \"\",\n      reRunQuery: false,\n      fileNameAuto: \"\",\n      anchorEl: undefined,\n      open: false,\n      copyLoading: false,\n      copyResult: \"\",\n      batchSize: \"100K\",\n      batchDownloadLowerNum: 0,\n      batchDownloadUpperNum: 100000,\n      snackBarVisibility: false,\n      snackBarMessage: \"Unknown error occured\",\n    };\n\n    this.handleDelimiterChange = this.handleDelimiterChange.bind(this);\n    this.handlebatchDownloadCheckBox = this.handlebatchDownloadCheckBox.bind(\n      this\n    );\n    this.handleCopyUniqueValuesOnlyToggle = this.handleCopyUniqueValuesOnlyToggle.bind(\n      this\n    );\n    this.handleLeftButtonClickRangeDownload = this.handleLeftButtonClickRangeDownload.bind(\n      this\n    );\n    this.handleRightButtonClickRangeDownload = this.handleRightButtonClickRangeDownload.bind(\n      this\n    );\n    this.handleTableHeaderToggle = this.handleTableHeaderToggle.bind(this);\n    this.handleFileNameChange = this.handleFileNameChange.bind(this);\n    this.handleCopyOutputClick = this.handleCopyOutputClick.bind(this);\n    this.handleDownloadClick = this.handleDownloadClick.bind(this);\n    this.handleCopyClick = this.handleCopyClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState(\n      {\n        table: newProps.table,\n        columns: newProps.columns,\n        url: newProps.url,\n        data: newProps.data,\n        fileNameCustom: \"\",\n        dataFull: [],\n        columnChosen: 0,\n      },\n      () => {\n        this.createFileName();\n      }\n    );\n  }\n\n  downloadFile(data, fileName, mimeType) {\n    if (this.state.fileNameCustom === \"\") {\n      window.download(data, fileName, mimeType);\n    } else {\n      window.download(data, this.state.fileNameCustom, mimeType);\n    }\n  }\n\n  createFileName(dataFullStatus = false) {\n    // Parse out the delimiter\n    let delimiter = this.state.delimiterChoice.replace(/\\\\t/g, \"\\t\"); // for tabs\n\n    // Create a good file name for the file so user knows what the data in the file is all about\n    /* EXPLANATIONS FOR THE REGEXES\n            let fileName = this.state.url.replace(lib.getDbConfig(this.props.dbIndex, \"url\") + \"/\", \"\") // Get rid of the URL\n                .replace(\"?\", \"-\") /////// The params q-mark can be replaced with dash\n                .replace(/&/g, '-') /////// All URL key-value separating ampersands can be replaced with dashes\n                .replace(/=/g, '-') /////// Get rid of the = in favour of the -\n                .replace(/\\([^()]{15,}\\)/g, \"(vals)\") /////// Replaces any single non-nested AND/OR conditions with (vals) if they're longer than 15 chars\n                .replace(/\\(([^()]|\\(vals\\)){50,}\\)/g,\"(nested-vals)\") /////// Replaces any AND/OR conds with a single (vals) if it's longer than 50 chars\n                .replace(/[.]([\\w,\"\\s]{30,})[,]/g, \"(in-vals)\"); /////// Specifically targets the IN operator's comma separated vals .. replace if longer than 30 chars\n            */\n    let fileName = this.state.url\n      .replace(lib.getDbConfig(this.props.dbIndex, \"url\") + \"/\", \"\")\n      .replace(\"?\", \"-\")\n      .replace(/&/g, \"-\")\n      .replace(/=/g, \"-\")\n      .replace(/\\([^()]{15,}\\)/g, \"(vals)\")\n      .replace(/\\(([^()]|\\(vals\\)){50,}\\)/g, \"(nested-vals)\")\n      .replace(/[.]([\\w,\"\\s]{30,})[,]/g, \"(in-vals)\");\n\n    if (this.state.batchDownloadCheckBox === true || dataFullStatus === true) {\n      fileName = fileName.replace(\n        /limit-\\d*/g,\n        \"limit-\" +\n        maxRowsInDownload +\n        \"-range-\" +\n        this.state.batchDownloadLowerNum +\n        \"-\" +\n        this.state.batchDownloadUpperNum\n      );\n    }\n\n    if (this.state.fileFormat === \"delimited\") {\n      if (delimiter === \",\") {\n        fileName += \".csv\";\n      } else if (delimiter === \"\\t\") {\n        fileName += \".tsv\";\n      } else {\n        fileName += \".txt\";\n      }\n\n      if (this.state.tableHeader === true) {\n        fileName = fileName\n          .replace(\".csv\", \"-header.csv\")\n          .replace(\".tsv\", \"-header.tsv\")\n          .replace(\".txt\", \"-header.txt\");\n      }\n    } else if (this.state.fileFormat === \"xml\") {\n      fileName += \".xml\";\n    } else if (this.state.fileFormat === \"json\") {\n      fileName += \".json\";\n    } else if (this.state.fileFormat === \"fasta\") {\n      fileName += \".fasta\";\n    } else {\n      fileName += \".txt\";\n    }\n\n    this.setState({\n      fileNameAuto: fileName,\n    });\n\n    return fileName;\n  }\n\n  downloadTableWithDelimiter(dataFullStatus = false) {\n    if (dataFullStatus === false && JSON.stringify(this.state.data) !== \"[]\") {\n      try {\n        // Parse out the delimiter\n        let delimiter = this.state.delimiterChoice.replace(/\\\\t/g, \"\\t\"); // for tabs\n        let result = json2csv.parse(this.state.data, {\n          fields: this.state.columns,\n          delimiter: delimiter,\n          header: this.state.tableHeader,\n        });\n        let fileName = this.createFileName();\n\n        this.downloadFile(result, fileName, \"text/plain\");\n      } catch (err) {\n        console.error(err);\n      }\n    } else if (dataFullStatus === true) {\n      if (JSON.stringify(this.state.dataFull) !== \"[]\") {\n        try {\n          // Parse out the delimiter\n          let delimiter = this.state.delimiterChoice.replace(/\\\\t/g, \"\\t\"); // for tabs\n          let result = json2csv.parse(this.state.data, {\n            fields: this.state.columns,\n            delimiter: delimiter,\n            header: this.state.tableHeader,\n          });\n          let fileName = this.createFileName(true);\n\n          this.downloadFile(result, fileName, \"text/plain\");\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  }\n\n  downloadTableAsJSON(dataFullStatus = false) {\n    if (dataFullStatus === false && JSON.stringify(this.state.data) !== \"[]\") {\n      try {\n        let result = JSON.stringify(this.state.data);\n        let fileName = this.createFileName();\n\n        this.downloadFile(result, fileName, \"text/plain\");\n      } catch (err) {\n        console.error(err);\n      }\n    } else if (dataFullStatus === true) {\n      if (JSON.stringify(this.state.dataFull) !== \"[]\") {\n        try {\n          let result = JSON.stringify(this.state.dataFull);\n          let fileName = this.createFileName(true);\n\n          this.downloadFile(result, fileName, \"text/plain\");\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  }\n\n  copyTableAsJSON(dataFullStatus = false) {\n    if (dataFullStatus === false && JSON.stringify(this.state.data) !== \"[]\") {\n      try {\n        let result = JSON.stringify(this.state.data);\n        this.setState({ copyResult: result });\n        let copySuccess = this.insertToClipboard(result);\n        if (copySuccess) {\n          this.setState({ copyLoading: false });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    } else if (dataFullStatus === true) {\n      if (JSON.stringify(this.state.dataFull) !== \"[]\") {\n        try {\n          let result = JSON.stringify(this.state.dataFull);\n          let copySuccess = this.insertToClipboard(result);\n          if (copySuccess) {\n            this.setState({ copyLoading: false });\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  }\n\n  downloadTableAsXML(dataFullStatus = false) {\n    if (dataFullStatus === false && JSON.stringify(this.state.data) !== \"[]\") {\n      try {\n        let result = js2xmlparser.parse(this.state.table, this.state.data);\n        let fileName = this.createFileName();\n\n        this.downloadFile(result, fileName, \"text/plain\");\n      } catch (err) {\n        console.error(err);\n      }\n    } else if (dataFullStatus === true) {\n      if (JSON.stringify(this.state.dataFull) !== \"[]\") {\n        try {\n          let result = js2xmlparser.parse(\n            this.state.table,\n            this.state.dataFull\n          );\n          let fileName = this.createFileName(true);\n\n          this.downloadFile(result, fileName, \"text/plain\");\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  }\n\n  copyTableAsXML(dataFullStatus = false) {\n    if (dataFullStatus === false && JSON.stringify(this.state.data) !== \"[]\") {\n      try {\n        let result = js2xmlparser.parse(this.state.table, this.state.data);\n        let copySuccess = this.insertToClipboard(result);\n        if (copySuccess) {\n          this.setState({ copyLoading: false });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    } else if (dataFullStatus === true) {\n      if (JSON.stringify(this.state.dataFull) !== \"[]\") {\n        try {\n          let result = js2xmlparser.parse(\n            this.state.table,\n            this.state.dataFull\n          );\n          let copySuccess = this.insertToClipboard(result);\n          if (copySuccess) {\n            this.setState({ copyLoading: false });\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  }\n\n  identifySeqColumnInStateColumns() {\n    return null;\n    // let seqColumn = null;\n    // let seqColumnNames = lib.getValueFromConfig(\"seq_column_names\");\n    // for (let i in this.state.columns) {\n    //   let columnName = this.state.columns[i];\n\n    //   if (lib.inArray(columnName, seqColumnNames)) {\n    //     seqColumn = columnName;\n    //     break;\n    //   }\n    // }\n    // return seqColumn;\n  }\n\n  downloadTableAsFASTA(dataFullStatus = false) {\n    let seqColumn = this.identifySeqColumnInStateColumns();\n\n    // proceed if a sequence column was found, proceed w/ the first found column....\n    if (seqColumn !== null) {\n      if (\n        dataFullStatus === false &&\n        JSON.stringify(this.state.data) !== \"[]\"\n      ) {\n        // TO DO: DETECT Protein or nucleotide tables automatically by name\n        try {\n          let result = \"\";\n\n          for (let index in this.state.data) {\n            let element = this.state.data[index];\n            let seq = element[seqColumn];\n\n            // Parse header string ...\n            let header = \">\";\n            for (let index in this.state.columns) {\n              if (this.state.columns[index] !== seqColumn) {\n                header += \"|\" + element[this.state.columns[index]];\n              }\n            }\n\n            result += header.replace(\">|\", \">\");\n            result += \"\\n\";\n            result += seq;\n            result += \"\\n\";\n          }\n\n          let fileName = this.createFileName();\n          this.downloadFile(result, fileName, \"text/plain\");\n        } catch (err) {\n          console.error(err);\n        }\n      } else if (dataFullStatus === true) {\n        if (JSON.stringify(this.state.dataFull) !== \"[]\") {\n          // TO DO: DETECT Protein or nucleotide tables automatically by name\n          try {\n            let result = \"\";\n\n            for (let index in this.state.dataFull) {\n              let element = this.state.dataFull[index];\n              let seq = element[seqColumn];\n\n              // Parse header string ...\n              let header = \">\";\n              for (let index in this.state.columns) {\n                if (this.state.columns[index] !== seqColumn) {\n                  header += \"|\" + element[this.state.columns[index]];\n                }\n              }\n\n              result += header.replace(\">|\", \">\");\n              result += \"\\n\";\n              result += seq;\n              result += \"\\n\";\n            }\n\n            let fileName = this.createFileName(true);\n            this.downloadFile(result, fileName, \"text/plain\");\n          } catch (err) {\n            console.error(err);\n          }\n        }\n      }\n    } else {\n      // User got here by mistake, reset Download.js options\n      this.handleResetClick();\n    }\n  }\n\n  insertToClipboard(str) {\n    //based on https://stackoverflow.com/a/12693636\n    document.oncopy = function (event) {\n      event.clipboardData.setData(\"text/plain\", str);\n      event.preventDefault();\n    };\n    let copySuccess = document.execCommand(\"copy\");\n    document.oncopy = undefined;\n    return copySuccess;\n  }\n\n  handleFileFormatChange = (event, fileFormat) => {\n    if (event.target.id !== \"delimiterInput\") {\n      this.setState({ fileFormat: fileFormat }, () => {\n        this.createFileName();\n        this.setState({ fileNameCustom: \"\" });\n      });\n    }\n  };\n\n  handleTableHeaderToggle() {\n    this.setState(\n      {\n        tableHeader: !this.state.tableHeader,\n      },\n      () => {\n        this.createFileName();\n      }\n    );\n  }\n\n  handlebatchDownloadCheckBox() {\n    this.setState(\n      {\n        batchDownloadCheckBox: !this.state.batchDownloadCheckBox,\n      },\n      () => {\n        this.createFileName();\n      }\n    );\n  }\n\n  handleCopyUniqueValuesOnlyToggle() {\n    this.setState({\n      copyUniqueValuesOnlyToggle: !this.state.copyUniqueValuesOnlyToggle,\n    });\n  }\n\n  handlebatchDownloadChange(e) {\n    this.setState(\n      {\n        batchSize: e,\n        batchDownloadLowerNum: 0,\n        batchDownloadUpperNum: parseInt(e.replace(\"K\", \"\"), 10) * 1000,\n      },\n      () => {\n        this.createFileName(true);\n      }\n    );\n  }\n\n  handleLeftButtonClickRangeDownload() {\n    let range = parseInt(this.state.batchSize.replace(\"K\", \"\"), 10) * 1000;\n    if (this.state.batchDownloadLowerNum - range > this.props.totalRows) {\n      this.setState(\n        {\n          batchDownloadLowerNum:\n            Math.trunc(this.props.totalRows / range) * range,\n          batchDownloadUpperNum: this.props.totalRows,\n        },\n        () => {\n          this.createFileName(true);\n        }\n      );\n    } else if (\n      this.state.batchDownloadLowerNum > 0 &&\n      this.state.batchDownloadLowerNum - range >= 0\n    ) {\n      this.setState(\n        {\n          batchDownloadLowerNum: this.state.batchDownloadLowerNum - range,\n          batchDownloadUpperNum: this.state.batchDownloadLowerNum,\n        },\n        () => {\n          this.createFileName(true);\n        }\n      );\n    } else {\n      this.setState(\n        {\n          batchDownloadLowerNum: 0,\n          batchDownloadUpperNum: range,\n        },\n        () => {\n          this.createFileName(true);\n        }\n      );\n    }\n  }\n\n  handleRightButtonClickRangeDownload() {\n    let range = parseInt(this.state.batchSize.replace(\"K\", \"\"), 10) * 1000;\n    if (\n      this.props.totalRows &&\n      this.state.batchDownloadLowerNum + range + range > this.props.totalRows\n    ) {\n      this.setState(\n        {\n          batchDownloadLowerNum:\n            Math.trunc(this.props.totalRows / range) * range,\n          batchDownloadUpperNum: this.props.totalRows,\n        },\n        () => {\n          this.createFileName(true);\n        }\n      );\n    } else {\n      this.setState(\n        {\n          batchDownloadLowerNum: this.state.batchDownloadLowerNum + range,\n          batchDownloadUpperNum:\n            this.state.batchDownloadLowerNum + range + range,\n        },\n        () => {\n          this.createFileName(true);\n        }\n      );\n    }\n  }\n\n  handleDelimiterChange(event) {\n    let newValue = event.target.value;\n\n    if (newValue.length === 0) {\n      this.setState({ delimiterChoice: \",\" }, () => {\n        this.createFileName();\n        this.setState({ fileNameCustom: \"\" });\n      });\n    } else if (newValue.length <= 5) {\n      this.setState({ delimiterChoice: newValue }, () => {\n        this.createFileName();\n        this.setState({ fileNameCustom: \"\" });\n      });\n    }\n  }\n\n  handleFileNameChange(event) {\n    let newValue = event.target.value;\n    this.setState({ fileNameCustom: newValue });\n  }\n\n  handleResetClick() {\n    this.setState(\n      {\n        fileFormat: \"delimited\",\n        delimiterChoice: \",\",\n        columnChosen: 0,\n        tableHeader: true,\n        batchDownloadCheckBox: false,\n        copyUniqueValuesOnlyToggle: false,\n        fileNameCustom: \"\",\n        copyLoading: false,\n        copyResult: \"\",\n        batchSize: \"100K\",\n        batchDownloadLowerNum: 0,\n        batchDownloadUpperNum: 100000,\n      },\n      () => {\n        this.createFileName();\n      }\n    );\n  }\n\n  handleCopyClick() {\n    this.setState({ copyLoading: true }, () => {\n      if (\n        this.state.batchDownloadCheckBox === true &&\n        this.state.fileFormat !== \"delimitedColumn\" &&\n        1 === 0\n      ) {\n        // DISABLED FOR NOW\n        let dataFullURL = this.state.url.replace(\n          /limit=\\d*/g,\n          \"limit=\" + maxRowsInDownload\n        );\n        this.fetchOutput(dataFullURL);\n      } else {\n        if (this.state.fileFormat === \"delimited\") {\n          //this.downloadTableWithDelimiter();\n        } else if (this.state.fileFormat === \"delimitedColumn\") {\n          // With threads\n          /*\n                              myWorker.postMessage({ method: 'delimitedColumn', column: this.state.columnChosen, data: this.state.data, columns: this.state.columns });\n                              myWorker.onmessage = (m) => {\n                                  this.setState({ copyLoading: false, copyResult: m.data });\n                              };\n                              */\n\n          // Without threads\n          let column = this.state.columnChosen;\n          let data = this.state.data;\n          let columns = this.state.columns;\n          let uniqueOnly = this.state.copyUniqueValuesOnlyToggle;\n\n          let output = \"\";\n\n          if (uniqueOnly) {\n            let uniqueValues = new Set();\n            for (let i = 0; i < data.length; i++) {\n              uniqueValues.add(data[i][columns[column]]);\n            }\n\n            for (let valueToCopy of uniqueValues.values()) {\n              if (\n                String(valueToCopy) &&\n                String(valueToCopy).match(/[\\W|\\s]/g)\n              ) {\n                output += '\"' + valueToCopy + '\",';\n              } else {\n                output += valueToCopy + \",\";\n              }\n            }\n          } else {\n            for (let i = 0; i < data.length; i++) {\n              let valueToCopy = data[i][columns[column]];\n              if (\n                String(valueToCopy) &&\n                String(valueToCopy).match(/[\\W|\\s]/g)\n              ) {\n                output += '\"' + valueToCopy + '\",';\n              } else {\n                output += valueToCopy + \",\";\n              }\n            }\n          }\n\n          output = output.replace(/,$/g, \"\");\n\n          let result = this.insertToClipboard(output);\n\n          this.setState(\n            {\n              copyLoading: false,\n              snackBarVisibility: true,\n              snackBarMessage: result ? \"Copied!\" : \"Error copying data ...\",\n            },\n            () => {\n              this.timer = setTimeout(() => {\n                this.setState({\n                  snackBarVisibility: false,\n                  snackBarMessage: \"Unknown error\",\n                });\n              }, 2500);\n            }\n          );\n        } else if (this.state.fileFormat === \"json\") {\n          this.copyTableAsJSON();\n          // myWorker.postMessage({method: 'json', data: this.state.data});\n          // myWorker.onmessage = (m) => {\n          //     this.setState({copyLoading: false, copyResult: m.data});\n          // };\n        } else if (this.state.fileFormat === \"xml\") {\n          this.copyTableAsXML();\n          // myWorker.postMessage({method: 'xml', data: this.state.data});\n          // myWorker.onmessage = (m) => {\n          //     this.setState({copyLoading: false, copyResult: m.data});\n          // };\n        } else if (this.state.fileFormat === \"fasta\") {\n          //this.downloadTableAsFASTA();\n        }\n\n        this.setState({\n          submitSuccess: true,\n          submitError: false,\n          submitLoading: false,\n          dataFull: [],\n        });\n      }\n    });\n  }\n\n  handleCopyOutputClick() {\n    //\n  }\n\n  handleDownloadClick() {\n    this.createFileName();\n\n    this.setState(\n      {\n        submitLoading: true,\n        submitSuccess: false,\n        submitError: false,\n        dataFull: [],\n      },\n      () => {\n        if (this.state.batchDownloadCheckBox === true) {\n          let dataFullURL = this.state.url.replace(\n            /limit=\\d*/g,\n            \"limit=\" + maxRowsInDownload\n          );\n          this.fetchOutput(dataFullURL);\n        } else {\n          if (this.state.fileFormat === \"delimited\") {\n            this.downloadTableWithDelimiter();\n          } else if (this.state.fileFormat === \"json\") {\n            this.downloadTableAsJSON();\n          } else if (this.state.fileFormat === \"xml\") {\n            this.downloadTableAsXML();\n          } else if (this.state.fileFormat === \"fasta\") {\n            this.downloadTableAsFASTA();\n          }\n\n          this.setState({\n            submitSuccess: true,\n            submitError: false,\n            submitLoading: false,\n            dataFull: [],\n          });\n        }\n      }\n    );\n  }\n\n  handleClickListItem = (event) => {\n    this.setState({ open: true, anchorEl: event.currentTarget });\n  };\n\n  handleMenuItemClick = (event, index) => {\n    this.setState({ columnChosen: index, open: false });\n  };\n\n  handleRequestClose = () => {\n    this.setState({ open: false });\n  };\n\n  fetchOutput(url) {\n    let preparedHeaders = {};\n    if (this.state.batchDownloadCheckBox === true) {\n      preparedHeaders = {\n        Range:\n          String(this.state.batchDownloadLowerNum) +\n          \"-\" +\n          String(this.state.batchDownloadUpperNum - 1),\n        Accept: \"application/json\",\n        Prefer: \"count=exact\",\n      };\n    }\n\n    if (this.props.isLoggedIn && this.props.token) {\n      preparedHeaders[\"Authorization\"] = \"Bearer \" + this.props.token;\n    }\n\n    axios\n      .get(url, { headers: preparedHeaders, requestId: \"qbAxiosReq\" })\n      .then((response) => {\n        this.setState(\n          {\n            dataFull: response.data,\n            submitLoading: false,\n            submitError: false,\n            submitSuccess: true,\n          },\n          () => {\n            this.timer = setTimeout(() => {\n              this.setState({\n                submitLoading: false,\n                submitSuccess: false,\n                submitError: false,\n              });\n            }, timeout);\n            if (this.state.fileFormat === \"delimited\") {\n              this.downloadTableWithDelimiter(true);\n            } else if (this.state.fileFormat === \"json\") {\n              this.downloadTableAsJSON(true);\n            } else if (this.state.fileFormat === \"xml\") {\n              this.downloadTableAsXML(true);\n            } else if (this.state.fileFormat === \"fasta\") {\n              this.downloadTableAsFASTA(true);\n            }\n          }\n        );\n      })\n      .catch((error) => {\n        console.error(\"HTTP Req:\", error);\n        this.setState(\n          {\n            dataFull: [],\n            submitLoading: false,\n            submitSuccess: true,\n            submitError: true, // both true implies request successfully reported an error\n          },\n          () => {\n            this.timer = setTimeout(() => {\n              this.setState({\n                submitLoading: false,\n                submitSuccess: false,\n                submitError: false,\n              });\n            }, timeout);\n          }\n        );\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <Paper elevation={2} style={styleSheet.topMargin}>\n          <Typography\n            variant=\"subtitle1\"\n            style={styleSheet.cardcardMarginLeftTop}\n          >\n            Download Query Results\n          </Typography>\n\n          {/* FILE FORMAT RADIO GROUP */}\n          <Typography variant=\"body1\" style={styleSheet.cardcardMarginLeftTop}>\n            File Format\n          </Typography>\n          <FormControl component=\"fieldset\" required>\n            <RadioGroup\n              onChange={this.handleFileFormatChange}\n              value={this.state.fileFormat}\n              style={styleSheet.cardcardMarginLeftTop}\n            >\n              <FormControlLabel\n                label=\"Delimited file (spreadsheet)\"\n                value=\"delimited\"\n                control={<Radio />}\n              />\n              {this.state.fileFormat === \"delimited\" && (\n                <TextField\n                  required\n                  onChange={this.handleDelimiterChange}\n                  label={\"Use , or \\\\t delimiter for sheet\"}\n                  value={this.state.delimiterChoice}\n                  disabled={\n                    this.state.fileFormat !== \"delimited\" ? true : false\n                  }\n                  style={\n                    styleSheet.textField &&\n                    styleSheet.cardMarginLeft &&\n                    styleSheet.inlineTextField\n                  }\n                  id=\"delimiterInput\"\n                  type=\"text\"\n                  margin=\"none\"\n                  fullWidth={true}\n                />\n              )}\n              <FormControlLabel\n                label=\"JSON File\"\n                value=\"json\"\n                control={<Radio />}\n              />\n              <FormControlLabel\n                label=\"XML File\"\n                value=\"xml\"\n                control={<Radio />}\n              />\n              <FormControlLabel\n                label=\"FASTA File\"\n                value=\"fasta\"\n                control={<Radio />}\n                style={\n                  this.identifySeqColumnInStateColumns() === null\n                    ? styleSheet.hidden\n                    : null\n                }\n              />\n\n              {this.state.fileFormat === \"fasta\" && (\n                <Typography style={styleSheet.inlineTextField}>\n                  Note: FASTA header is composed from visible columns\n                </Typography>\n              )}\n\n              <FormControlLabel\n                label=\"Copy single column values\"\n                value=\"delimitedColumn\"\n                control={<Radio />}\n              />\n              {/* The options are loaded below in the <span>. This was needed because RadioGroup/FormControl does not work with a Span child element...*/}\n            </RadioGroup>\n          </FormControl>\n          {this.state.fileFormat === \"delimitedColumn\" && (\n            <span>\n              <List style={styleSheet.inlineTextFieldSpan}>\n                <ListItem\n                  button\n                  onClick={this.handleClickListItem}\n                  aria-haspopup=\"true\"\n                  aria-controls=\"columnMenu\"\n                  aria-label=\"Choose column\"\n                >\n                  <ListItemText\n                    primary=\"Choose a column\"\n                    secondary={this.state.columns[this.state.columnChosen]}\n                  />\n                </ListItem>\n              </List>\n              <Menu\n                open={this.state.open}\n                onClose={this.handleRequestClose}\n                id=\"columnMenu\"\n                anchorEl={this.state.anchorEl}\n              >\n                {this.state.columns.map((option, index) => (\n                  <MenuItem\n                    selected={index === this.state.columnChosen}\n                    onClick={(event) => this.handleMenuItemClick(event, index)}\n                    key={option}\n                  >\n                    {option}\n                  </MenuItem>\n                ))}\n              </Menu>\n              <FormControlLabel\n                style={styleSheet.cardMarginLeft}\n                control={\n                  <Checkbox\n                    color=\"secondary\"\n                    onChange={this.handleCopyUniqueValuesOnlyToggle}\n                    value=\"copyUniqueValuesOnly\"\n                  />\n                }\n                checked={this.state.copyUniqueValuesOnlyToggle}\n                label={\"Copy unique values only\"}\n              />\n            </span>\n          )}\n\n          {/* ADDITIONAL DOWNLOADS OPTIONS */}\n          <Typography variant=\"body1\" style={styleSheet.cardcardMarginLeftTop}>\n            Options\n          </Typography>\n          <FormGroup style={styleSheet.cardcardMarginLeftTop}>\n            <FormControlLabel\n              label={\"Batch download\"}\n              control={\n                <Checkbox\n                  onChange={this.handlebatchDownloadCheckBox}\n                  value=\"batchDownloadCheckBox\"\n                />\n              }\n              disabled={\n                this.state.fileFormat === \"delimitedColumn\" ? true : false\n              }\n              checked={this.state.batchDownloadCheckBox}\n            />\n            <span\n              style={\n                this.state.batchDownloadCheckBox !== true ||\n                  this.state.fileFormat === \"delimitedColumn\"\n                  ? styleSheet.hidden\n                  : styleSheet.inlineTextField1\n              }\n            >\n              <div\n                style={\n                  isNaN(this.props.totalRows) === false &&\n                    this.props.totalRows >= 0\n                    ? styleSheet.hidden\n                    : null\n                }\n              >\n                <Typography variant=\"body2\" style={styleSheet.inlineTextField1}>\n                  Re-run query with \"Get exact row count\" option selected\n                </Typography>\n              </div>\n              <>\n                <Button\n                  onClick={this.handlebatchDownloadChange.bind(this, \"10K\")}\n                  color={this.state.batchSize === \"10K\" ? \"primary\" : \"inherit\"}\n                  style={styleSheet.button}\n                >\n                  10K\n                </Button>\n                <Button\n                  onClick={this.handlebatchDownloadChange.bind(this, \"25K\")}\n                  color={this.state.batchSize === \"25K\" ? \"primary\" : \"inherit\"}\n                  style={styleSheet.button}\n                >\n                  25K\n                </Button>\n                <Button\n                  onClick={this.handlebatchDownloadChange.bind(this, \"100K\")}\n                  color={\n                    this.state.batchSize === \"100K\" ? \"primary\" : \"inherit\"\n                  }\n                  style={styleSheet.button}\n                >\n                  100K\n                </Button>\n                <Button\n                  onClick={this.handlebatchDownloadChange.bind(this, \"250K\")}\n                  color={\n                    this.state.batchSize === \"250K\" ? \"primary\" : \"inherit\"\n                  }\n                  style={styleSheet.button}\n                >\n                  250K\n                </Button>\n              </>\n              <div style={styleSheet.inlineTextField}>\n                <Typography variant=\"body1\" style={styleSheet.inlineTextField}>\n                  {String(this.state.batchDownloadLowerNum).replace(\n                    /\\B(?=(\\d{3})+(?!\\d))/g,\n                    \",\"\n                  )}{\" \"}\n                  to{\" \"}\n                  {String(this.state.batchDownloadUpperNum).replace(\n                    /\\B(?=(\\d{3})+(?!\\d))/g,\n                    \",\"\n                  )}{\" \"}\n                  of{\" \"}\n                  {String(this.props.totalRows)\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                    .replace(\"NaN\", \"unknown\")}{\" \"}\n                  rows\n                </Typography>\n              </div>\n              <div style={styleSheet.inlineTextField3}>\n                <IconButton\n                  onClick={this.handleLeftButtonClickRangeDownload}\n                  color=\"primary\"\n                  style={styleSheet.button}\n                  aria-label=\"COPY\"\n                >\n                  <NavigateBeforeIcon />\n                </IconButton>\n                <IconButton\n                  onClick={this.handleRightButtonClickRangeDownload}\n                  color=\"primary\"\n                  style={styleSheet.button}\n                  aria-label=\"COPY\"\n                >\n                  <NavigateNextIcon />\n                </IconButton>\n              </div>\n            </span>\n\n            <FormControlLabel\n              label={\"Include table headers\"}\n              control={\n                <Checkbox\n                  onChange={this.handleTableHeaderToggle}\n                  disabled={\n                    this.state.fileFormat !== \"delimited\" ? true : false\n                  }\n                  value=\"tableHeader\"\n                />\n              }\n              checked={this.state.tableHeader}\n            />\n          </FormGroup>\n\n          {/* FILE NAME INPUT */}\n          <FormGroup\n            style={\n              styleSheet.cardcardMarginLeftTop &&\n              styleSheet.cardcardMarginBottomRight\n            }\n          >\n            <TextField\n              required\n              disabled={this.state.fileFormat === \"delimitedColumn\"}\n              id=\"fileNameInput\"\n              type=\"text\"\n              label=\"File name\"\n              onChange={this.handleFileNameChange}\n              value={\n                this.state.fileNameCustom === \"\"\n                  ? this.state.fileNameAuto\n                  : this.state.fileNameCustom\n              }\n              style={styleSheet.textField && styleSheet.cardMarginLeft}\n              margin=\"normal\"\n            />\n          </FormGroup>\n\n          {/* COPY FEATURE OUTPUT BOX + 2ND BUTTON */}\n          {/*<div style={styleSheet.cardcardMarginLeftTop && styleSheet.cardcardMarginBottomRight}>\n                    <TextField\n                        id=\"copyOutput\"\n                        type=\"text\"\n                        label=\"Ctrl A and Ctrl C to copy\"\n                        value={this.state.copyResult}\n                        onChange={this.handleCopyOutputClick}\n                        style={this.state.copyResult === \"\" ? styleSheet.hidden : styleSheet.textFieldCopyOutput}\n                        margin=\"normal\" />\n                    <IconButton onClick={this.insertToClipboard.bind(this, this.state.copyResult)} style={this.state.copyResult === \"\" ? styleSheet.hidden : styleSheet.button} aria-label=\"Copy\">\n                        <CopyIcon />\n                    </IconButton>\n                </div>*/}\n\n          {this.state.copyLoading || this.state.submitLoading ? (\n            <img\n              src={require(\"../resources/progress.gif\")}\n              width=\"100%\"\n              alt=\"Progress indicator\"\n            />\n          ) : (\n            <Divider />\n          )}\n\n          <Button\n            color=\"primary\"\n            style={styleSheet.button}\n            onClick={this.handleDownloadClick}\n            disabled={this.state.fileFormat === \"delimitedColumn\"}\n          >\n            Download\n          </Button>\n          <Button\n            color=\"primary\"\n            disabled={\n              this.state.fileFormat !== \"delimitedColumn\" &&\n              this.state.fileFormat !== \"json\" &&\n              this.state.fileFormat !== \"xml\"\n            }\n            style={styleSheet.button}\n            onClick={this.handleCopyClick}\n          >\n            Copy\n          </Button>\n          <Button\n            style={styleSheet.button && styleSheet.floatRight}\n            onClick={this.handleResetClick}\n          >\n            Reset\n          </Button>\n          {/* <Button style={styleSheet.button}>Help</Button> */}\n        </Paper>\n\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n          open={this.state.snackBarVisibility}\n          onClose={this.handleRequestClose}\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\n          message={<span id=\"message-id\">{this.state.snackBarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"secondary\"\n              style={styleSheet.close}\n              onClick={this.handleRequestClose}\n            >\n              {\" \"}\n              <CloseIcon />{\" \"}\n            </IconButton>,\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nconst styleSheet = {\n  linearProgressClass: {\n    height: 2,\n  },\n  inlineTextField: {\n    marginLeft: 34,\n  },\n  inlineTextField1: {\n    float: \"none\",\n    margin: \"0 auto\",\n  },\n  inlineTextField2: {\n    marginLeft: 50,\n  },\n  inlineTextField3: {\n    marginLeft: 135,\n  },\n  button: {\n    marginBottom: 4,\n  },\n  topMargin: {\n    marginTop: 16,\n  },\n  cardMarginLeft: {\n    // For items within the same section\n    marginLeft: 32,\n  },\n  cardMarginLeftRightTop: {\n    marginLeft: 16,\n    marginTop: 16,\n    marginRight: 6,\n  },\n  cardcardMarginLeftTop: {\n    // For a new section\n    marginLeft: 16,\n    paddingTop: 16,\n  },\n  inlineTextFieldSpan: {\n    marginLeft: 48,\n    width: 275 + \"px\",\n  },\n  cardcardMarginBottomRight: {\n    // For a new section\n    marginRight: 16,\n    paddingBottom: 16,\n  },\n  cardMarginLeftTop: {\n    marginTop: 32,\n  },\n  textField: {\n    marginLeft: 8,\n    marginRight: 8,\n  },\n  textFieldCopyOutput: {\n    marginLeft: 32,\n    marginRight: 0,\n    width: \"70%\",\n  },\n  hidden: {\n    display: \"none\",\n  },\n  floatRight: {\n    float: \"right\",\n  },\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport withMobileDialog from \"@material-ui/core/withMobileDialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Divider, Paper } from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nlet lib = require(\"../utils/library.ts\");\n\nclass ResponsiveDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      table: props.table,\n      columns: props.columns,\n      allColumns: props.allColumns,\n      primaryKeys: props.primaryKeys || [],\n      qbFilters: props.qbFilters || [],\n      url: props.url,\n      inputVals: {},\n      error: \"\",\n      submitButtonLabel: \"Submit\",\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      open: newProps.open,\n      table: newProps.table,\n      columns: newProps.columns,\n      allColumns: newProps.allColumns,\n      primaryKeys: newProps.primaryKeys || [],\n      qbFilters: newProps.qbFilters || [],\n      url: newProps.url,\n      inputVals: {},\n      error: \"\",\n    });\n  }\n\n  handleClose = () => {\n    this.props.handleNewRowClick(false);\n  };\n\n  // Reset all input fields\n  handleReset = () => {\n    clearTimeout(this.timer);\n    let qbFiltersTemp = this.state.qbFilters;\n    this.setState(\n      {\n        qbFilters: [],\n        inputVals: {},\n        error: \"\",\n        submitButtonLabel: \"Submit\",\n      },\n      () => {\n        this.setState({\n          qbFilters: qbFiltersTemp,\n        });\n      }\n    );\n  };\n\n  handleInput = (event, column, dataType) => {\n    let value = event.target.value; // New value from user\n    let inputValues = this.state.inputVals || {};\n\n    if (value === \"\") {\n      delete inputValues[column];\n    } else {\n      inputValues[column] = inputValues[column] || {};\n      inputValues[column][\"value\"] = value;\n      inputValues[column][\"dataType\"] = dataType;\n    }\n\n    this.setState({\n      inputVals: inputValues,\n    });\n  };\n\n  commitToChangeLog(newRow) {\n    let primaryKey = {};\n    for (let i = 0; i < this.state.primaryKeys.length; i++) {\n      primaryKey[this.state.primaryKeys[i]] =\n        newRow[0][this.state.primaryKeys[i]];\n    }\n\n    this.props.postReqToChangeLog(\n      this.props.dbIndex,\n      new Date(Date.now()).toISOString(),\n      this.state.table,\n      primaryKey,\n      \"ROW_INSERT\",\n      \"{}\",\n      newRow[0],\n      \"ROW INSERTED.\",\n      \"public\"\n    );\n  }\n\n  handleSubmit = () => {\n    if (this.state.submitButtonLabel === \"Submit\") {\n      // Give user 4 seconds to confirm\n      this.setState({\n        submitButtonLabel: \"Are you sure?\",\n      });\n      this.timer = setTimeout(() => {\n        this.setState({\n          submitButtonLabel: \"Submit\",\n        });\n      }, 4000);\n    } else {\n      // User wants to submit for sure, so do it\n      clearTimeout(this.timer);\n      this.setState({\n        submitButtonLabel: \"Submit\",\n      });\n      let input = this.state.inputVals;\n      let keys = Object.keys(this.state.inputVals);\n\n      let newRowURL =\n        lib.getDbConfig(this.props.dbIndex, \"url\") + \"/\" + this.state.table;\n      let postReqBody = {};\n\n      for (let i = 0; i < keys.length; i++) {\n        let column = keys[i];\n        let rawValue = input[keys[i]][\"value\"];\n        let dataType = input[keys[i]][\"dataType\"];\n        let value = rawValue;\n\n        if (dataType === \"string\") {\n          value = String(rawValue);\n        } else if (dataType === \"integer\" || dataType === \"double\") {\n          value = Number(rawValue);\n        } else if (dataType === \"boolean\") {\n          value = Boolean(rawValue);\n        }\n\n        postReqBody[column] = value;\n      }\n\n      let preparedHeaders = { Prefer: \"return=representation\" };\n      if (this.props.isLoggedIn && this.props.token) {\n        preparedHeaders[\"Authorization\"] = \"Bearer \" + this.props.token;\n      }\n\n      axios\n        .post(newRowURL, postReqBody, { headers: preparedHeaders })\n        .then((response) => {\n          this.commitToChangeLog(response.data);\n          this.props.insertNewRow(response.data);\n          this.handleReset();\n          this.props.handleNewRowClick(false);\n        })\n        .catch((error) => {\n          this.setState(\n            {\n              error: error.response,\n            },\n            () => {\n              let element = document.getElementById(\"errorPaper\");\n              element.scrollIntoView();\n            }\n          );\n        });\n    }\n  };\n\n  render() {\n    let { fullScreen } = this.props;\n    let tableRename = lib.getTableConfig(\n      this.props.dbIndex,\n      this.state.table,\n      \"rename\"\n    );\n    let tableDisplayName = tableRename ? tableRename : this.state.table;\n\n    return (\n      <>\n        <Dialog\n          fullScreen={fullScreen}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">\n            {\"Insert new row to \" + tableDisplayName}\n          </DialogTitle>\n          <DialogContent>\n            {this.state.error !== \"\" && (\n              <Paper\n                id=\"errorPaper\"\n                style={styleSheet.paperError}\n                elevation={4}\n              >\n                <Typography\n                  variant=\"subtitle1\"\n                  style={styleSheet.paperMarginTopLeft}\n                >\n                  Request Denied\n                </Typography>\n                <DialogContentText style={styleSheet.paperMarginLeft}>\n                  {\"Code: \" +\n                    (this.state.error && this.state.error.data\n                      ? this.state.error.data.code\n                      : \"\")}\n                </DialogContentText>\n                <DialogContentText style={styleSheet.paperMarginLeft}>\n                  {\"Message: \" +\n                    (this.state.error && this.state.error.data\n                      ? this.state.error.data.message\n                      : \"\")}\n                </DialogContentText>\n                <DialogContentText style={styleSheet.paperMarginLeft}>\n                  {\"Details: \" +\n                    (this.state.error && this.state.error.data\n                      ? this.state.error.data.details\n                      : \"\")}\n                </DialogContentText>\n              </Paper>\n            )}\n\n            <DialogContentText style={styleSheet.paperMarginTop}>\n              {\"Unique values for the table's primary key (\" +\n                this.state.primaryKeys.join(\", \") +\n                \") are mandatory (*). Other constraints may be imposed by the database schema, follow instructions in the error details.\"}\n            </DialogContentText>\n\n            <Typography type=\"subtitle1\" style={styleSheet.cardMarginTopBottom}>\n              New Row\n            </Typography>\n            <>\n              {this.state.qbFilters.map((column) => {\n                return (\n                  <TextField\n                    onChange={(e) =>\n                      this.handleInput(e, column.id, column.type)\n                    }\n                    key={column.id}\n                    label={column.label ? column.label : column.id}\n                    required={this.state.primaryKeys.indexOf(column.id) >= 0}\n                    placeholder={column.type}\n                    value={\n                      column.default_value ||\n                      (this.state.inputVals[column.id]\n                        ? this.state.inputVals[column.id][\"value\"]\n                        : \"\") ||\n                      \"\"\n                    }\n                    style={styleSheet.textField}\n                    margin=\"normal\"\n                  />\n                );\n              })}\n            </>\n          </DialogContent>\n          <Divider />\n          <DialogActions>\n            <Button onClick={this.handleClose}>Cancel</Button>\n            <Button onClick={this.handleReset}>Reset</Button>\n            <Button onClick={this.handleSubmit} color=\"secondary\" autoFocus>\n              {this.state.submitButtonLabel}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nconst styleSheet = {\n  paperMarginTopLeft: {\n    paddingLeft: 16,\n    paddingTop: 16,\n    paddingBottom: 8,\n  },\n  paperMarginTop: {\n    paddingLeft: 16,\n    paddingTop: 16,\n  },\n  paperMarginLeft: {\n    paddingLeft: 16,\n    paddingBottom: 8,\n    paddingRight: 8,\n  },\n  cardMarginTopBottom: {\n    // For items within the same section\n    marginBottom: 8,\n    marginTop: 16,\n  },\n  cardMarginLeft: {\n    marginLeft: 16,\n  },\n  textField: {\n    width: 60 + \"%\",\n  },\n  paperError: {\n    backgroundColor: \"pink\",\n  },\n};\n\nResponsiveDialog.propTypes = {\n  fullScreen: PropTypes.bool.isRequired,\n};\n\nexport default withMobileDialog()(ResponsiveDialog);\n","import React, { Component } from \"react\";\n\nimport NewRow from \"./NewRow.js\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteSweep\";\n\nimport pink from \"@material-ui/core/colors/pink\";\nimport red from \"@material-ui/core/colors/red\";\nimport amber from \"@material-ui/core/colors/amber\";\n\n//const timeout = 2000;\n\nexport default class EditCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      table: props.table,\n      columns: props.columns,\n      url: props.url,\n\n      dbPkInfo: {},\n      primaryKeysAvailable: false,\n      primaryKeys: [],\n\n      featureEnabled: props.featureEnabled | false,\n      changesMade: props.changesMade | {},\n      rowsStrikedOut: props.rowsStrikedOut,\n\n      snackBarVisibility: false,\n      snackBarMessage: \"Unknown error occured\",\n\n      submitButtonLabel: \"Submit\",\n      removeButtonLabel: \"Remove All\",\n\n      newRowDialogOpen: false,\n    };\n\n    this.handleFeatureEnabledSwitch = this.handleFeatureEnabledSwitch.bind(\n      this\n    );\n    this.handleSubmitClick = this.handleSubmitClick.bind(this);\n    this.handleNewRowClick = this.handleNewRowClick.bind(this);\n    this.handleRemoveAllClick = this.handleRemoveAllClick.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      table: newProps.table,\n      columns: newProps.columns,\n      url: newProps.url,\n      dbPkInfo: newProps.dbPkInfo,\n      primaryKeys: [],\n      primaryKeysAvailable: false,\n      changesMade: newProps.changesMade,\n      rowsStrikedOut: newProps.rowsStrikedOut,\n      featureEnabled: newProps.featureEnabled,\n    });\n\n    // Enable PK related features if table has a PK\n    if (newProps.dbPkInfo && this.state.table) {\n      for (let i = 0; i < newProps.dbPkInfo.length; i++) {\n        if (newProps.dbPkInfo[i][\"table\"] === this.state.table) {\n          this.setState({\n            primaryKeys: newProps.dbPkInfo[i][\"primary_keys\"],\n            primaryKeysAvailable:\n              JSON.stringify(newProps.dbPkInfo[i][\"primary_keys\"]) !== \"[]\",\n          });\n        }\n      }\n    }\n  }\n\n  handleRemoveAllClick(e) {\n    if (this.state.removeButtonLabel === \"Remove All\") {\n      this.setState({\n        removeButtonLabel: \"Are You Sure?\",\n      });\n      this.timer = setTimeout(() => {\n        this.setState({\n          removeButtonLabel: \"Remove All\",\n        });\n      }, 4000);\n    } else {\n      clearTimeout(this.timer);\n      this.setState({\n        removeButtonLabel: \"Remove All\",\n      });\n      this.props.deleteTableChanges();\n    }\n  }\n\n  // Opens a dialog to allow user to insert a new row to the table\n  handleNewRowClick(newState) {\n    if (newState === false || newState === true) {\n      this.setState({\n        newRowDialogOpen: newState,\n      });\n    } else {\n      this.setState({\n        newRowDialogOpen: !this.state.newRowDialogOpen,\n      });\n    }\n  }\n\n  handleSubmitClick() {\n    console.clear();\n\n    if (this.state.submitButtonLabel === \"Submit\") {\n      this.setState({\n        submitButtonLabel: \"Are you sure?\",\n      });\n      this.timer = setTimeout(() => {\n        this.setState({\n          submitButtonLabel: \"Submit\",\n        });\n      }, 4000);\n    } else {\n      clearTimeout(this.timer);\n      this.setState({\n        submitButtonLabel: \"Submit\",\n      });\n      this.props.submitChanges();\n    }\n  }\n\n  // Toggle the switch\n  handleFeatureEnabledSwitch() {\n    // Set the featureEnabled state to opposite of what it is at the moment...\n    this.setState(\n      {\n        featureEnabled: !this.state.featureEnabled,\n      },\n      () => {\n        this.props.changeEditFeatureEnabled(this.state.featureEnabled);\n      }\n    );\n  }\n\n  // Converts the JSON object for PK into a string that can be displayed to user\n  primaryKeyStringify(primaryKey) {\n    let keys = Object.keys(primaryKey);\n    let stringified = \"\";\n\n    for (let i in Object.keys(primaryKey)) {\n      stringified += keys[i] + \" = \" + primaryKey[keys[i]];\n      if (parseInt(i, 10) !== keys.length - 1) {\n        stringified += \" and \";\n      }\n    }\n    return stringified;\n  }\n\n  // Creates the <list> that shows the changes made\n  createChangeLogList() {\n    if (\n      this.state.table === \"\" ||\n      JSON.stringify(this.state.changesMade) === \"{}\" ||\n      this.state.changesMade[this.state.table] === null ||\n      this.state.changesMade[this.state.table] === undefined\n    ) {\n      return (\n        <ListItem key={-1}>\n          <ListItemAvatar>\n            <Avatar>\n              <SearchIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={\"No unsubmitted changes found...\"} />\n        </ListItem>\n      );\n    }\n\n    let length = Object.keys(this.state.changesMade[this.state.table]).length;\n    let keys = Object.keys(this.state.changesMade[this.state.table]);\n    let listItems = [];\n\n    for (let i = 0; i < length; i++) {\n      let column = keys[i];\n\n      let change = this.state.changesMade[this.state.table][column];\n      let changeCount = Object.keys(change).length;\n\n      for (let ii = 0; ii < changeCount; ii++) {\n        let oldValue = change[Object.keys(change)[ii]][\"oldValue\"];\n        let newValue = change[Object.keys(change)[ii]][\"newValue\"];\n        let markForDeletion = change[Object.keys(change)[ii]][\"delete\"];\n        let primaryKey = change[Object.keys(change)[ii]][\"primaryKey\"];\n        let error = change[Object.keys(change)[ii]][\"error\"];\n        let errorResp = change[Object.keys(change)[ii]][\"errorResp\"];\n\n        listItems.push(\n          <span key={String(i) + String(ii) + \"span\"}>\n            <ListItem\n              key={String(i) + String(ii)}\n              title={error ? errorResp : \"\"}\n            >\n              <ListItemAvatar>\n                {error ? (\n                  <Avatar style={styleSheet.errorAvatar}>\n                    <CloseIcon />\n                  </Avatar>\n                ) : markForDeletion ? (\n                  <Avatar>\n                    {\" \"}\n                    <DeleteOutlineIcon />{\" \"}\n                  </Avatar>\n                ) : (\n                  <Avatar>\n                    {\" \"}\n                    <CreateIcon />{\" \"}\n                  </Avatar>\n                )}\n              </ListItemAvatar>\n              {markForDeletion ? (\n                <ListItemText\n                  primary={\"Delete row\"}\n                  secondary={\"Where \" + this.primaryKeyStringify(primaryKey)}\n                />\n              ) : (\n                <ListItemText\n                  primary={column + \" column changed\"}\n                  secondary={\n                    \"From '\" +\n                    oldValue +\n                    \"' to '\" +\n                    newValue +\n                    \"' where \" +\n                    this.primaryKeyStringify(primaryKey)\n                  }\n                />\n              )}\n\n              <ListItemSecondaryAction\n                onClick={this.props.deleteChange.bind(\n                  this,\n                  column,\n                  Object.keys(change)[ii],\n                  markForDeletion || false\n                )}\n              >\n                <IconButton aria-label=\"Delete\">\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n\n            {error && errorResp && errorResp.code && errorResp.message && (\n              <ListItem key={String(i) + String(ii) + \"err\"}>\n                <ListItemText\n                  primary={\"PostgreSQL Error Code: \" + errorResp.code}\n                  secondary={\"Error: \" + errorResp.message}\n                />\n              </ListItem>\n            )}\n          </span>\n        );\n      }\n    }\n    return listItems;\n  }\n\n  render() {\n    return (\n      <>\n        <Paper elevation={2} style={styleSheet.topMargin}>\n          <Typography\n            variant=\"subtitle1\"\n            style={styleSheet.cardcardMarginLeftTop}\n          >\n            Edit Table Contents\n          </Typography>\n\n          {this.state.primaryKeysAvailable ? (\n            <FormGroup style={styleSheet.cardMarginLeft}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state.featureEnabled}\n                    onChange={this.handleFeatureEnabledSwitch}\n                    value=\"featureStatus\"\n                  />\n                }\n                label=\"Enable table edit feature\"\n              />\n            </FormGroup>\n          ) : (\n            <>\n              <List dense={false}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar style={styleSheet.secondaryAvatar}>\n                      <ErrorIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"This table cannot be edited because its primary keys were not found.\" />\n                </ListItem>\n              </List>\n            </>\n          )}\n\n          {this.state.featureEnabled && this.state.primaryKeysAvailable ? (\n            <>\n              <Typography\n                variant=\"body1\"\n                style={styleSheet.cardcardMarginLeftTop}\n              >\n                Changes made to this table\n              </Typography>\n\n              <List dense={true}>{this.createChangeLogList()}</List>\n            </>\n          ) : JSON.stringify(this.state.changesMade) !== \"{}\" ? (\n            <>\n              <List dense={false}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar style={styleSheet.amberAvatar}>\n                      <WarningIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Unsubmitted changes are detected, these changes will be lost if not submitted.\" />\n                </ListItem>\n              </List>\n            </>\n          ) : (\n            <div />\n          )}\n          <Divider />\n\n          <Button\n            onClick={this.handleSubmitClick}\n            disabled={\n              !(this.state.featureEnabled && this.state.primaryKeysAvailable)\n            }\n            color=\"primary\"\n            style={styleSheet.button}\n            value={this.state.submitButtonLabel}\n          >\n            {this.state.submitButtonLabel}\n          </Button>\n          <Button\n            onClick={this.handleNewRowClick}\n            disabled={\n              !(this.state.featureEnabled && this.state.primaryKeysAvailable)\n            }\n            color=\"primary\"\n            style={styleSheet.button}\n            value={\"New Row\"}\n          >\n            {\"New Row\"}\n          </Button>\n          <Button\n            onClick={this.handleRemoveAllClick}\n            disabled={\n              !(this.state.featureEnabled && this.state.primaryKeysAvailable)\n            }\n            style={styleSheet.button && styleSheet.floatRight}\n            value={this.state.removeButtonLabel}\n          >\n            {this.state.removeButtonLabel}\n          </Button>\n        </Paper>\n\n        <NewRow\n          {...this.props}\n          open={this.state.newRowDialogOpen}\n          primaryKeys={this.state.primaryKeys}\n          handleNewRowClick={this.handleNewRowClick}\n        />\n\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n          open={this.state.snackBarVisibility}\n          onClose={this.handleRequestClose}\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\n          message={<span id=\"message-id\">{this.state.snackBarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"secondary\"\n              style={styleSheet.close}\n              onClick={this.handleRequestClose}\n            >\n              {\" \"}\n              <CloseIcon />{\" \"}\n            </IconButton>,\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nconst styleSheet = {\n  button: {\n    marginBottom: 4,\n  },\n  topMargin: {\n    marginTop: 16,\n  },\n  cardMarginLeft: {\n    // For items within the same section\n    marginLeft: 32,\n  },\n  cardcardMarginLeftTop: {\n    // For a new section\n    marginLeft: 16,\n    paddingTop: 16,\n  },\n  floatRight: {\n    float: \"right\",\n  },\n  secondaryAvatar: {\n    color: \"#fff\",\n    backgroundColor: pink[500],\n  },\n  amberAvatar: {\n    color: \"#fff\",\n    backgroundColor: amber[500],\n  },\n  errorAvatar: {\n    color: \"#fff\",\n    backgroundColor: red[500],\n  },\n};\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Downloads from \"./Downloads.js\";\nimport EditCard from \"./EditCard.js\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport axios from \"axios\";\nimport \"react-table/react-table.css\";\n\nimport checkboxHOC from \"react-table/lib/hoc/selectTable\";\nlet CheckboxTable = checkboxHOC(ReactTable);\n\nlet lib = require(\"../utils/library.ts\");\n\nexport default class DataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      table: props.table,\n      columns: props.columns,\n      data: [],\n      url: props.url,\n      dbPrimaryKeys: [],\n      tablePrimaryKeys: [],\n      editFeatureEnabled: false,\n      editFeatureChangesMade: {},\n      rowsStrikedOut: [],\n    };\n\n    this.renderEditableCell = this.renderEditableCell.bind(this);\n    this.submitChanges = this.submitChanges.bind(this);\n    this.deleteChange = this.deleteChange.bind(this);\n    this.deleteTableChanges = this.deleteTableChanges.bind(this);\n    this.postReqToChangeLog = this.postReqToChangeLog.bind(this);\n    this.changeEditFeatureEnabled = this.changeEditFeatureEnabled.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      table: newProps.table,\n      columns: newProps.columns,\n      url: newProps.url,\n      data: this.addPkAsId(newProps.data),\n      tablePrimaryKeys: [],\n      editFeatureEnabled:\n        this.state.table !== newProps.table\n          ? false\n          : this.state.editFeatureEnabled,\n    });\n\n    // Enable PK related features if table has a PK\n    if (newProps.dbPkInfo && this.state.table) {\n      for (let i = 0; i < newProps.dbPkInfo.length; i++) {\n        if (newProps.dbPkInfo[i][\"table\"] === this.state.table) {\n          this.setState({\n            tablePrimaryKeys: newProps.dbPkInfo[i][\"primary_keys\"],\n          });\n        }\n      }\n    }\n  }\n\n  // Adds a PK column to each row for the selection part\n  addPkAsId(originalData) {\n    if (!originalData) {\n      return [];\n    }\n\n    let data = originalData.map((item) => {\n      let pkValues = [];\n      for (let i = 0; i < this.state.tablePrimaryKeys.length; i++) {\n        pkValues.push(item[this.state.tablePrimaryKeys[i]]);\n      }\n      let _id = pkValues;\n      return {\n        _id,\n        ...item,\n      };\n    });\n    return data;\n  }\n\n  // Allows EditCard.js to change the state here\n  changeEditFeatureEnabled(featureEnabled) {\n    this.setState({\n      editFeatureEnabled: featureEnabled,\n    });\n  }\n\n  // Allows EditCard.js to change the state here\n  changeEditFeatureChangesMade(newChanges) {\n    this.setState({\n      editFeatureChangesMade: newChanges,\n    });\n  }\n\n  // Deletes all changes in the current table (for Remove All button functionality)\n  deleteTableChanges() {\n    let tempChanges = this.state.editFeatureChangesMade[this.state.table];\n    if (tempChanges) {\n      let columnsChanged = Object.keys(tempChanges);\n      let columnsChangeCount = columnsChanged.length;\n\n      // Iterate over all keys (list of column specific changes)\n      for (let i = 0; i < columnsChangeCount; i++) {\n        let column = columnsChanged[i];\n        let keysChanged = Object.keys(tempChanges[column]);\n        let changeCount = keysChanged.length;\n\n        // Iterate over all keys (all changes individually)\n        for (let ii = 0; ii < changeCount; ii++) {\n          let key = keysChanged[ii];\n\n          // delete using column + key\n          this.deleteChange(column, key, false);\n        }\n      }\n    }\n  }\n\n  // Given a COLUMN and KEY, deletes the change from the state's changesMade value (for individual deletion of changes)\n  // If noRestore is true, it does not try to restore the original value\n  deleteChange(column, key, noRestore) {\n    let tempChanges = this.state.editFeatureChangesMade;\n\n    if (noRestore === false) {\n      // Restore original value in state.data if it is available\n      let originalValue =\n        tempChanges[this.state.table][column][key][\"oldValue\"];\n      if (originalValue) {\n        let data = this.state.data;\n        data[tempChanges[this.state.table][column][key][\"rowIndex\"]][\n          column\n        ] = originalValue;\n        this.setState({\n          data: data,\n        });\n      }\n    }\n\n    // Delete the row from state.data\n    if (column === \"id\" && key && noRestore === \"delete\") {\n      // Find the index of row to be deleted\n      let dataLength = this.state.data.length;\n      let rowToDeleteIndex = null;\n      for (let i = 0; i < dataLength; i++) {\n        if (this.state.data[i][\"_id\"].join(\"\") === key) {\n          rowToDeleteIndex = i;\n          break;\n        }\n      }\n\n      // Delete the found row...\n      let data = this.state.data;\n      data.splice(rowToDeleteIndex, 1);\n      this.setState({\n        data: data,\n      });\n    }\n\n    // Delete the change from list of changes\n    delete tempChanges[this.state.table][column][key];\n\n    // Delete the column object if that was the only change for that column...\n    if (JSON.stringify(tempChanges[this.state.table][column]) === \"{}\") {\n      delete tempChanges[this.state.table][column];\n    }\n\n    // Delete the table object if that was the only change for that table...\n    if (JSON.stringify(tempChanges[this.state.table]) === \"{}\") {\n      delete tempChanges[this.state.table];\n    }\n\n    this.setState({\n      editFeatureChangesMade: tempChanges,\n    });\n  }\n\n  // Given a COLUMN and KEY, toggles the error code for a change (when server responds with error)\n  setChangeError(column, key, error, errorResp) {\n    let tempChanges = this.state.editFeatureChangesMade;\n\n    // Toggle the change...\n    tempChanges[this.state.table][column][key][\"error\"] = error || true;\n    tempChanges[this.state.table][column][key][\"errorResp\"] = errorResp;\n\n    this.setState({\n      editFeatureChangesMade: tempChanges,\n    });\n  }\n\n  // Converts the JSON object for PK into a string and into part of a PostgREST compliant URL\n  primaryKeyAsUrlParam(primaryKey) {\n    let keys = Object.keys(primaryKey);\n    let stringified = \"\";\n\n    for (let i in Object.keys(primaryKey)) {\n      stringified += keys[i] + \".eq.\" + primaryKey[keys[i]];\n      if (parseInt(i, 10) !== keys.length - 1) {\n        stringified += \",\";\n      }\n    }\n    return stringified;\n  }\n\n  postReqToChangeLog(\n    dbIndex,\n    changeTimeStamp,\n    tableChanged,\n    primaryKey,\n    columnChanged,\n    oldValue,\n    newValue,\n    notes,\n    userName\n  ) {\n    let changeLogURL = lib.getDbConfig(dbIndex, \"url\") + \"/change_log\";\n    let changeLogPostReqBody = {};\n\n    // These columns are hardcoded ... the db schema for the change-log table is provided separately\n    changeLogPostReqBody[\"change_timestamp\"] = changeTimeStamp;\n    changeLogPostReqBody[\"table_changed\"] = tableChanged;\n    changeLogPostReqBody[\"primary_key_of_changed_row\"] = JSON.stringify(\n      primaryKey\n    );\n    changeLogPostReqBody[\"column_changed\"] = columnChanged;\n    changeLogPostReqBody[\"old_value\"] = String(oldValue) || \"error\";\n    changeLogPostReqBody[\"new_value\"] = String(newValue) || \"error\";\n    changeLogPostReqBody[\"notes\"] = notes;\n    changeLogPostReqBody[\"user_name\"] = userName; // TODO: This will change after LOGIN SYSTEM is developed.\n\n    let preparedHeaders = { Prefer: \"return=representation\" };\n    if (this.props.isLoggedIn && this.props.token) {\n      preparedHeaders[\"Authorization\"] = \"Bearer \" + this.props.token;\n    }\n\n    axios\n      .post(changeLogURL, changeLogPostReqBody, { headers: preparedHeaders })\n      .then((response) => {\n        //console.info(\"Change Log POST Successful:\" + JSON.stringify(response));\n      })\n      .catch((error) => {\n        // Show error in Snack-Bar\n        this.setState(\n          {\n            snackBarVisibility: true,\n            snackBarMessage: \"Error committing CHANGE LOG!\",\n          },\n          () => {\n            this.timer = setTimeout(() => {\n              this.setState({\n                snackBarVisibility: false,\n                snackBarMessage: \"Unknown error\",\n              });\n            }, 5000);\n          }\n        );\n      });\n  }\n\n  // Makes PATCH requests to submit current table's changes +\n  // deletes them from local list of changes as the reqs are successful.\n  // TODO: Keeps track of all changes in the updates table.\n  // Also marks any changes that are not successful.\n  submitChanges() {\n    let currentChanges = this.state.editFeatureChangesMade[this.state.table];\n\n    // Nothing to submit\n    if (currentChanges === null || currentChanges === undefined) {\n      return;\n    }\n\n    for (let i = 0; i < Object.keys(currentChanges).length; i++) {\n      // For all columns changed\n      let currentColumnChanges = currentChanges[Object.keys(currentChanges)[i]];\n      for (let ii = 0; ii < Object.keys(currentColumnChanges).length; ii++) {\n        // For all rows of a column changed\n        let change =\n          currentChanges[Object.keys(currentChanges)[i]][\n          Object.keys(currentColumnChanges)[ii]\n          ];\n\n        let primaryKey = change[\"primaryKey\"];\n        let columnChanged = Object.keys(currentChanges)[i];\n        let keyChanged = Object.keys(currentColumnChanges)[ii];\n        let oldValue = change[\"oldValue\"];\n        let newValue = change[\"newValue\"];\n        let deleteRow = change[\"delete\"];\n\n        if (deleteRow !== true && String(oldValue) !== String(newValue)) {\n          // UPDATE SINGLE CELL VALUE\n          // Create the URL, add in the new value as URL param\n          let url =\n            lib.getDbConfig(this.props.dbIndex, \"url\") +\n            \"/\" +\n            this.state.table +\n            \"?and=(\" +\n            this.primaryKeyAsUrlParam(primaryKey) +\n            \")\";\n\n          // Patch HTTP request\n          let patchReqBody = {};\n          patchReqBody[columnChanged] = newValue;\n\n          let preparedHeaders = { Prefer: \"return=representation\" };\n          if (this.props.isLoggedIn && this.props.token) {\n            preparedHeaders[\"Authorization\"] = \"Bearer \" + this.props.token;\n          }\n\n          // Send the Request and check its response:\n          // PATCH the request\n          axios\n            .patch(\n              url,\n              { [columnChanged]: newValue },\n              { headers: preparedHeaders }\n            )\n            .then((response) => {\n              this.deleteChange(columnChanged, keyChanged, true); // true => do not restore original value when deleting change\n\n              // Add an entry to the database's change log\n              this.postReqToChangeLog(\n                this.props.dbIndex,\n                new Date(Date.now()).toISOString(),\n                this.state.table,\n                primaryKey,\n                columnChanged,\n                oldValue,\n                newValue,\n                \"\",\n                this.props.userName || \"Unknown Username\"\n              );\n            })\n            .catch((error) => {\n              console.error(\"PATCH ERROR RESP:\" + String(error));\n              this.setChangeError(\n                columnChanged,\n                keyChanged,\n                true,\n                error.response.data\n              );\n              // Show error in Snack-Bar\n              this.setState(\n                {\n                  snackBarVisibility: true,\n                  snackBarMessage: \"Database update failed.\",\n                },\n                () => {\n                  this.timer = setTimeout(() => {\n                    this.setState({\n                      snackBarVisibility: false,\n                      snackBarMessage: \"Unknown error\",\n                    });\n                  }, 5000);\n                }\n              );\n            });\n        } else if (deleteRow) {\n          // DELETE ROW FEATURE\n          // Create the URL, add in the new value as URL param\n          let url =\n            lib.getDbConfig(this.props.dbIndex, \"url\") +\n            \"/\" +\n            this.state.table +\n            \"?and=(\" +\n            this.primaryKeyAsUrlParam(primaryKey) +\n            \")\";\n\n          let preparedHeaders = { Prefer: \"return=representation\" };\n          if (this.props.isLoggedIn && this.props.token) {\n            preparedHeaders[\"Authorization\"] = \"Bearer \" + this.props.token;\n          }\n\n          // Send the DELETE request and check response\n          axios\n            .delete(url, { headers: preparedHeaders })\n            .then((response) => {\n              // Add an entry to the database's change log\n              let oldRow = null;\n              let needle = [];\n              for (let i = 0; i < this.state.tablePrimaryKeys.length; i++) {\n                needle.push(primaryKey[this.state.tablePrimaryKeys[i]]);\n              }\n\n              for (var i = 0; i < this.state.data.length; i++) {\n                // look for the entry with a matching `code` value\n                if (String(this.state.data[i]._id) === String(needle)) {\n                  oldRow = JSON.stringify(this.state.data[i]);\n                }\n              }\n\n              this.postReqToChangeLog(\n                this.props.dbIndex,\n                new Date(Date.now()).toISOString(),\n                this.state.table,\n                primaryKey,\n                \"ROW_DELETE\",\n                oldRow || \"Error finding old row...\",\n                \"{}\",\n                \"ROW DELETED.\",\n                this.props.userName || \"Unknown Username\"\n              );\n\n              this.deleteChange(\"id\", keyChanged, \"delete\");\n            })\n            .catch((error) => {\n              console.error(\"ERROR RESP: \" + String(error));\n              this.setChangeError(\"id\", keyChanged, true, error.response.data);\n              // Show error in Snack-Bar\n              this.setState(\n                {\n                  snackBarVisibility: true,\n                  snackBarMessage: \"Row delete request failed.\",\n                },\n                () => {\n                  this.timer = setTimeout(() => {\n                    this.setState({\n                      snackBarVisibility: false,\n                      snackBarMessage: \"Unknown error\",\n                    });\n                  }, 5000);\n                }\n              );\n            });\n        } else {\n          // Tell user that the change was not actually detected... and that they should submit a bug\n          console.error(\n            \"Tell user that the change was not actually detected... and that they should submit a bug\"\n          );\n          // Show error in Snack-Bar\n          this.setState(\n            {\n              snackBarVisibility: true,\n              snackBarMessage: \"Change was not detected.\",\n            },\n            () => {\n              this.timer = setTimeout(() => {\n                this.setState({\n                  snackBarVisibility: false,\n                  snackBarMessage: \"Unknown error\",\n                });\n              }, 2500);\n            }\n          );\n        }\n      }\n    }\n  }\n\n  // Renders an editable cell + manages changes made to it using helpers\n  renderEditableCell(cellInfo) {\n    return (\n      <div\n        style={{\n          backgroundColor: \"#fafafa\",\n          border: \"none\",\n          borderBottom: \"1px solid lightpink\",\n          padding: \"1px\",\n        }}\n        contentEditable\n        suppressContentEditableWarning\n        onBlur={(e) => {\n          let data = [...this.state.data];\n\n          let changedRowIndex = cellInfo.index;\n          let changedColumnName = cellInfo.column.id;\n          //let oldRow = JSON.stringify(this.state.data[changedRowIndex]);\n          let oldCellValue = data[changedRowIndex][changedColumnName];\n          let newCellValue = e.target.innerHTML;\n\n          // Data type assignment for newValue based on the data type of oldValue\n          // TODO: this should be done when a change is detected?\n          if (String(newCellValue) === \"\") {\n            newCellValue = null;\n          } else {\n            if (typeof oldCellValue === \"string\") {\n              newCellValue = String(newCellValue);\n            } else if (typeof oldCellValue === \"number\") {\n              newCellValue = Number(newCellValue);\n            } else if (typeof oldCellValue === \"boolean\") {\n              newCellValue = Boolean(newCellValue);\n            }\n          }\n\n          // ToDo: when original value is NULL, and you don't change it, it sets it to \"\" from NULL... prevent it\n          if (\n            String(oldCellValue) !== String(newCellValue) &&\n            !(String(oldCellValue) === \"null\" && String(newCellValue) === \"\") &&\n            String(newCellValue).indexOf(\"<br>\") < 0 &&\n            String(newCellValue).indexOf(\"<div>\") < 0\n          ) {\n            let changedRowPk = {};\n            let changedRowPkStr = \"\";\n            for (let i = 0; i < this.state.tablePrimaryKeys.length; i++) {\n              changedRowPk[this.state.tablePrimaryKeys[i]] =\n                data[changedRowIndex][this.state.tablePrimaryKeys[i]];\n              changedRowPkStr += String(\n                data[changedRowIndex][this.state.tablePrimaryKeys[i]]\n              );\n            }\n\n            // Update the local variable to this function\n            data[changedRowIndex][changedColumnName] = newCellValue;\n            //let newRow = data[changedRowIndex];\n\n            let currentChanges = this.state.editFeatureChangesMade;\n\n            // Create the JSON objects if they do not exist\n            currentChanges[this.state.table] =\n              currentChanges[this.state.table] || {};\n            currentChanges[this.state.table][changedColumnName] =\n              currentChanges[this.state.table][changedColumnName] || {};\n            currentChanges[this.state.table][changedColumnName][\n              changedRowPkStr\n            ] =\n              currentChanges[this.state.table][changedColumnName][\n              changedRowPkStr\n              ] || {};\n\n            // Keep track of the original* value.\n            // * Original means the value in the db on server\n            currentChanges[this.state.table][changedColumnName][\n              changedRowPkStr\n            ][\"oldValue\"] =\n              currentChanges[this.state.table][changedColumnName][\n              changedRowPkStr\n              ][\"oldValue\"] || oldCellValue;\n\n            // Insert the updates + keep track of the PK\n            currentChanges[this.state.table][changedColumnName][\n              changedRowPkStr\n            ][\"newValue\"] = newCellValue;\n            currentChanges[this.state.table][changedColumnName][\n              changedRowPkStr\n            ][\"primaryKey\"] = changedRowPk;\n            currentChanges[this.state.table][changedColumnName][\n              changedRowPkStr\n            ][\"rowIndex\"] = changedRowIndex;\n\n            // If the newly made change causes the old and new values to be the same, then this change should be deleted altogether\n            if (\n              String(\n                currentChanges[this.state.table][changedColumnName][\n                changedRowPkStr\n                ][\"oldValue\"]\n              ) === String(newCellValue)\n            ) {\n              this.deleteChange(changedColumnName, changedRowPkStr, true);\n            }\n\n            this.setState({\n              data: data,\n              editFeatureChangesMade: currentChanges,\n            });\n          }\n        }}\n        dangerouslySetInnerHTML={{\n          __html: this.state.data[cellInfo.index][cellInfo.column.id],\n        }}\n      />\n    );\n  }\n\n  // Unchecks all rows, never sets all to be checked\n  toggleAll = () => {\n    if (\n      this.state.editFeatureChangesMade &&\n      this.state.editFeatureChangesMade[this.state.table] &&\n      this.state.editFeatureChangesMade[this.state.table][\"id\"]\n    ) {\n      // Intentioanlly removed the functionality to select all, can only unselect all\n      let keysChanged = Object.keys(\n        this.state.editFeatureChangesMade[this.state.table][\"id\"]\n      );\n      let changeCount = keysChanged.length;\n\n      // Iterate over all keys (all changes individually)\n      for (let i = 0; i < changeCount; i++) {\n        this.deleteChange(\"id\", keysChanged[i], true);\n      }\n    }\n  };\n\n  // Toggles single rows' status from checked to unchecked (delete the change)\n  toggleSelection = (primaryKey, shift, row) => {\n    // Create a PK {} and STRING\n    let changedRowPk = {};\n    let changedRowPkStr = primaryKey.join(\"\");\n    for (let i = 0; i < this.state.tablePrimaryKeys.length; i++) {\n      changedRowPk[this.state.tablePrimaryKeys[i]] = primaryKey[i];\n    }\n\n    let currentChanges = this.state.editFeatureChangesMade;\n    // Create the JSON objects if they do not exist\n    currentChanges[this.state.table] = currentChanges[this.state.table] || {};\n    currentChanges[this.state.table][\"id\"] =\n      currentChanges[this.state.table][\"id\"] || {};\n    currentChanges[this.state.table][\"id\"][changedRowPkStr] =\n      currentChanges[this.state.table][\"id\"][changedRowPkStr] || {};\n\n    // Mark the row for deletion (set delete property true), or delete the change from editFeatureChangesMade state object\n    if (currentChanges[this.state.table][\"id\"][changedRowPkStr][\"delete\"]) {\n      // the row was marked for deletion, and user unchecked the row\n      this.deleteChange(\"id\", changedRowPkStr, true);\n    } else {\n      // the row was not marked for deletion, but user wants to mark it for deletion\n      currentChanges[this.state.table][\"id\"][changedRowPkStr][\n        \"primaryKey\"\n      ] = changedRowPk;\n      currentChanges[this.state.table][\"id\"][changedRowPkStr][\n        \"delete\"\n      ] = !currentChanges[this.state.table][\"id\"][changedRowPkStr][\"delete\"];\n    }\n\n    this.setState({\n      editFeatureChangesMade: currentChanges,\n    });\n  };\n\n  // Returns true iff row identified by KEY is marked for deletion in editFeatureChangesMade\n  isSelected = (key) => {\n    // Change doesn't even exist, so return false\n    if (\n      this.state.editFeatureChangesMade === {} ||\n      this.state.editFeatureChangesMade[this.state.table] === undefined ||\n      this.state.editFeatureChangesMade[this.state.table][\"id\"] === undefined\n    ) {\n      return false;\n    }\n    return Object.keys(\n      this.state.editFeatureChangesMade[this.state.table][\"id\"]\n    ).includes(key.join(\"\"));\n  };\n\n  // For the Snackbar close button\n  handleRequestClose = () => {\n    this.setState({ snackBarVisibility: false });\n  };\n\n  render() {\n    let { columns, data: _data } = this.state;\n    //lets try to render objects and arrays as stringified JSON for better datum and metadata rendering\n    const data = [...(_data || [])].map(_row => {\n      const row = {};\n      Object.entries(_row).forEach(([key, value]) => {\n        let serializedValue = value;\n        if (\n          (typeof value === 'object' ||\n            !Array.isArray(value)) &&\n          value !== null\n        ) {\n          try {\n            serializedValue = JSON.stringify(value);\n          } catch (err) { };\n        }\n        row[key] = serializedValue;\n      });\n      return row;\n    });\n\n    //console.log({ _data, data })\n\n    let parsedColumns = [];\n\n    // Create columns with expected column properties\n    if (columns) {\n      parsedColumns = columns.map((columnName) => {\n        let columnRename = lib.getColumnConfig(\n          this.props.dbIndex,\n          this.state.table,\n          columnName,\n          \"rename\"\n        );\n        let columnVisibility = lib.getColumnConfig(\n          this.props.dbIndex,\n          this.state.table,\n          columnName,\n          \"visible\"\n        );\n        let columnEditability = lib.getColumnConfig(\n          this.props.dbIndex,\n          this.state.table,\n          columnName,\n          \"editable\"\n        );\n\n        let columnWidthDefault = lib.getTableConfig(\n          this.props.dbIndex,\n          this.state.table,\n          \"defaultWidthPx\"\n        );\n        let columnWidth = lib.getColumnConfig(\n          this.props.dbIndex,\n          this.state.table,\n          columnName,\n          \"widthPx\"\n        );\n\n        let columnMinWidth = lib.getColumnConfig(\n          this.props.dbIndex,\n          this.state.table,\n          columnName,\n          \"minWidthPx\"\n        );\n        let columnMaxWidth = lib.getColumnConfig(\n          this.props.dbIndex,\n          this.state.table,\n          columnName,\n          \"maxWidthPx\"\n        );\n\n        return {\n          id: columnName,\n          Header: columnRename ? columnRename : columnName,\n          accessor: columnName,\n          show: columnVisibility !== null ? columnVisibility : true,\n          width:\n            columnWidth !== null\n              ? columnWidth\n              : columnWidthDefault\n                ? columnWidthDefault\n                : undefined,\n          maxWidth: columnMaxWidth !== null ? columnMaxWidth : undefined,\n          minWidth: columnMinWidth !== null ? columnMinWidth : 100,\n          headerStyle: { fontWeight: \"bold\" },\n          Cell:\n            this.state.editFeatureEnabled === true &&\n              columnEditability !== false\n              ? this.renderEditableCell\n              : (row) =>\n                row.value !== undefined && row.value !== null\n                  ? String(row.value)\n                  : row.value,\n        };\n      });\n    }\n\n    // Prepare for CheckboxTable\n    let { toggleSelection, isSelected, toggleAll } = this;\n    let checkboxProps = {\n      isSelected,\n      toggleSelection,\n      toggleAll,\n      selectType: \"checkbox\",\n      getTrProps: (s, r) => {\n        let selected = false;\n        try {\n          selected = this.isSelected(r.original._id);\n        } catch (error) {\n          selected = false;\n        }\n        return {\n          style: {\n            backgroundColor: selected ? \"lightpink\" : \"inherit\",\n            textDecoration: selected ? \"line-through\" : \"none\",\n          },\n        };\n      },\n    };\n\n    // render() return\n    return (\n      <>\n        {this.state.editFeatureEnabled ? (\n          <CheckboxTable\n            data={_data}\n            columns={parsedColumns}\n            defaultPageSize={10}\n            className=\"-striped -highlight\"\n            pageSizeOptions={[10, 50, 100, 200, 500, 1000]}\n            previousText=\"Previous Page\"\n            nextText=\"Next Page\"\n            noDataText={this.props.noDataText}\n            {...checkboxProps}\n          />\n        ) : (\n          <ReactTable\n            data={data}\n            columns={parsedColumns}\n            defaultPageSize={10}\n            className=\"-striped -highlight\"\n            pageSizeOptions={[10, 50, 100, 200, 500, 1000]}\n            previousText=\"Previous Page\"\n            nextText=\"Next Page\"\n            noDataText={this.props.noDataText}\n          />\n        )}\n\n        <div style={styleSheet.cardGroups}>\n          <Grid\n            container\n            spacing={10}\n            direction={\n              this.state.tablePrimaryKeys.join(\",\") === \"\"\n                ? \"row-reverse\"\n                : \"row\"\n            }\n          >\n            {this.state.tablePrimaryKeys.join(\",\") !== \"\" && (\n              <Grid item sm={12} md={6}>\n                <EditCard\n                  {...this.props}\n                  table={this.state.table}\n                  columns={this.state.columns}\n                  url={this.state.url}\n                  featureEnabled={this.state.editFeatureEnabled}\n                  changesMade={this.state.editFeatureChangesMade}\n                  rowsStrikedOut={this.state.rowsStrikedOut}\n                  submitChanges={this.submitChanges}\n                  deleteChange={this.deleteChange}\n                  deleteTableChanges={this.deleteTableChanges}\n                  postReqToChangeLog={this.postReqToChangeLog}\n                  changeEditFeatureEnabled={this.changeEditFeatureEnabled}\n                />\n              </Grid>\n            )}\n            <Grid item sm={12} md={6}>\n              <Downloads\n                {...this.props}\n                table={this.state.table}\n                columns={this.state.columns}\n                data={this.state.data}\n                url={this.state.url}\n              />\n            </Grid>\n          </Grid>\n        </div>\n\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n          open={this.state.snackBarVisibility}\n          onClose={this.handleRequestClose}\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\n          message={<span id=\"message-id\">{this.state.snackBarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"secondary\"\n              style={styleSheet.close}\n              onClick={this.handleRequestClose}\n            >\n              {\" \"}\n              <CloseIcon />{\" \"}\n            </IconButton>,\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nconst styleSheet = {\n  root: {\n    width: \"29%\",\n    height: \"100%\",\n    float: \"left\",\n  },\n  headerClass: {\n    fontWeight: \"bold\",\n  },\n  button: {\n    margin: 5,\n    float: \"right\",\n  },\n  topMargin: {\n    margin: 5,\n    marginTop: 5 * 5,\n  },\n  cardGroups: {\n    flexGrow: 1,\n  },\n};\n","import React, { Component } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport FeatureDiscoveryPrompt from \"./FeatureDiscoveryPrompt/FeatureDiscoveryPrompt\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport default class RightPaneChips extends Component {\n  constructor(props) {\n    super(props);\n\n    // rows = number of rows in response\n    // totalRows = number of rows in query result (i.e. full result count)\n    // rowLimit = user set row limit\n    // maxRows = app wide limit on max value for rowLimit\n    this.state = {\n      rows: props.rows ? props.rows : 0,\n      totalRows: props.totalRows ? props.totalRows : 0,\n      rowLimit: props.rowLimit ? props.rowLimit : 2500,\n      maxRows: props.maxRows ? props.maxRows : 250000,\n      tip: \"Tip: Hold shift and click to multi-sort!\",\n      tip2: \"Increase row-limit for full result.\",\n      title2: \"\",\n      tip3: \"Use Batch Download option.\",\n      isTip1FdpOpen: false,\n      isTip2FdpOpen: false,\n      isTip3FdpOpen: false,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      rows: newProps.rows ? newProps.rows : 0,\n      totalRows: newProps.totalRows ? newProps.totalRows : 0,\n      rowLimit: newProps.rowLimit ? newProps.rowLimit : 2500,\n      maxRows: newProps.maxRows ? newProps.maxRows : 100000,\n    });\n  }\n  render() {\n    let rowCountChipLabel =\n      \"Displaying \" +\n      String(this.props.rows || 0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\n      \" rows\";\n    if (this.props.totalRows >= 0) {\n      rowCountChipLabel =\n        \"Displaying \" +\n        String(this.props.rows || 0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\n        \" of \" +\n        String(this.props.totalRows || 0).replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          \",\"\n        ) +\n        \" rows\";\n    }\n    return (\n      <div style={styleSheet.row}>\n        <FeatureDiscoveryPrompt\n          onClose={() => this.setState({ isTip1FdpOpen: false })}\n          open={this.state.isTip1FdpOpen}\n          backgroundColor={grey[600]}\n          title=\"Rows in Data Table\"\n          subtractFromTopPos={60}\n          opacity={0.95}\n          description=\"Keep track of rows count to ensure full query result is displayed. Increase 'Row-limit' and enable 'Get exact row count' option to ensure full result.\"\n        >\n          <Chip\n            color={\"secondary\"}\n            variant=\"outlined\"\n            label={rowCountChipLabel}\n            onMouseEnter={() => {\n              this.timer = setTimeout(() => {\n                this.setState({\n                  isTip1FdpOpen: true,\n                });\n              }, 250);\n            }}\n            onMouseLeave={() => {\n              this.setState({ isTip1FdpOpen: false });\n              clearTimeout(this.timer);\n            }}\n            key={1}\n            style={styleSheet.chip}\n          />\n        </FeatureDiscoveryPrompt>\n\n        {this.state.rows === this.state.rowLimit &&\n        this.state.rows !== this.state.maxRows ? (\n          <FeatureDiscoveryPrompt\n            onClose={() => this.setState({ isTip2FdpOpen: false })}\n            open={this.state.isTip2FdpOpen}\n            backgroundColor={grey[600]}\n            title=\"Increase Row-limit\"\n            subtractFromTopPos={75}\n            opacity={0.95}\n            description=\"A higher row-limit can show more rows of the query result.\"\n          >\n            <Chip\n              label={this.state.tip2}\n              key={3}\n              style={styleSheet.chip}\n              onClick={() => {\n                this.props.increaseRowLimit(this.state.maxRows);\n              }}\n              onMouseEnter={() => {\n                this.timer = setTimeout(() => {\n                  this.setState({\n                    isTip2FdpOpen: true,\n                  });\n                }, 250);\n              }}\n              onMouseLeave={() => {\n                this.setState({ isTip2FdpOpen: false });\n                clearTimeout(this.timer);\n              }}\n            />\n          </FeatureDiscoveryPrompt>\n        ) : (\n          <div />\n        )}\n        {this.state.rows === this.state.maxRows ? (\n          <FeatureDiscoveryPrompt\n            onClose={() => this.setState({ isTip3FdpOpen: false })}\n            open={this.state.isTip3FdpOpen}\n            backgroundColor={grey[600]}\n            title=\"Batch Download Option\"\n            subtractFromTopPos={75}\n            opacity={0.95}\n            description=\"Can download data in batches when the full query result contains more than 2.5 million rows.\"\n          >\n            <Chip\n              label={this.state.tip3}\n              key={2}\n              color=\"secondary\"\n              variant=\"outlined\"\n              style={styleSheet.chip}\n              onMouseEnter={() => {\n                this.timer = setTimeout(() => {\n                  this.setState({\n                    isTip3FdpOpen: true,\n                  });\n                }, 250);\n              }}\n              onMouseLeave={() => {\n                this.setState({ isTip3FdpOpen: false });\n                clearTimeout(this.timer);\n              }}\n            />\n          </FeatureDiscoveryPrompt>\n        ) : (\n          <div />\n        )}\n        <Chip label={this.state.tip} key={4} style={styleSheet.chip} />\n      </div>\n    );\n  }\n}\n\nconst styleSheet = {\n  chip: {\n    margin: 5,\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    flexWrap: \"wrap\",\n    marginTop: -30,\n    marginRight: \"1%\",\n  },\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport axiosCancel from \"axios-cancel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { SubmitButton } from \"./SubmitButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport DataTable from \"./DataTable.js\";\nimport RightPaneChips from \"./RightPaneChips.js\";\n\nimport \"../styles/QueryBuilder.css\";\nimport { ListItemIcon } from \"@material-ui/core\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport amber from '@material-ui/core/colors/amber';\n\n\nlet lib = require(\"../utils/library.ts\");\nconst defaultRules = lib.getQBRules();\n\nconst timeout = 2000;\nconst maxRowsInOutput = 250000;\n\naxiosCancel(axios, {\n  debug: false, // default\n});\n\nexport default class RightPane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      table: props.table,\n      columns: props.columns,\n      visibleColumns: props.visibleColumns,\n      leftPaneVisibility: props.leftPaneVisibility,\n      rules: null,\n      rulesFromHistoryPane: null,\n      submitLoading: false,\n      submitError: false,\n      submitSuccess: false,\n      rows: null,\n      exactRowCount: this.props.exactCount || false,\n      snackBarVisibility: false,\n      snackBarMessage: \"Unknown error occured\",\n      rowLimit: Math.min(this.props.rowLimit, maxRowsInOutput) || 25000,\n      url: \"\",\n    };\n\n    this.handleRowLimitChange = this.handleRowLimitChange.bind(this);\n    this.handleGetExactRowCountToggle = this.handleGetExactRowCountToggle.bind(\n      this\n    );\n    this.handleSubmitButtonClickCancelQuery = this.handleSubmitButtonClickCancelQuery.bind(\n      this\n    );\n    this.handleSubmitButtonClick = this.handleSubmitButtonClick.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    // Get rid of the timer\n    clearTimeout(this.timer);\n    this.timer = null;\n\n    if (\n      newProps.rulesFromHistoryPane !== null &&\n      newProps.rulesFromHistoryPane !== undefined\n    ) {\n      // There is something the user wants to load...\n      const filters = lib.getQBFilters(\n        this.props.dbIndex,\n        this.state.table,\n        this.state.columns,\n        this.state.dbSchemaDefinitions\n      );\n      let rules = newProps.rulesFromHistoryPane;\n\n      this.setState({\n        rulesFromHistoryPane: rules,\n      });\n\n      // Rebuild if all columns exist in the current table list of column\n      if (this.checkIfRulesColumnsAreInStateTableColumns(rules)) {\n        window.$(this.refs.queryBuilder).queryBuilder(\"destroy\");\n        window\n          .$(this.refs.queryBuilder)\n          .queryBuilder({ filters, rules, plugins: [\"not-group\"] });\n\n        //commenting this out ensures the item loads everytime\n        // the problem is if current table has the column names, then it will set it to null. When the actual table is laoded, it sets to blank rules ... so if you switch from GO to Domain annotation table, the rule won't load if the column is protein_id .. which exists in both tables..\n        this.props.changeRules(null);\n      } else {\n        window.$(\n          this.refs.queryBuilder\n        ).queryBuilder.constructor.DEFAULTS.operators = lib.getQBOperators();\n        window.$(\n          this.refs.queryBuilder\n        ).queryBuilder.constructor.DEFAULTS.lang = lib.getQBLang();\n        window.$(this.refs.queryBuilder).queryBuilder(\"destroy\");\n        window\n          .$(this.refs.queryBuilder)\n          .queryBuilder({ filters, defaultRules, plugins: [\"not-group\"] });\n      }\n    } else {\n      this.setState({\n        rulesFromHistoryPane: null,\n      });\n    }\n\n    if (\n      newProps.visibleColumns !== undefined &&\n      this.props.dbIndex === newProps.dbIndex &&\n      this.state.table === newProps.table &&\n      this.state.columns === newProps.columns &&\n      this.state.leftPaneVisibility === newProps.leftPaneVisibility\n    ) {\n      this.setState({\n        visibleColumns: newProps.visibleColumns,\n      });\n    } else if (this.state.leftPaneVisibility !== newProps.leftPaneVisibility) {\n      this.setState({\n        leftPaneVisibility: newProps.leftPaneVisibility,\n      });\n    } else if (this.props.dbIndex !== newProps.dbIndex) {\n      this.setState(\n        {\n          dbSchemaDefinitions: newProps.dbSchemaDefinitions,\n          table: \"\",\n          columns: [],\n          visibleColumns: [],\n          leftPaneVisibility: true,\n          rules: null,\n          submitLoading: true,\n          submitError: false,\n          submitSuccess: false,\n          rawData: [],\n          rows: null,\n        },\n        () => {\n          this.rebuildQueryBuilder(\n            this.refs.queryBuilder,\n            newProps.dbIndex,\n            newProps.table,\n            newProps.columns\n          );\n          let url =\n            lib.getDbConfig(this.props.dbIndex, \"url\") + \"/\" + this.state.table;\n          this.setState({ url: url + \"?limit=10\" });\n          if (this.state.table !== \"\") {\n            this.fetchOutput(url + \"?limit=10\", true);\n          }\n        }\n      );\n    } else {\n      this.setState(\n        {\n          dbSchemaDefinitions: newProps.dbSchemaDefinitions,\n          table: newProps.table,\n          columns: newProps.columns,\n          visibleColumns: newProps.visibleColumns,\n          leftPaneVisibility: newProps.leftPaneVisibility,\n          rules: null,\n          submitLoading: false,\n          submitError: false,\n          submitSuccess: false,\n          rawData: [],\n          rows: null,\n        },\n        () => {\n          this.rebuildQueryBuilder(\n            this.refs.queryBuilder,\n            newProps.dbIndex,\n            newProps.table,\n            newProps.columns,\n            newProps.dbSchemaDefinitions\n          );\n          let url =\n            lib.getDbConfig(this.props.dbIndex, \"url\") + \"/\" + this.state.table;\n          this.setState({ url: url + \"?limit=10\" });\n          if (this.state.table !== \"\") {\n            this.fetchOutput(url + \"?limit=10\", true);\n          }\n        }\n      );\n    }\n  }\n\n  componentDidMount() {\n    const element = this.refs.queryBuilder;\n    this.initializeQueryBuilder(element);\n  }\n\n  componentWillUnmount() {\n    window.$(this.refs.queryBuilder).queryBuilder(\"destroy\");\n    axios.cancel(\"qbAxiosReq\");\n    axios.cancelAll();\n  }\n\n  // Creates the QB on first render with default table (error msg for now)\n  initializeQueryBuilder(element, newRules = null) {\n    try {\n      window.$(\n        this.refs.queryBuilder\n      ).queryBuilder.constructor.DEFAULTS.operators = lib.getQBOperators();\n      window.$(\n        this.refs.queryBuilder\n      ).queryBuilder.constructor.DEFAULTS.lang = lib.getQBLang();\n\n      const filters = lib.getQBFilters(\n        this.props.dbIndex,\n        this.state.table,\n        this.state.columns,\n        this.state.dbSchemaDefinitions\n      );\n      const rules = newRules ? newRules : defaultRules;\n\n      window\n        .$(element)\n        .queryBuilder({ filters, rules, plugins: [\"not-group\"] });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Destroys the old one, and creates a new QB based on the selected view's attributes\n  rebuildQueryBuilder(\n    element,\n    dbIndex,\n    table,\n    columns,\n    dbSchemaDefinitions,\n    newRules = this.state.rulesFromHistoryPane\n  ) {\n    window.$(this.refs.queryBuilder).queryBuilder(\"destroy\");\n    window.$(\n      this.refs.queryBuilder\n    ).queryBuilder.constructor.DEFAULTS.operators = lib.getQBOperators();\n    window.$(\n      this.refs.queryBuilder\n    ).queryBuilder.constructor.DEFAULTS.lang = lib.getQBLang();\n    const rules = newRules ? newRules : defaultRules;\n    const filters = lib.getQBFilters(\n      dbIndex,\n      table,\n      columns,\n      dbSchemaDefinitions\n    );\n\n    this.setState({\n      qbFilters: filters,\n    });\n\n    if (\n      newRules !== null &&\n      newRules !== undefined &&\n      this.checkIfRulesColumnsAreInStateTableColumns(rules)\n    ) {\n      window\n        .$(element)\n        .queryBuilder({ filters, rules, plugins: [\"not-group\"] });\n\n      //commenting this out ensures the item loads everytime\n      // the problem is if current table has the column names, then it will set it to null. When the actual table is laoded, it sets to blank rules ... so if you switch from GO to Domain annotation table, the rule won't load if the column is protein_id .. which exists in both tables..\n      this.props.changeRules(null);\n    } else {\n      window\n        .$(element)\n        .queryBuilder({ filters, defaultRules, plugins: [\"not-group\"] });\n    }\n  }\n\n  recursiveColumnNameExtraction(rules) {\n    let columnNames = [];\n    for (let i = 0; i < rules.length; i++) {\n      let potentialName = rules[i][\"field\"];\n      if (potentialName !== null && potentialName !== undefined) {\n        columnNames.push(potentialName);\n      } else {\n        // Check if it's a GROUP by looking for \"condition\" key\n        if (rules[i][\"condition\"] === \"AND\" || rules[i][\"condition\"] === \"OR\") {\n          let subGroupColumns = this.recursiveColumnNameExtraction(\n            rules[i][\"rules\"]\n          );\n          for (let ii = 0; ii < subGroupColumns.length; ii++) {\n            if (\n              subGroupColumns[ii] !== null &&\n              subGroupColumns[ii] !== undefined\n            ) {\n              columnNames.push(subGroupColumns[ii]);\n            }\n          }\n        }\n      }\n    }\n    return columnNames;\n  }\n\n  // Returns true if the QB rules are safe to use\n  checkIfRulesColumnsAreInStateTableColumns(rawRules) {\n    // Create a list of columns found in the rules user wants to load\n    let columnsInNewQBRules = lib.arrNoDup(\n      this.recursiveColumnNameExtraction(rawRules[\"rules\"])\n    );\n\n    // Check if ALL the columns are existing in the current table's columns\n    let allRulesColumnsInColumnsArray = true;\n    for (let i = 0; i < columnsInNewQBRules.length; i++) {\n      if (lib.inArray(columnsInNewQBRules[i], this.state.columns) === false) {\n        allRulesColumnsInColumnsArray = false;\n      }\n    }\n    return allRulesColumnsInColumnsArray;\n  }\n\n  // Extracts the rules recursively\n  recursiveRulesExtraction(notPrefix, condition, rules) {\n    let select = notPrefix + condition.toLowerCase() + \"(\";\n    for (let i = 0; i < rules.length; i++) {\n      // iterating over the first rules\n      let notPrefixLocal = rules[i][\"not\"] === true ? \"not.\" : \"\";\n\n      if (rules[i][\"condition\"] === \"OR\" || rules[i][\"condition\"] === \"AND\") {\n        if (i === rules.length - 1) {\n          select += this.recursiveRulesExtraction(\n            notPrefixLocal,\n            rules[i][\"condition\"],\n            rules[i][\"rules\"]\n          );\n        } else {\n          select +=\n            this.recursiveRulesExtraction(\n              notPrefixLocal,\n              rules[i][\"condition\"],\n              rules[i][\"rules\"]\n            ) + \",\";\n        }\n      } else {\n        let containsWildCards =\n          rules[i][\"operator\"] === \"contains\"\n            ? rules[i][\"value\"].indexOf(\"*\") === -1\n              ? \"*\"\n              : \"\"\n            : \"\"; // equals * only when user forgets to have at least 1 * in the value input box\n\n        // For when left and right brakcets are needed\n        let leftBracket = rules[i][\"operator\"] === \"in\" ? \"(\" : \"\";\n        let rightBracket = rules[i][\"operator\"] === \"in\" ? \")\" : \"\";\n\n        // Add quotes when special chars are detected when using the 3 specific operators\n        let containsSpecialChars = \"\";\n        if (\n          rules[i][\"operator\"] === \"contains\" ||\n          rules[i][\"operator\"] === \"equal\" ||\n          rules[i][\"operator\"] === \"not_equal\"\n        ) {\n          let regexContainsSpecialChars = /\\W/g;\n          containsSpecialChars = regexContainsSpecialChars.test(\n            rules[i][\"value\"]\n          )\n            ? '\"'\n            : \"\";\n        }\n\n        if (i === rules.length - 1) {\n          select +=\n            rules[i][\"id\"] +\n            \".\" +\n            lib.translateOperatorToPostgrest(rules[i][\"operator\"]) +\n            \".\" +\n            containsSpecialChars +\n            containsWildCards +\n            leftBracket +\n            rules[i][\"value\"] +\n            rightBracket +\n            containsWildCards +\n            containsSpecialChars;\n        } else {\n          select +=\n            rules[i][\"id\"] +\n            \".\" +\n            lib.translateOperatorToPostgrest(rules[i][\"operator\"]) +\n            \".\" +\n            containsSpecialChars +\n            containsWildCards +\n            leftBracket +\n            rules[i][\"value\"] +\n            rightBracket +\n            containsWildCards +\n            containsSpecialChars +\n            \",\";\n        }\n      }\n    }\n    select += \")\";\n    return select;\n  }\n\n  // Based on the extracted rules, it builds a PostgREST compliant URL for API call\n  buildURLFromRules(rules) {\n    let url =\n      lib.getDbConfig(this.props.dbIndex, \"url\") + \"/\" + this.state.table;\n\n    // if it is valid, proceed\n    if (rules && rules[\"valid\"] && rules[\"valid\"] === true) {\n      url += \"?\";\n\n      let notPrefix = \"\";\n      if (rules[\"not\"] === true) {\n        notPrefix = \"not.\";\n      }\n\n      let firstCondition = rules[\"condition\"];\n      let firstRules = rules[\"rules\"];\n\n      let conds = this.recursiveRulesExtraction(\n        notPrefix,\n        firstCondition + \"=\",\n        firstRules\n      );\n      url += conds;\n      url += \"&limit=\" + this.state.rowLimit;\n\n      // Add SELECT columns... i.e. which columsn to retrieve\n      //url += \"&select=\" + this.state.selectColumns;\n    } else {\n      /* else if (this.state.selectColumns !== null && this.state.selectColumns !== [] && this.state.selectColumns !== \"\") {\n                // Add SELECT columns... but this time, only selected columns, NO FILTERS\n                url += \"?select=\" + this.state.selectColumns;\n            }*/\n      url += \"?limit=\" + this.state.rowLimit;\n      // TODO: display a Snack bar showing an error!!!\n      this.setState(\n        {\n          snackBarVisibility: true,\n          snackBarMessage: \"Incomplete query\",\n        },\n        () => {\n          this.timer = setTimeout(() => {\n            this.setState({\n              snackBarVisibility: false,\n              snackBarMessage: \"Unknown error\",\n            });\n          }, 2500);\n        }\n      );\n    }\n\n    // Send updated URL to the HistoryPane\n    this.props.addToHistory(url, rules);\n\n    return url;\n  }\n\n  fetchOutput(url, skipFullCount = false) {\n    // Get rid of the timer\n    clearTimeout(this.timer);\n    this.timer = null;\n    let preparedHeaders = {};\n    if (this.state.exactRowCount === true && skipFullCount === false) {\n      preparedHeaders[\"Prefer\"] = \"count=exact\";\n    } else {\n      preparedHeaders[\"Prefer\"] = \"count=estimated\";\n    }\n\n    if (this.props.isLoggedIn && this.props.token) {\n      preparedHeaders[\"Authorization\"] = \"Bearer \" + this.props.token;\n    }\n    axios\n      .get(url, {\n        headers: preparedHeaders,\n        requestId: \"qbAxiosReq\",\n        //withCredentials: false,\n      })\n      .then((response) => {\n        let responseRows = null;\n        let totalRows = null;\n        if (\n          response.headers[\"content-range\"] !== undefined &&\n          response.headers[\"content-range\"] !== null\n        ) {\n          responseRows =\n            1 +\n            parseInt(\n              response.headers[\"content-range\"]\n                .replace(\"/*\", \"\")\n                .replace(\"0-\", \"\"),\n              10\n            );\n          totalRows = parseInt(\n            response.headers[\"content-range\"].replace(/0-\\d*\\//, \"\"),\n            10\n          );\n        }\n\n        this.setState(\n          {\n            rawData: response.data,\n            rows: responseRows,\n            totalRows: totalRows,\n            submitLoading: false,\n            submitError: false,\n            submitSuccess: true,\n          },\n          () => {\n            this.timer = setTimeout(() => {\n              this.setState({\n                submitLoading: false,\n                submitSuccess: false,\n                submitError: false,\n              });\n            }, timeout);\n          }\n        );\n      })\n      .catch((error) => {\n        console.error(\"HTTP Req:\", error);\n        this.setState(\n          {\n            rawData: [],\n            rows: null,\n            submitLoading: false,\n            submitSuccess: true,\n            submitError: true, // both true implies request successfully reported an error\n          },\n          () => {\n            this.timer = setTimeout(() => {\n              this.setState({\n                submitLoading: false,\n                submitSuccess: false,\n                submitError: false,\n              });\n            }, timeout);\n          }\n        );\n      });\n  }\n\n  handleSubmitButtonClickCancelQuery() {\n    axios.cancel(\"qbAxiosReq\");\n    axios.cancelAll();\n  }\n\n  // Allows NewRow.js to insert a new row to state.rawData\n  insertNewRow = (row) => {\n    let data = this.state.rawData;\n    data.splice(0, 0, row[0]);\n    this.setState({\n      rawData: data,\n    });\n  };\n\n  handleSubmitButtonClick = (e) => {\n    // Get rid of the timer\n    clearTimeout(this.timer);\n    this.timer = null;\n\n    //event.stopPropagation();\n    // first show loading\n    this.setState(\n      {\n        rawData: [],\n        rows: 0,\n        submitLoading: true,\n        submitError: false,\n        submitSuccess: false,\n      },\n      () => {\n        let rules = null;\n        try {\n          rules = window.$(this.refs.queryBuilder).queryBuilder(\"getRules\");\n        } catch (e) {\n          console.error(e.toString());\n        }\n\n        this.setState({ rules: rules }, () => {\n          let url = this.buildURLFromRules(rules);\n          this.fetchOutput(url);\n          this.setState({ url: url });\n        });\n        return rules;\n      }\n    );\n  };\n\n  increaseRowLimit = () => {\n    let pseudoEvent = {};\n    pseudoEvent[\"target\"] = {};\n    pseudoEvent[\"target\"][\"value\"] = maxRowsInOutput;\n    this.handleRowLimitChange(pseudoEvent);\n  };\n\n  handleRequestClose = () => {\n    this.setState({ snackBarVisibility: false });\n  };\n\n  handleRowLimitChange(event) {\n    let newLimit = event.target.value;\n    if (newLimit <= 0) {\n      newLimit = 1;\n    } else if (newLimit > maxRowsInOutput) {\n      newLimit = maxRowsInOutput;\n    }\n\n    this.setState({ rowLimit: parseInt(newLimit, 10) });\n  }\n\n  handleGetExactRowCountToggle() {\n    this.setState(\n      {\n        exactRowCount: !this.state.exactRowCount,\n      } /*, () => {\n\t\t\tthis.createFileName();\n\t\t}*/\n    );\n  }\n  handleCopyUrlToClipboard() {\n    //based on https://stackoverflow.com/a/12693636\n    const str = this.state.url;\n    document.oncopy = function (event) {\n      if (event && event.clipboardData) {\n        event.clipboardData.setData(\"Text\", str);\n        event.preventDefault();\n      }\n    };\n    let copySuccess = document.execCommand(\"Copy\");\n    document.oncopy = null;\n    this.setState(\n      {\n        snackBarVisibility: true,\n        snackBarMessage: \"Link copied!\",\n      },\n      () => {\n        this.timer = setTimeout(() => {\n          this.setState({\n            snackBarVisibility: false,\n            snackBarMessage: \"Unknown error\",\n          });\n        }, 2500);\n      }\n    );\n    return copySuccess;\n  }\n  render() {\n    let tableRename = lib.getTableConfig(\n      this.props.dbIndex,\n      this.state.table,\n      \"rename\"\n    );\n    let tableDisplayName = tableRename ? tableRename : this.state.table;\n\n    let tableDescription = lib.getTableConfig(\n      this.props.dbIndex,\n      this.props.table,\n      \"description\"\n    )\n      ? lib.getTableConfig(this.props.dbIndex, this.props.table, \"description\")\n      : \"\";\n\n    let hideClass = this.state.table ? \"\" : styleSheet.hide;\n    let leftMarginClass =\n      this.state.leftPaneVisibility === true\n        ? styleSheet.root\n        : { ...styleSheet.root, ...styleSheet.rootInvisibleLeft };\n    let paperClasses = { ...hideClass, ...leftMarginClass };\n\n    return (\n      <div style={styleSheet.middlePaperSection}>\n        <Paper style={paperClasses} elevation={5}>\n          <CardHeader title={tableDisplayName} subheader={tableDescription} />\n\n          <Typography type=\"subtitle1\" style={styleSheet.cardMarginLeftTop}>\n            Query Builder\n          </Typography>\n          <div id=\"query-builder\" ref=\"queryBuilder\" />\n\n          <Paper className=\"query-builder\" elevation={1}>\n            <Tooltip\n              id=\"tooltip-bottom\"\n              title={\"Copy query link\"}\n              placement=\"bottom\"\n            >\n              <ListItemIcon\n                style={{ margin: \"16px\" }}\n                onClick={this.handleCopyUrlToClipboard.bind(this)}\n              >\n                <LinkIcon />\n              </ListItemIcon>\n            </Tooltip>\n            <div style={{ textAlign: \"center\", padding: \"16px\", overflow: \"auto\" }}>{this.state?.url}</div>\n          </Paper>\n\n          <Typography type=\"body1\" style={styleSheet.cardMarginLeftTop}>\n            Options\n          </Typography>\n\n          <Grid container spacing={10} alignItems={\"center\"}>\n            <Grid item sm={10} md={5}>\n              {/* ROW LIMIT INPUT BOX */}\n              <Tooltip\n                id=\"tooltip-bottom\"\n                title={\n                  \"Max limit is 250,000 rows. Use Batch Download option for more.\"\n                }\n                placement=\"bottom\"\n              >\n                <TextField\n                  required\n                  id=\"rowLimit\"\n                  type=\"number\"\n                  label=\"Row-limit\"\n                  value={this.state.rowLimit.toString()}\n                  style={styleSheet.rowLimitTextField}\n                  margin=\"normal\"\n                  onChange={this.handleRowLimitChange}\n                />\n              </Tooltip>\n            </Grid>\n\n            <Grid item sm={10} md={5}>\n              {/* EXACT COUNT CHECK BOX */}\n              <FormControlLabel\n                style={styleSheet.cardMarginLeft}\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    onChange={this.handleGetExactRowCountToggle}\n                    value=\"getExactRowCount\"\n                  />\n                }\n                checked={this.state.exactRowCount}\n                label={\"Get exact row count\"}\n              />\n            </Grid>\n\n            <Grid item sm={2} md={2}>\n              {/* SUBMIT FLOATING ACTION BUTTON (FAB) */}\n              <div\n                title=\"Run Query\"\n                onClick={this.handleSubmitButtonClickCancelQuery}\n              >\n                <SubmitButton\n                  dbIndex={this.props.dbIndex}\n                  table={this.state.table}\n                  leftPaneVisibility={this.state.leftPaneVisibility}\n                  getRules={this.handleSubmitButtonClick}\n                  loading={this.state.submitLoading}\n                  success={this.state.submitSuccess}\n                  error={this.state.submitError}\n                />\n              </div>\n            </Grid>\n          </Grid>\n\n          <Typography type=\"subtitle1\" style={styleSheet.cardMarginLeftTop}>\n            Query Results\n          </Typography>\n\n          <RightPaneChips\n            rows={this.state.rows}\n            totalRows={this.state.totalRows}\n            rowLimit={this.state.rowLimit}\n            maxRows={maxRowsInOutput}\n            increaseRowLimit={this.increaseRowLimit}\n          />\n\n          <div style={styleSheet.cardMarginLeftRightTop}>\n            <DataTable\n              {...this.props}\n              table={this.state.table}\n              columns={\n                this.state.visibleColumns\n                  ? this.state.visibleColumns\n                  : this.state.columns\n              }\n              allColumns={this.state.columns}\n              data={this.state.rawData}\n              qbFilters={this.state.qbFilters}\n              url={this.state.url}\n              totalRows={this.state.totalRows}\n              insertNewRow={this.insertNewRow}\n              noDataText={\n                this.state.submitLoading\n                  ? \"Loading ...\"\n                  : this.state.submitError\n                    ? \"Query error\"\n                    : this.state.submitSuccess\n                      ? \"Success!\"\n                      : \"No rows found\"\n              }\n            />\n          </div>\n        </Paper>\n\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n          open={this.state.snackBarVisibility}\n          onClose={this.handleRequestClose}\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\n          message={<span id=\"message-id\">{this.state.snackBarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"secondary\"\n              style={styleSheet.close}\n              onClick={this.handleRequestClose}\n            >\n              {\" \"}\n              <CloseIcon />{\" \"}\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nlet styleSheet = {\n  root: {\n    paddingBottom: 50,\n    marginLeft: \"30%\",\n    marginBottom: \"2%\",\n    transition: \"all 0.25s\",\n  },\n  rootInvisibleLeft: {\n    paddingBottom: 50,\n    marginLeft: \"1%\",\n  },\n  middlePaperSection: {\n    width: \"99%\",\n    height: \"100%\",\n    marginTop: 75,\n  },\n  cardMarginLeft: {\n    // For items within the same section\n    marginLeft: 32,\n  },\n  cardMarginLeftRightTop: {\n    marginLeft: 16,\n    marginTop: 16,\n    marginRight: 6,\n  },\n  cardMarginLeftTop: {\n    // For a new section\n    marginLeft: 16,\n    marginTop: 32, // want a bit more space at top to clearly indicate new section...\n  },\n  rowLimitTextField: {\n    marginLeft: 32,\n    marginRight: 5,\n    width: 300,\n  },\n  hide: {\n    opacity: 0.0,\n    marginTop: 75,\n    visibility: \"hidden\",\n  },\n  noStyleButton: {\n    border: \"none\",\n    fill: amber[700],\n  },\n};\n","import 'typeface-roboto';\nimport '../styles/index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { INITIAL_ROW_LIMIT } from '../data/constants';\nimport { IConfigDatabase } from '../data/models/configModel';\nimport Auth from './Auth.js';\nimport HistoryPane from './HistoryPane';\nimport { LeftPane } from './LeftPane';\nimport Navigation from './Navigation.js';\nimport RightPane from './RightPane.js';\n\n\nlet lib = require(\"../utils/library.ts\");\nlet auth: Nullable<Auth> = null;\ninterface IAppProps {}\n\ninterface IAppState {\n  dbIndex: number;\n  table: string;\n  rowLimit: number;\n  exactCount: boolean;\n  rulesFromURL: Nullable<string>;\n  rulesFromHistoryPane: Nullable<string>;\n  columns: Array<string>;\n  newHistoryItem: Array<string>;\n  visibleColumns: Array<string>;\n  leftPaneVisibility: boolean;\n  historyPaneVisibility: boolean;\n  searchTerm: string;\n  dbSchemaDefinitions: Nullable<string>;\n  dbPkInfo: Nullable<string>;\n  userName: string;\n  token: Nullable<string>;\n  isLoggedIn: boolean;\n}\n\nexport default class Layout extends React.Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n\n    // Parse URL\n    let parsedURL = this.parseURL();\n\n    this.state = {\n      dbIndex: parsedURL[\"db\"] || 0,\n      table: parsedURL[\"table\"] || \"\",\n      rowLimit: parsedURL[\"rowLimit\"] || INITIAL_ROW_LIMIT,\n      exactCount: parsedURL[\"exactCount\"] || false,\n      rulesFromURL: parsedURL[\"urlRules\"] || null,\n      rulesFromHistoryPane: null,\n      columns: [],\n      newHistoryItem: [],\n      visibleColumns: [],\n      leftPaneVisibility: true,\n      historyPaneVisibility: false,\n      searchTerm: \"\",\n      dbSchemaDefinitions: null,\n      dbPkInfo: null,\n      userName: \"Unknown username\",\n      token: null,\n      isLoggedIn: false\n    };\n\n    auth = new Auth(parsedURL[\"db\"] || 0);\n\n    this.setUserEmailPassword = this.setUserEmailPassword.bind(this);\n    this.toggleLeftPane = this.toggleLeftPane.bind(this);\n    this.toggleHistoryPane = this.toggleHistoryPane.bind(this);\n    this.changeSearchTerm = this.changeSearchTerm.bind(this);\n    this.changeDbIndex = this.changeDbIndex.bind(this);\n    this.changeColumns = this.changeColumns.bind(this);\n    this.changeDbSchemaDefinitions = this.changeDbSchemaDefinitions.bind(this);\n    this.changeDbPkInfo = this.changeDbPkInfo.bind(this);\n    this.changeVisibleColumns = this.changeVisibleColumns.bind(this);\n    this.addToHistory = this.addToHistory.bind(this);\n    this.closeHistoryPane = this.closeHistoryPane.bind(this);\n    this.changeTable = this.changeTable.bind(this);\n    this.changeRules = this.changeRules.bind(this);\n  }\n\n  // This should be called once, when app loads, to load a shared query via URL\n  parseURL() {\n    let url: string = \"\" + window.location.href;\n\n    let databaseRx: RegExp = /\\/db\\/\\d\\//g;\n    let tableRx: RegExp = /\\/table\\/\\w+\\/?/g;\n    let queryRx: RegExp = /query=.*/g;\n    let rowLimitRx: RegExp = /rowLimit=\\d+/g;\n    let exactCountRx: RegExp = /exactCount=True|exactCount=False/g;\n\n    // Extract the db\n    let dbExecResults: Nullable<RegExpExecArray> = databaseRx.exec(url);\n    let db: number;\n    if (dbExecResults) {\n      db = parseInt(\n        dbExecResults[0].replace(/\\/db\\//g, \"\").replace(/\\//g, \"\"),\n        10\n      );\n    } else {\n      db = 0;\n    }\n\n    // Confirm DB exists\n    let databasesMapped: Array<string> = [];\n    lib\n      .getValueFromConfig(\"databases\")\n      .map(\n        (obj: IConfigDatabase, index: number) =>\n          (databasesMapped[index] = obj.title || \"Untitled database\")\n      );\n    if (!databasesMapped[db]) {\n      db = 0;\n    }\n\n    // Extract the table\n    let tableExecResults: Nullable<RegExpExecArray> = tableRx.exec(url);\n    let table: Nullable<string>;\n\n    if (tableExecResults) {\n      table = tableExecResults[0].replace(/\\/table\\//g, \"\").replace(/\\//g, \"\");\n    } else {\n      table = null;\n    }\n\n    // Extract the query\n    let queryExecResults: Nullable<RegExpExecArray> = queryRx.exec(url);\n    let query: Nullable<string>;\n    if (queryExecResults) {\n      query = queryExecResults[0].replace(\"query=\", \"\");\n      query = decodeURIComponent(query);\n      if (query) {\n        query = JSON.parse(query);\n      }\n    } else {\n      query = null;\n    }\n\n    // Extract the rowLimit\n    let rowLimitExecResults: Nullable<RegExpExecArray> = rowLimitRx.exec(url);\n    let rowLimit: Nullable<number>;\n    if (rowLimitExecResults) {\n      rowLimit = parseInt(rowLimitExecResults[0].replace(/rowLimit=/g, \"\"), 10);\n    } else {\n      rowLimit = null;\n    }\n\n    // Extract the exactCount\n    let exactCountExecResults: Nullable<RegExpExecArray> = exactCountRx.exec(\n      url\n    );\n    let exactCount: boolean;\n    if (exactCountExecResults) {\n      exactCount =\n        exactCountExecResults[0].replace(/exactCount=/g, \"\") === \"True\";\n    } else {\n      exactCount = false;\n    }\n\n    return {\n      db: db,\n      table: table,\n      urlRules: query,\n      rowLimit: rowLimit,\n      exactCount: exactCount\n    };\n  }\n\n  toggleLeftPane() {\n    this.setState({\n      leftPaneVisibility: !this.state.leftPaneVisibility\n    });\n  }\n\n  toggleHistoryPane() {\n    this.setState({\n      historyPaneVisibility: !this.state.historyPaneVisibility\n    });\n  }\n\n  closeHistoryPane() {\n    this.setState({\n      historyPaneVisibility: false\n    });\n  }\n\n  changeDbIndex(newIndex: number) {\n    this.setState({\n      dbIndex: newIndex,\n      isLoggedIn: false,\n      token: null,\n      userName: \"Unknown username\"\n    });\n\n    if (auth) {\n      auth.setDb(newIndex);\n\n      // Get new token usign existing credentials. Otherwise log out the user\n      auth.getUserDetails().then(resp => {\n        if (resp.isLoggedIn) {\n          this.setState({\n            token: resp.jwtToken,\n            userName: resp.name,\n            isLoggedIn: true\n          });\n        } else {\n          this.setState({\n            isLoggedIn: false,\n            token: null,\n            userName: \"Unknown username\"\n          });\n        }\n      });\n    }\n  }\n\n  changeSearchTerm(newTerm: string) {\n    this.setState({ searchTerm: newTerm });\n  }\n\n  changeTable(newTable: string) {\n    this.setState({\n      table: newTable\n    });\n  }\n\n  changeRules(newRules: string) {\n    this.setState({\n      rulesFromHistoryPane: newRules\n    });\n  }\n\n  changeDbSchemaDefinitions(newDefinitions: string) {\n    this.setState({\n      dbSchemaDefinitions: newDefinitions\n    });\n  }\n\n  changeDbPkInfo(pkInfo: string) {\n    this.setState({\n      dbPkInfo: pkInfo\n    });\n  }\n\n  changeColumns(newColumns: Array<string>) {\n    this.setState({\n      columns: newColumns\n    });\n  }\n\n  addToHistory(newUrl: string, newRules: string) {\n    this.setState({\n      newHistoryItem: [newUrl.replace(/\\?limit=\\d*/g, \"\"), newRules]\n    });\n  }\n\n  changeVisibleColumns(newVisibleColumns: Array<string>) {\n    this.setState({\n      visibleColumns: newVisibleColumns\n    });\n  }\n\n  handleLogoutClick = () => {\n    if (auth) {\n      auth.logout();\n    }\n    this.setState({\n      token: null,\n      userName: \"Unknown username\",\n      isLoggedIn: false\n    });\n  };\n\n  setUserEmailPassword(email: string, password: string) {\n    if (auth) {\n      auth.setCredentials(email, password);\n      auth.getUserDetails().then(resp => {\n        if (resp.isLoggedIn) {\n          this.setState({\n            token: resp.jwtToken,\n            userName: resp.name,\n            isLoggedIn: true\n          });\n        } else {\n          this.setState({\n            isLoggedIn: false,\n            token: null,\n            userName: \"Unknown username\"\n          });\n        }\n        if (\n          this.state.rulesFromURL &&\n          lib.getDbConfig(this.state.dbIndex, \"publicDbAcessType\") ===\n            \"private\" &&\n          resp.isLoggedIn\n        ) {\n          this.changeRules(this.state.rulesFromURL);\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (\n      this.state.rulesFromURL &&\n      lib.getDbConfig(this.state.dbIndex, \"publicDbAcessType\") !== \"private\"\n    ) {\n      this.changeRules(this.state.rulesFromURL);\n      // setTimeout( ()=> {\n      // \thistory.pushState('Shared Query', 'Shared Query', 'https://localhost:3000/');\n      // }, 1000);\n    }\n\n    // TRY TO GET a token usign existing credentials\n    if (auth) {\n      auth.getUserDetails().then(resp => {\n        if (resp.isLoggedIn) {\n          this.setState({\n            token: resp.jwtToken,\n            userName: resp.name,\n            isLoggedIn: true\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    let publicDBStatus =\n      lib.getDbConfig(this.state.dbIndex, \"publicDbAcessType\") || \"read\";\n    return (\n      <>\n        <Navigation\n          {...this.state}\n          changeSearchTerm={this.changeSearchTerm}\n          toggleLeftPane={this.toggleLeftPane}\n          toggleHistoryPane={this.toggleHistoryPane}\n          setUserEmailPassword={this.setUserEmailPassword}\n          publicDBStatus={publicDBStatus}\n          handleLogoutClick={this.handleLogoutClick}\n        />\n\n        <div className=\"bodyDiv\">\n          <LeftPane\n            {...this.state}\n            changeSearchTerm={this.changeSearchTerm}\n            changeDbIndex={this.changeDbIndex}\n            changeTable={this.changeTable}\n            changeColumns={this.changeColumns}\n            changeDbSchemaDefinitions={this.changeDbSchemaDefinitions}\n            changeDbPkInfo={this.changeDbPkInfo}\n            changeVisibleColumns={this.changeVisibleColumns}\n            publicDBStatus={publicDBStatus}\n          />\n          <RightPane\n            {...this.state}\n            changeRules={this.changeRules}\n            addToHistory={this.addToHistory}\n            publicDBStatus={publicDBStatus}\n          />\n          <HistoryPane\n            {...this.state}\n            closeHistoryPane={this.closeHistoryPane}\n            changeTable={this.changeTable}\n            changeRules={this.changeRules}\n            publicDBStatus={publicDBStatus}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nconst app = document.getElementById(\"root\");\nReactDOM.render(<Layout />, app);\n\n// Takes the query part of the URL used to make PostgREST API call and converts to an array object that can be traversed\n/*parseURLRules(urlQuery) {\n\t\tif (urlQuery === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\turlQuery = urlQuery.replace(/not.and=\\(/g, \"(not.and,\").replace(/not.or=\\(/g, \"(not.or,\");\n\t\turlQuery = urlQuery.replace(/not.and\\(/g, \"(not.and,\").replace(/not.or\\(/g, \"(not.or,\");\n\t\turlQuery = urlQuery.replace(/and=\\(/g, \"(and,\").replace(/or=\\(/g, \"(or,\");\n\t\turlQuery = urlQuery.replace(/and\\(/g, \"(and,\").replace(/or\\(/g, \"(or,\");\n\n\t\turlQuery = urlQuery.replace(/\\(/g, \"[\").replace(/\\)\\s/g, \"], \");\n\t\turlQuery = urlQuery.replace(/\\)/g, \"]\");\n\t\turlQuery = urlQuery.replace(/\\s+/, \", \");\n\t\turlQuery = \"[\" + urlQuery + \"]\";\n\t\turlQuery = urlQuery.replace(/[^[\\],\\s]+/g, \"\\\"$&\\\"\");\n\t\turlQuery = urlQuery.replace(/\" /g, \"\\\", \");\n\n\t\turlQuery = JSON.parse(urlQuery);\n\t\tif (urlQuery.length === 1 && urlQuery[0] instanceof Array) {\n\t\t\turlQuery = urlQuery[0];\n\t\t}\n\n\t\treturn this.recursiveRulesCreation(urlQuery);\n\t}*/\n\n// Takes a tranversable array object and converts to jQB compliant JSON object\n/*recursiveRulesCreation(arrayObj) {\n\t\tlet rules = {};\n\t\tlet rulesElement = [];\n\t\tfor (let i = 0; i < arrayObj.length; i++) {\n\t\t\tif (i === 0) {\n\t\t\t\t// Condition + Not + Valid\n\t\t\t\trules.condition = arrayObj[0].replace(\"not.\",\"\").toUpperCase();\n\t\t\t\trules.not = arrayObj[0].replace(\".and\", \"\").replace(\".or\", \"\") === \"not\";\n\t\t\t\trules.valid = true;\n\t\t\t} else {\n\t\t\t\t// Rules\n\t\t\t\tif (arrayObj[i] instanceof Array) {\n\t\t\t\t\trulesElement.push(this.recursiveRulesCreation(arrayObj[i]));\n\t\t\t\t} else {\n\t\t\t\t\tlet rule = arrayObj[i].split(\".\");\n\t\t\t\t\trulesElement.push({\n\t\t\t\t\t\tid: rule[0],\n\t\t\t\t\t\tfield: rule[0],\n\t\t\t\t\t\toperator: lib.translateOperatorTojQB(rule[1]),\n\t\t\t\t\t\tvalue: rule[2]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\trules.rules = rulesElement;\n\t\t\t}\n\t\t}\n\t\treturn rules;\n\t}*/\n","export const INITIAL_ROW_LIMIT = 10;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.tsx\";\n\nconst app = document.getElementById(\"root\");\nlet appState = {};\n\nwindow.setState = stateChange => {\n  appState = Object.assign({}, appState, stateChange);\n\n  ReactDOM.render(<App {...appState} />, app);\n};\n\n/* eslint no-restricted-globals: 0*/\nlet initialState = {\n  urlLocation: location.pathname.replace(/^\\/?|\\/$/g, \"\")\n};\n\nwindow.setState(initialState);\n","////////////////////////////////////////////////////////////////////////////////////////////////////\n// Config Methods\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Returns value of KEY from config file\nexport function getValueFromConfig(key: string) {\n  try {\n    let file, config;\n    file = require(\"../data/config.json\");\n    config = JSON.parse(JSON.stringify(file));\n    if (config[key] !== undefined) {\n      return config[key];\n    } else {\n      return null;\n    }\n  } catch (error) {\n    return null;\n  }\n}\n\n// Returns value of OPTION for specific TABLE and DBINDEX\n// NOTE: check for null value when this function is used\nexport function getDbConfig(dbIndex: number, option: string) {\n  if (dbIndex !== null && option !== null) {\n    try {\n      let dbConfig = getValueFromConfig(\"databases\");\n\n      if (dbConfig[dbIndex][option] !== undefined) {\n        return dbConfig[dbIndex][option];\n      } else {\n        return null;\n      }\n    } catch (error) {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n// Returns value of OPTION for specific TABLE and DBINDEX\n// NOTE: check for null value when this function is used\nexport function getTableConfig(dbIndex: number, table: string, option: string) {\n  if (dbIndex !== null && table !== null && option !== null) {\n    try {\n      let tableConfig = getDbConfig(dbIndex, \"tableRules\");\n\n      if (tableConfig[table][option] !== undefined) {\n        return tableConfig[table][option];\n      } else {\n        return null;\n      }\n    } catch (error) {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n// Returns value of OPTION for specific COLUMN and DBINDEX .. from the defined global configs\n// NOTE: do not use this function, it is called automatically from the getColumnConfig() function\nexport function getColumnConfigGlobal(\n  dbIndex: number,\n  column: string,\n  option: string\n) {\n  try {\n    if (getDbConfig(dbIndex, \"columnRulesGlobal\")) {\n      let allGlobalColumnConfigs = getDbConfig(dbIndex, \"columnRulesGlobal\")[\n        column\n      ];\n      if (\n        allGlobalColumnConfigs &&\n        allGlobalColumnConfigs[option] !== undefined\n      ) {\n        return allGlobalColumnConfigs[option];\n      } else {\n        return null;\n      }\n    }\n  } catch (error) {\n    return null;\n  }\n  return null;\n}\n\n// Returns value of OPTION for specific TABLE and COLUMN and DBINDEX\n// NOTE: check for null value when this function is used\nexport function getColumnConfig(\n  dbIndex: number,\n  table: string,\n  column: string,\n  option: string\n) {\n  if (\n    dbIndex !== null &&\n    table !== null &&\n    column !== null &&\n    option !== null\n  ) {\n    try {\n      let columnRules = getTableConfig(dbIndex, table, \"columnRules\");\n\n      if (\n        columnRules[column][option] !== null &&\n        columnRules[column][option] !== undefined\n      ) {\n        return columnRules[column][option];\n      } else {\n        return getColumnConfigGlobal(dbIndex, column, option);\n      }\n    } catch (error) {\n      return getColumnConfigGlobal(dbIndex, column, option);\n    }\n  } else {\n    return getColumnConfigGlobal(dbIndex, column, option);\n  }\n}\n\n// Returns true iff COLUMN is part of the default columns defined for TABLE and DBINDEX\nexport function isColumnInDefaultView(\n  dbIndex: number,\n  table: string,\n  column: string\n): Nullable<boolean> {\n  if (dbIndex !== null && table !== null && column !== null) {\n    try {\n      let defaultColumns = getTableConfig(dbIndex, table, \"defaultViewColumns\");\n\n      if (defaultColumns === null || defaultColumns === undefined) {\n        return null;\n      } else {\n        return inArray(column, defaultColumns);\n      }\n    } catch (error) {\n      return null;\n    }\n  }\n  return null;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n// Query Builder Methods\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Returns the initial query (i.e. pre-formatted default query for a table)\n// Convert this into a function that loads a default entry for ALL tables\n// If no rules are defined, it will return a blank default entry.\nexport function getQBRules() {\n  return {\n    condition: \"AND\",\n    rules: [\n      {\n        empty: true\n      }\n    ]\n  };\n}\n\n// Returns operator translations\nexport function getQBLang() {\n  return {\n    operators: {\n      regex: \"matches regex\"\n    }\n  };\n}\n\n// Returns the default operators\nexport function getQBOperators(): Array<any> {\n  return [\n    { type: \"equal\" },\n    { type: \"not_equal\" },\n    { type: \"in\" },\n    { type: \"not_in\" },\n    { type: \"less\" },\n    { type: \"less_or_equal\" },\n    { type: \"greater\" },\n    { type: \"greater_or_equal\" },\n    { type: \"between\" },\n    { type: \"not_between\" },\n    { type: \"begins_with\" },\n    { type: \"not_begins_with\" },\n    { type: \"contains\" },\n    { type: \"not_contains\" },\n    { type: \"ends_with\" },\n    { type: \"not_ends_with\" },\n    { type: \"is_empty\" },\n    { type: \"is_not_empty\" },\n    { type: \"is_null\" },\n    { type: \"is_not_null\" },\n    { type: \"regex\", nb_inputs: 1, multiple: false, apply_to: [\"string\"] }\n  ];\n}\n\n// Returns a list of columns\nexport function getQBFilters(\n  dbIndex: number,\n  table: string,\n  columns: string,\n  definitions: Nullable<any> = null\n) {\n  // allSupportedQBFilters are the ones present in the translateOperatorToPostgrest() method below...\n  let allSupportedQBFilters = [\n    \"equal\",\n    \"not_equal\",\n    \"greater\",\n    \"less\",\n    \"greater_or_equal\",\n    \"less_or_equal\",\n    \"is_not_null\",\n    \"is_null\",\n    \"in\",\n    \"contains\"\n  ];\n  let numericQBFilters = [\n    \"equal\",\n    \"not_equal\",\n    \"greater\",\n    \"less\",\n    \"greater_or_equal\",\n    \"less_or_equal\",\n    \"is_not_null\",\n    \"is_null\",\n    \"in\"\n  ];\n  let stringQBFilters = [\n    \"equal\",\n    \"not_equal\",\n    \"is_not_null\",\n    \"is_null\",\n    \"in\",\n    \"contains\"\n  ];\n  let booleanQBFilters = [\"equal\", \"not_equal\", \"is_not_null\", \"is_null\", \"in\"];\n\n  if (getDbConfig(dbIndex, \"regexSupport\") === true) {\n    allSupportedQBFilters.push(\"regex\");\n    stringQBFilters.push(\"regex\");\n  }\n\n  if (!columns || columns.length <= 0) {\n    return [{ id: \"error\", label: \"ERROR: select a view...\", type: \"string\" }];\n  }\n\n  let plain_strings_query_builder = [];\n  for (let i = 0; i < columns.length; i++) {\n    // PostgREST DEFINITIONS can be used to supplement TYPE and OPERATORS if they're not defined by the user\n    let type = getColumnConfig(dbIndex, table, columns[i], \"type\");\n    if (\n      type === null &&\n      definitions !== null &&\n      definitions[table][\"properties\"][columns[i]] !== null &&\n      definitions[table][\"properties\"][columns[i]] !== undefined\n    ) {\n      let pgRestType = definitions[table][\"properties\"][columns[i]][\"type\"];\n      if (pgRestType === \"number\" || pgRestType === \"numeric\") {\n        pgRestType = \"double\";\n      }\n      type = pgRestType;\n    }\n\n    let operators = getColumnConfig(dbIndex, table, columns[i], \"operators\");\n    if (operators === null && type !== null) {\n      if (type === \"integer\" || type === \"double\") {\n        operators = numericQBFilters;\n      } else if (type === \"string\") {\n        operators = stringQBFilters;\n      } else if (type === \"boolean\") {\n        operators = booleanQBFilters;\n      } else {\n        operators = allSupportedQBFilters;\n      }\n    }\n\n    plain_strings_query_builder.push({\n      id: columns[i],\n      label: getColumnConfig(dbIndex, table, columns[i], \"rename\"),\n      type: type,\n      input:\n        type === \"integer\" || type === \"double\"\n          ? \"text\"\n          : getColumnConfig(dbIndex, table, columns[i], \"input\"),\n      value_separator: \",\",\n      values: getColumnConfig(dbIndex, table, columns[i], \"values\"),\n      validation: getColumnConfig(dbIndex, table, columns[i], \"validation\"),\n      default_value: getColumnConfig(\n        dbIndex,\n        table,\n        columns[i],\n        \"defaultValue\"\n      ),\n      operators: operators\n    });\n  }\n\n  return plain_strings_query_builder;\n}\n\n// Accepts jQB operator, and returns PostgREST equivalent of it\nexport function translateOperatorToPostgrest(operator: string): string {\n  let dict = [\n    [\"equal\", \"eq\"],\n    [\"not_equal\", \"neq\"],\n    [\"greater\", \"gt\"],\n    [\"less\", \"lt\"],\n    [\"greater_or_equal\", \"gte\"],\n    [\"less_or_equal\", \"lte\"],\n    [\"is_not_null\", \"not.is\"],\n    [\"in\", \"in\"],\n    [\"contains\", \"ilike\"],\n    [\"regex\", \"rx\"],\n    [\"is_null\", \"is\"]\n  ];\n\n  for (let i = 0; i < dict.length; i++) {\n    if (dict[i][0] === operator) {\n      return dict[i][1];\n    }\n  }\n  return \"eq\";\n}\n\n// Accepts PostgREST operator, and returns jQB equivalent of it\nexport function translateOperatorTojQB(operator: string): string {\n  let dict = [\n    [\"eq\", \"equal\"],\n    [\"neq\", \"not_equal\"],\n    [\"gt\", \"greater\"],\n    [\"lt\", \"less\"],\n    [\"gte\", \"greater_or_equal\"],\n    [\"lte\", \"less_or_equal\"],\n    [\"not.s\", \"is_not_null\"],\n    [\"in\", \"in\"],\n    [\"ilike\", \"contains\"],\n    [\"rx\", \"regex\"],\n    [\"is\", \"is_null\"]\n  ];\n\n  for (let i = 0; i < dict.length; i++) {\n    if (dict[i][0] === operator) {\n      return dict[i][1];\n    }\n  }\n  return \"equal\";\n}\n\n// Accepts jQB operator, and returns HUMAN equivalent of it\nexport function translateOperatorToHuman(operator: string): string {\n  let dict = [\n    [\"equal\", \"=\"],\n    [\"not_equal\", \"!=\"],\n    [\"greater\", \">\"],\n    [\"less\", \"<\"],\n    [\"greater_or_equal\", \">=\"],\n    [\"less_or_equal\", \"<=\"],\n    [\"is_not_null\", \"is not NULL\"],\n    [\"in\", \"in\"],\n    [\"contains\", \"CONTAINS\"],\n    [\"regex\", \"matches\"],\n    [\"is_null\", \"is NULL\"]\n  ];\n\n  for (let i = 0; i < dict.length; i++) {\n    if (dict[i][0] === operator) {\n      return dict[i][1];\n    }\n  }\n  return operator;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n// Other Methods\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//\nexport function isJsonString(str: string): boolean {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n// searches for an array element in an array of arrays (2D only)\nexport function searchForArrayInArray(\n  element: Array<any>,\n  array: Array<any>\n): number {\n  for (let i = 0; i < array.length; i++) {\n    // Only search if lengths match\n    if (element.length === array[i].length) {\n      for (let j = 0; j < element.length; j++) {\n        if (JSON.stringify(element[j]) !== JSON.stringify(array[i][j])) {\n          break;\n        }\n        // Match FOUND, return the position of element in array .. which is index i\n        if (j === element.length - 1) {\n          return i;\n        }\n      }\n    }\n  }\n  return -1;\n}\n\n// returns true if ELEMENT is in ARRAY\nexport function inArray(element: any, array: Array<any>): boolean {\n  if (array && element)\n    if (element.constructor === Array) {\n      return searchForArrayInArray(element, array) > -1;\n    } else {\n      return array.indexOf(element) > -1;\n    }\n  else return false;\n}\n\n// returns index of ELEMENT is in ARRAY\nexport function elementPositionInArray(\n  element: any,\n  array: Array<any>\n): number {\n  if (array && element)\n    if (element.constructor === Array) {\n      return searchForArrayInArray(element, array);\n    } else {\n      return array.indexOf(element);\n    }\n  else return -1;\n}\n\nexport function moveArrayElementFromTo(\n  targetArray: Array<any>,\n  indexFrom: number,\n  indexTo: number\n): Array<any> {\n  let targetElement = targetArray[indexFrom];\n  let magicIncrement = (indexTo - indexFrom) / Math.abs(indexTo - indexFrom);\n\n  for (let e = indexFrom; e !== indexTo; e += magicIncrement) {\n    targetArray[e] = targetArray[e + magicIncrement];\n  }\n\n  targetArray[indexTo] = targetElement;\n  return targetArray;\n}\n\n// Opens the specified URL in a different tab\nexport function visitPage(url = \"https://www.google.ca\") {\n  window.open(url, \"_blank\");\n}\n\n// Extracts the keys from a JSON string DATA\nexport function getKeysFromJSON(data: any): Array<string> {\n  let keys = [];\n  for (let i in data) {\n    let val = data[i];\n    for (let j in val) {\n      let sub_key = j;\n      keys.push(sub_key);\n    }\n  }\n  return keys;\n}\n\n// Extracts unique values from an array ARR\nexport function arrNoDup(arr: Array<any>): Array<any> {\n  var temp: any = {};\n  for (var i = 0; i < arr.length; i++) {\n    temp[arr[i]] = true;\n  }\n  var ret = [];\n  for (var k in temp) {\n    ret.push(k);\n  }\n  return ret;\n}\n"],"sourceRoot":""}